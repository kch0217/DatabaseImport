/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CourseGroupsCoursecohortRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseGroupsCoursecohort extends TableImpl<CourseGroupsCoursecohortRecord> {

    private static final long serialVersionUID = 1429124136;

    /**
     * The reference instance of <code>bitnami_edx.course_groups_coursecohort</code>
     */
    public static final CourseGroupsCoursecohort COURSE_GROUPS_COURSECOHORT = new CourseGroupsCoursecohort();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseGroupsCoursecohortRecord> getRecordType() {
        return CourseGroupsCoursecohortRecord.class;
    }

    /**
     * The column <code>bitnami_edx.course_groups_coursecohort.id</code>.
     */
    public final TableField<CourseGroupsCoursecohortRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_coursecohort.assignment_type</code>.
     */
    public final TableField<CourseGroupsCoursecohortRecord, String> ASSIGNMENT_TYPE = createField("assignment_type", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_coursecohort.course_user_group_id</code>.
     */
    public final TableField<CourseGroupsCoursecohortRecord, Integer> COURSE_USER_GROUP_ID = createField("course_user_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.course_groups_coursecohort</code> table reference
     */
    public CourseGroupsCoursecohort() {
        this("course_groups_coursecohort", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.course_groups_coursecohort</code> table reference
     */
    public CourseGroupsCoursecohort(String alias) {
        this(alias, COURSE_GROUPS_COURSECOHORT);
    }

    private CourseGroupsCoursecohort(String alias, Table<CourseGroupsCoursecohortRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseGroupsCoursecohort(String alias, Table<CourseGroupsCoursecohortRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseGroupsCoursecohortRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_GROUPS_COURSECOHORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseGroupsCoursecohortRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_GROUPS_COURSECOHORT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseGroupsCoursecohortRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseGroupsCoursecohortRecord>>asList(Keys.KEY_COURSE_GROUPS_COURSECOHORT_PRIMARY, Keys.KEY_COURSE_GROUPS_COURSECOHORT_COURSE_USER_GROUP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CourseGroupsCoursecohortRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CourseGroupsCoursecohortRecord, ?>>asList(Keys.D339C347A8FAB561C2E92EA09F250DF8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseGroupsCoursecohort as(String alias) {
        return new CourseGroupsCoursecohort(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseGroupsCoursecohort rename(String name) {
        return new CourseGroupsCoursecohort(name, null);
    }
}
