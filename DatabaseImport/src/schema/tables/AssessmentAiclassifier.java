/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.AssessmentAiclassifierRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssessmentAiclassifier extends TableImpl<AssessmentAiclassifierRecord> {

    private static final long serialVersionUID = 401317043;

    /**
     * The reference instance of <code>bitnami_edx.assessment_aiclassifier</code>
     */
    public static final AssessmentAiclassifier ASSESSMENT_AICLASSIFIER = new AssessmentAiclassifier();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssessmentAiclassifierRecord> getRecordType() {
        return AssessmentAiclassifierRecord.class;
    }

    /**
     * The column <code>bitnami_edx.assessment_aiclassifier.id</code>.
     */
    public final TableField<AssessmentAiclassifierRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_aiclassifier.classifier_data</code>.
     */
    public final TableField<AssessmentAiclassifierRecord, String> CLASSIFIER_DATA = createField("classifier_data", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_aiclassifier.classifier_set_id</code>.
     */
    public final TableField<AssessmentAiclassifierRecord, Integer> CLASSIFIER_SET_ID = createField("classifier_set_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_aiclassifier.criterion_id</code>.
     */
    public final TableField<AssessmentAiclassifierRecord, Integer> CRITERION_ID = createField("criterion_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.assessment_aiclassifier</code> table reference
     */
    public AssessmentAiclassifier() {
        this("assessment_aiclassifier", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.assessment_aiclassifier</code> table reference
     */
    public AssessmentAiclassifier(String alias) {
        this(alias, ASSESSMENT_AICLASSIFIER);
    }

    private AssessmentAiclassifier(String alias, Table<AssessmentAiclassifierRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssessmentAiclassifier(String alias, Table<AssessmentAiclassifierRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssessmentAiclassifierRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ASSESSMENT_AICLASSIFIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssessmentAiclassifierRecord> getPrimaryKey() {
        return Keys.KEY_ASSESSMENT_AICLASSIFIER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssessmentAiclassifierRecord>> getKeys() {
        return Arrays.<UniqueKey<AssessmentAiclassifierRecord>>asList(Keys.KEY_ASSESSMENT_AICLASSIFIER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AssessmentAiclassifierRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AssessmentAiclassifierRecord, ?>>asList(Keys.D3BD45D5E3C9CFDC4F3B442119ADEBE8, Keys.ASSESSM_CRITERION_ID_275DB29F2A0E1711_FK_ASSESSMENT_CRITERION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAiclassifier as(String alias) {
        return new AssessmentAiclassifier(alias, this);
    }

    /**
     * Rename this table
     */
    public AssessmentAiclassifier rename(String name) {
        return new AssessmentAiclassifier(name, null);
    }
}
