/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.WikiArticlepluginRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiArticleplugin extends TableImpl<WikiArticlepluginRecord> {

    private static final long serialVersionUID = 130338522;

    /**
     * The reference instance of <code>bitnami_edx.wiki_articleplugin</code>
     */
    public static final WikiArticleplugin WIKI_ARTICLEPLUGIN = new WikiArticleplugin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WikiArticlepluginRecord> getRecordType() {
        return WikiArticlepluginRecord.class;
    }

    /**
     * The column <code>bitnami_edx.wiki_articleplugin.id</code>.
     */
    public final TableField<WikiArticlepluginRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articleplugin.deleted</code>.
     */
    public final TableField<WikiArticlepluginRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articleplugin.created</code>.
     */
    public final TableField<WikiArticlepluginRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articleplugin.article_id</code>.
     */
    public final TableField<WikiArticlepluginRecord, Integer> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.wiki_articleplugin</code> table reference
     */
    public WikiArticleplugin() {
        this("wiki_articleplugin", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.wiki_articleplugin</code> table reference
     */
    public WikiArticleplugin(String alias) {
        this(alias, WIKI_ARTICLEPLUGIN);
    }

    private WikiArticleplugin(String alias, Table<WikiArticlepluginRecord> aliased) {
        this(alias, aliased, null);
    }

    private WikiArticleplugin(String alias, Table<WikiArticlepluginRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WikiArticlepluginRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WIKI_ARTICLEPLUGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WikiArticlepluginRecord> getPrimaryKey() {
        return Keys.KEY_WIKI_ARTICLEPLUGIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WikiArticlepluginRecord>> getKeys() {
        return Arrays.<UniqueKey<WikiArticlepluginRecord>>asList(Keys.KEY_WIKI_ARTICLEPLUGIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WikiArticlepluginRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WikiArticlepluginRecord, ?>>asList(Keys.WIKI_ARTICLEPLUGI_ARTICLE_ID_2D2C794AF030D9DD_FK_WIKI_ARTICLE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiArticleplugin as(String alias) {
        return new WikiArticleplugin(alias, this);
    }

    /**
     * Rename this table
     */
    public WikiArticleplugin rename(String name) {
        return new WikiArticleplugin(name, null);
    }
}
