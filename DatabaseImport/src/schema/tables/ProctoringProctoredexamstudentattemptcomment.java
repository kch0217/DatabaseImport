/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ProctoringProctoredexamstudentattemptcommentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProctoringProctoredexamstudentattemptcomment extends TableImpl<ProctoringProctoredexamstudentattemptcommentRecord> {

    private static final long serialVersionUID = -2030083147;

    /**
     * The reference instance of <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment</code>
     */
    public static final ProctoringProctoredexamstudentattemptcomment PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTCOMMENT = new ProctoringProctoredexamstudentattemptcomment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProctoringProctoredexamstudentattemptcommentRecord> getRecordType() {
        return ProctoringProctoredexamstudentattemptcommentRecord.class;
    }

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment.id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptcommentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment.created</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptcommentRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment.modified</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptcommentRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment.start_time</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptcommentRecord, Integer> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment.stop_time</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptcommentRecord, Integer> STOP_TIME = createField("stop_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment.duration</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptcommentRecord, Integer> DURATION = createField("duration", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment.comment</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptcommentRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment.status</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptcommentRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment.review_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptcommentRecord, Integer> REVIEW_ID = createField("review_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment</code> table reference
     */
    public ProctoringProctoredexamstudentattemptcomment() {
        this("proctoring_proctoredexamstudentattemptcomment", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment</code> table reference
     */
    public ProctoringProctoredexamstudentattemptcomment(String alias) {
        this(alias, PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTCOMMENT);
    }

    private ProctoringProctoredexamstudentattemptcomment(String alias, Table<ProctoringProctoredexamstudentattemptcommentRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProctoringProctoredexamstudentattemptcomment(String alias, Table<ProctoringProctoredexamstudentattemptcommentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProctoringProctoredexamstudentattemptcommentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTCOMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProctoringProctoredexamstudentattemptcommentRecord> getPrimaryKey() {
        return Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTCOMMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProctoringProctoredexamstudentattemptcommentRecord>> getKeys() {
        return Arrays.<UniqueKey<ProctoringProctoredexamstudentattemptcommentRecord>>asList(Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTCOMMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProctoringProctoredexamstudentattemptcommentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProctoringProctoredexamstudentattemptcommentRecord, ?>>asList(Keys.D596DD9C7D948D9256C2E29E6194B5E7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptcomment as(String alias) {
        return new ProctoringProctoredexamstudentattemptcomment(alias, this);
    }

    /**
     * Rename this table
     */
    public ProctoringProctoredexamstudentattemptcomment rename(String name) {
        return new ProctoringProctoredexamstudentattemptcomment(name, null);
    }
}
