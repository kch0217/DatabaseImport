/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.AuthGroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthGroup extends TableImpl<AuthGroupRecord> {

    private static final long serialVersionUID = -1467693359;

    /**
     * The reference instance of <code>bitnami_edx.auth_group</code>
     */
    public static final AuthGroup AUTH_GROUP = new AuthGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthGroupRecord> getRecordType() {
        return AuthGroupRecord.class;
    }

    /**
     * The column <code>bitnami_edx.auth_group.id</code>.
     */
    public final TableField<AuthGroupRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.auth_group.name</code>.
     */
    public final TableField<AuthGroupRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.auth_group</code> table reference
     */
    public AuthGroup() {
        this("auth_group", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.auth_group</code> table reference
     */
    public AuthGroup(String alias) {
        this(alias, AUTH_GROUP);
    }

    private AuthGroup(String alias, Table<AuthGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuthGroup(String alias, Table<AuthGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AuthGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_AUTH_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AuthGroupRecord> getPrimaryKey() {
        return Keys.KEY_AUTH_GROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AuthGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<AuthGroupRecord>>asList(Keys.KEY_AUTH_GROUP_PRIMARY, Keys.KEY_AUTH_GROUP_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthGroup as(String alias) {
        return new AuthGroup(alias, this);
    }

    /**
     * Rename this table
     */
    public AuthGroup rename(String name) {
        return new AuthGroup(name, null);
    }
}
