/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ProctoringProctoredexamreviewpolicyRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProctoringProctoredexamreviewpolicy extends TableImpl<ProctoringProctoredexamreviewpolicyRecord> {

    private static final long serialVersionUID = -178265477;

    /**
     * The reference instance of <code>bitnami_edx.proctoring_proctoredexamreviewpolicy</code>
     */
    public static final ProctoringProctoredexamreviewpolicy PROCTORING_PROCTOREDEXAMREVIEWPOLICY = new ProctoringProctoredexamreviewpolicy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProctoringProctoredexamreviewpolicyRecord> getRecordType() {
        return ProctoringProctoredexamreviewpolicyRecord.class;
    }

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.id</code>.
     */
    public final TableField<ProctoringProctoredexamreviewpolicyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.created</code>.
     */
    public final TableField<ProctoringProctoredexamreviewpolicyRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.modified</code>.
     */
    public final TableField<ProctoringProctoredexamreviewpolicyRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.review_policy</code>.
     */
    public final TableField<ProctoringProctoredexamreviewpolicyRecord, String> REVIEW_POLICY = createField("review_policy", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.proctored_exam_id</code>.
     */
    public final TableField<ProctoringProctoredexamreviewpolicyRecord, Integer> PROCTORED_EXAM_ID = createField("proctored_exam_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.set_by_user_id</code>.
     */
    public final TableField<ProctoringProctoredexamreviewpolicyRecord, Integer> SET_BY_USER_ID = createField("set_by_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.proctoring_proctoredexamreviewpolicy</code> table reference
     */
    public ProctoringProctoredexamreviewpolicy() {
        this("proctoring_proctoredexamreviewpolicy", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.proctoring_proctoredexamreviewpolicy</code> table reference
     */
    public ProctoringProctoredexamreviewpolicy(String alias) {
        this(alias, PROCTORING_PROCTOREDEXAMREVIEWPOLICY);
    }

    private ProctoringProctoredexamreviewpolicy(String alias, Table<ProctoringProctoredexamreviewpolicyRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProctoringProctoredexamreviewpolicy(String alias, Table<ProctoringProctoredexamreviewpolicyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProctoringProctoredexamreviewpolicyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROCTORING_PROCTOREDEXAMREVIEWPOLICY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProctoringProctoredexamreviewpolicyRecord> getPrimaryKey() {
        return Keys.KEY_PROCTORING_PROCTOREDEXAMREVIEWPOLICY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProctoringProctoredexamreviewpolicyRecord>> getKeys() {
        return Arrays.<UniqueKey<ProctoringProctoredexamreviewpolicyRecord>>asList(Keys.KEY_PROCTORING_PROCTOREDEXAMREVIEWPOLICY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProctoringProctoredexamreviewpolicyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProctoringProctoredexamreviewpolicyRecord, ?>>asList(Keys.D32BAB97500954B362D3F768DD89B6DA, Keys.PROCTORING_PROCT_SET_BY_USER_ID_75A66580AA44CD84_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamreviewpolicy as(String alias) {
        return new ProctoringProctoredexamreviewpolicy(alias, this);
    }

    /**
     * Rename this table
     */
    public ProctoringProctoredexamreviewpolicy rename(String name) {
        return new ProctoringProctoredexamreviewpolicy(name, null);
    }
}
