/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ShoppingcartCourseregcodeitemannotationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShoppingcartCourseregcodeitemannotation extends TableImpl<ShoppingcartCourseregcodeitemannotationRecord> {

    private static final long serialVersionUID = 1946897518;

    /**
     * The reference instance of <code>bitnami_edx.shoppingcart_courseregcodeitemannotation</code>
     */
    public static final ShoppingcartCourseregcodeitemannotation SHOPPINGCART_COURSEREGCODEITEMANNOTATION = new ShoppingcartCourseregcodeitemannotation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShoppingcartCourseregcodeitemannotationRecord> getRecordType() {
        return ShoppingcartCourseregcodeitemannotationRecord.class;
    }

    /**
     * The column <code>bitnami_edx.shoppingcart_courseregcodeitemannotation.id</code>.
     */
    public final TableField<ShoppingcartCourseregcodeitemannotationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_courseregcodeitemannotation.course_id</code>.
     */
    public final TableField<ShoppingcartCourseregcodeitemannotationRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_courseregcodeitemannotation.annotation</code>.
     */
    public final TableField<ShoppingcartCourseregcodeitemannotationRecord, String> ANNOTATION = createField("annotation", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>bitnami_edx.shoppingcart_courseregcodeitemannotation</code> table reference
     */
    public ShoppingcartCourseregcodeitemannotation() {
        this("shoppingcart_courseregcodeitemannotation", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.shoppingcart_courseregcodeitemannotation</code> table reference
     */
    public ShoppingcartCourseregcodeitemannotation(String alias) {
        this(alias, SHOPPINGCART_COURSEREGCODEITEMANNOTATION);
    }

    private ShoppingcartCourseregcodeitemannotation(String alias, Table<ShoppingcartCourseregcodeitemannotationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShoppingcartCourseregcodeitemannotation(String alias, Table<ShoppingcartCourseregcodeitemannotationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShoppingcartCourseregcodeitemannotationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHOPPINGCART_COURSEREGCODEITEMANNOTATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShoppingcartCourseregcodeitemannotationRecord> getPrimaryKey() {
        return Keys.KEY_SHOPPINGCART_COURSEREGCODEITEMANNOTATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShoppingcartCourseregcodeitemannotationRecord>> getKeys() {
        return Arrays.<UniqueKey<ShoppingcartCourseregcodeitemannotationRecord>>asList(Keys.KEY_SHOPPINGCART_COURSEREGCODEITEMANNOTATION_PRIMARY, Keys.KEY_SHOPPINGCART_COURSEREGCODEITEMANNOTATION_COURSE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartCourseregcodeitemannotation as(String alias) {
        return new ShoppingcartCourseregcodeitemannotation(alias, this);
    }

    /**
     * Rename this table
     */
    public ShoppingcartCourseregcodeitemannotation rename(String name) {
        return new ShoppingcartCourseregcodeitemannotation(name, null);
    }
}
