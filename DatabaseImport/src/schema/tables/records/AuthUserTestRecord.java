/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.AuthUserTest;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthUserTestRecord extends UpdatableRecordImpl<AuthUserTestRecord> implements Record11<Integer, String, Timestamp, Byte, String, String, String, String, Byte, Byte, Timestamp> {

    private static final long serialVersionUID = 124722285;

    /**
     * Setter for <code>bitnami_edx.auth_user_test.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.password</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.password</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.last_login</code>.
     */
    public void setLastLogin(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.last_login</code>.
     */
    public Timestamp getLastLogin() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.is_superuser</code>.
     */
    public void setIsSuperuser(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.is_superuser</code>.
     */
    public Byte getIsSuperuser() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.username</code>.
     */
    public void setUsername(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.username</code>.
     */
    public String getUsername() {
        return (String) get(4);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.first_name</code>.
     */
    public void setFirstName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.last_name</code>.
     */
    public void setLastName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.last_name</code>.
     */
    public String getLastName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.email</code>.
     */
    public void setEmail(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.email</code>.
     */
    public String getEmail() {
        return (String) get(7);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.is_staff</code>.
     */
    public void setIsStaff(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.is_staff</code>.
     */
    public Byte getIsStaff() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.is_active</code>.
     */
    public void setIsActive(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>bitnami_edx.auth_user_test.date_joined</code>.
     */
    public void setDateJoined(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_user_test.date_joined</code>.
     */
    public Timestamp getDateJoined() {
        return (Timestamp) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, String, Timestamp, Byte, String, String, String, String, Byte, Byte, Timestamp> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, String, Timestamp, Byte, String, String, String, String, Byte, Byte, Timestamp> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AuthUserTest.AUTH_USER_TEST.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AuthUserTest.AUTH_USER_TEST.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return AuthUserTest.AUTH_USER_TEST.LAST_LOGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return AuthUserTest.AUTH_USER_TEST.IS_SUPERUSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return AuthUserTest.AUTH_USER_TEST.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return AuthUserTest.AUTH_USER_TEST.FIRST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return AuthUserTest.AUTH_USER_TEST.LAST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return AuthUserTest.AUTH_USER_TEST.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return AuthUserTest.AUTH_USER_TEST.IS_STAFF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return AuthUserTest.AUTH_USER_TEST.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return AuthUserTest.AUTH_USER_TEST.DATE_JOINED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getIsSuperuser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getLastName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getIsStaff();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getDateJoined();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value2(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value3(Timestamp value) {
        setLastLogin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value4(Byte value) {
        setIsSuperuser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value5(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value6(String value) {
        setFirstName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value7(String value) {
        setLastName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value8(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value9(Byte value) {
        setIsStaff(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value10(Byte value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord value11(Timestamp value) {
        setDateJoined(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserTestRecord values(Integer value1, String value2, Timestamp value3, Byte value4, String value5, String value6, String value7, String value8, Byte value9, Byte value10, Timestamp value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthUserTestRecord
     */
    public AuthUserTestRecord() {
        super(AuthUserTest.AUTH_USER_TEST);
    }

    /**
     * Create a detached, initialised AuthUserTestRecord
     */
    public AuthUserTestRecord(Integer id, String password, Timestamp lastLogin, Byte isSuperuser, String username, String firstName, String lastName, String email, Byte isStaff, Byte isActive, Timestamp dateJoined) {
        super(AuthUserTest.AUTH_USER_TEST);

        set(0, id);
        set(1, password);
        set(2, lastLogin);
        set(3, isSuperuser);
        set(4, username);
        set(5, firstName);
        set(6, lastName);
        set(7, email);
        set(8, isStaff);
        set(9, isActive);
        set(10, dateJoined);
    }
}
