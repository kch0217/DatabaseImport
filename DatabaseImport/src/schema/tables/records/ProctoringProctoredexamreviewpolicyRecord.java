/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.ProctoringProctoredexamreviewpolicy;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProctoringProctoredexamreviewpolicyRecord extends UpdatableRecordImpl<ProctoringProctoredexamreviewpolicyRecord> implements Record6<Integer, Timestamp, Timestamp, String, Integer, Integer> {

    private static final long serialVersionUID = -1376234873;

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.modified</code>.
     */
    public void setModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.modified</code>.
     */
    public Timestamp getModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.review_policy</code>.
     */
    public void setReviewPolicy(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.review_policy</code>.
     */
    public String getReviewPolicy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.proctored_exam_id</code>.
     */
    public void setProctoredExamId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.proctored_exam_id</code>.
     */
    public Integer getProctoredExamId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.set_by_user_id</code>.
     */
    public void setSetByUserId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamreviewpolicy.set_by_user_id</code>.
     */
    public Integer getSetByUserId() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Timestamp, Timestamp, String, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Timestamp, Timestamp, String, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY.MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY.REVIEW_POLICY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY.PROCTORED_EXAM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY.SET_BY_USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getReviewPolicy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getProctoredExamId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getSetByUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamreviewpolicyRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamreviewpolicyRecord value2(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamreviewpolicyRecord value3(Timestamp value) {
        setModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamreviewpolicyRecord value4(String value) {
        setReviewPolicy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamreviewpolicyRecord value5(Integer value) {
        setProctoredExamId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamreviewpolicyRecord value6(Integer value) {
        setSetByUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamreviewpolicyRecord values(Integer value1, Timestamp value2, Timestamp value3, String value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProctoringProctoredexamreviewpolicyRecord
     */
    public ProctoringProctoredexamreviewpolicyRecord() {
        super(ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY);
    }

    /**
     * Create a detached, initialised ProctoringProctoredexamreviewpolicyRecord
     */
    public ProctoringProctoredexamreviewpolicyRecord(Integer id, Timestamp created, Timestamp modified, String reviewPolicy, Integer proctoredExamId, Integer setByUserId) {
        super(ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY);

        set(0, id);
        set(1, created);
        set(2, modified);
        set(3, reviewPolicy);
        set(4, proctoredExamId);
        set(5, setByUserId);
    }
}
