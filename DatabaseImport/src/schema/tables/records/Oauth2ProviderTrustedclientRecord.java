/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.Oauth2ProviderTrustedclient;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Oauth2ProviderTrustedclientRecord extends UpdatableRecordImpl<Oauth2ProviderTrustedclientRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1500104445;

    /**
     * Setter for <code>bitnami_edx.oauth2_provider_trustedclient.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.oauth2_provider_trustedclient.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.oauth2_provider_trustedclient.client_id</code>.
     */
    public void setClientId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.oauth2_provider_trustedclient.client_id</code>.
     */
    public Integer getClientId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Oauth2ProviderTrustedclient.OAUTH2_PROVIDER_TRUSTEDCLIENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Oauth2ProviderTrustedclient.OAUTH2_PROVIDER_TRUSTEDCLIENT.CLIENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getClientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Oauth2ProviderTrustedclientRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Oauth2ProviderTrustedclientRecord value2(Integer value) {
        setClientId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Oauth2ProviderTrustedclientRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Oauth2ProviderTrustedclientRecord
     */
    public Oauth2ProviderTrustedclientRecord() {
        super(Oauth2ProviderTrustedclient.OAUTH2_PROVIDER_TRUSTEDCLIENT);
    }

    /**
     * Create a detached, initialised Oauth2ProviderTrustedclientRecord
     */
    public Oauth2ProviderTrustedclientRecord(Integer id, Integer clientId) {
        super(Oauth2ProviderTrustedclient.OAUTH2_PROVIDER_TRUSTEDCLIENT);

        set(0, id);
        set(1, clientId);
    }
}
