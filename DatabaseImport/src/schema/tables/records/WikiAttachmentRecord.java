/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.WikiAttachment;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiAttachmentRecord extends UpdatableRecordImpl<WikiAttachmentRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = -1050645933;

    /**
     * Setter for <code>bitnami_edx.wiki_attachment.reusableplugin_ptr_id</code>.
     */
    public void setReusablepluginPtrId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_attachment.reusableplugin_ptr_id</code>.
     */
    public Integer getReusablepluginPtrId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_attachment.original_filename</code>.
     */
    public void setOriginalFilename(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_attachment.original_filename</code>.
     */
    public String getOriginalFilename() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_attachment.current_revision_id</code>.
     */
    public void setCurrentRevisionId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_attachment.current_revision_id</code>.
     */
    public Integer getCurrentRevisionId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return WikiAttachment.WIKI_ATTACHMENT.REUSABLEPLUGIN_PTR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return WikiAttachment.WIKI_ATTACHMENT.ORIGINAL_FILENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return WikiAttachment.WIKI_ATTACHMENT.CURRENT_REVISION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getReusablepluginPtrId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getOriginalFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCurrentRevisionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiAttachmentRecord value1(Integer value) {
        setReusablepluginPtrId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiAttachmentRecord value2(String value) {
        setOriginalFilename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiAttachmentRecord value3(Integer value) {
        setCurrentRevisionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiAttachmentRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WikiAttachmentRecord
     */
    public WikiAttachmentRecord() {
        super(WikiAttachment.WIKI_ATTACHMENT);
    }

    /**
     * Create a detached, initialised WikiAttachmentRecord
     */
    public WikiAttachmentRecord(Integer reusablepluginPtrId, String originalFilename, Integer currentRevisionId) {
        super(WikiAttachment.WIKI_ATTACHMENT);

        set(0, reusablepluginPtrId);
        set(1, originalFilename);
        set(2, currentRevisionId);
    }
}
