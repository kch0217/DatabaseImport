/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.StudentUserstanding;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentUserstandingRecord extends UpdatableRecordImpl<StudentUserstandingRecord> implements Record5<Integer, String, Timestamp, Integer, Integer> {

    private static final long serialVersionUID = 2137592180;

    /**
     * Setter for <code>bitnami_edx.student_userstanding.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_userstanding.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.student_userstanding.account_status</code>.
     */
    public void setAccountStatus(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_userstanding.account_status</code>.
     */
    public String getAccountStatus() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.student_userstanding.standing_last_changed_at</code>.
     */
    public void setStandingLastChangedAt(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_userstanding.standing_last_changed_at</code>.
     */
    public Timestamp getStandingLastChangedAt() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.student_userstanding.changed_by_id</code>.
     */
    public void setChangedById(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_userstanding.changed_by_id</code>.
     */
    public Integer getChangedById() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>bitnami_edx.student_userstanding.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_userstanding.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Timestamp, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Timestamp, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return StudentUserstanding.STUDENT_USERSTANDING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return StudentUserstanding.STUDENT_USERSTANDING.ACCOUNT_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return StudentUserstanding.STUDENT_USERSTANDING.STANDING_LAST_CHANGED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return StudentUserstanding.STUDENT_USERSTANDING.CHANGED_BY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return StudentUserstanding.STUDENT_USERSTANDING.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAccountStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getStandingLastChangedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getChangedById();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentUserstandingRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentUserstandingRecord value2(String value) {
        setAccountStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentUserstandingRecord value3(Timestamp value) {
        setStandingLastChangedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentUserstandingRecord value4(Integer value) {
        setChangedById(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentUserstandingRecord value5(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentUserstandingRecord values(Integer value1, String value2, Timestamp value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentUserstandingRecord
     */
    public StudentUserstandingRecord() {
        super(StudentUserstanding.STUDENT_USERSTANDING);
    }

    /**
     * Create a detached, initialised StudentUserstandingRecord
     */
    public StudentUserstandingRecord(Integer id, String accountStatus, Timestamp standingLastChangedAt, Integer changedById, Integer userId) {
        super(StudentUserstanding.STUDENT_USERSTANDING);

        set(0, id);
        set(1, accountStatus);
        set(2, standingLastChangedAt);
        set(3, changedById);
        set(4, userId);
    }
}
