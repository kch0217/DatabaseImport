/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.AssessmentAssessment;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssessmentAssessmentRecord extends UpdatableRecordImpl<AssessmentAssessmentRecord> implements Record7<Integer, String, Timestamp, String, String, String, Integer> {

    private static final long serialVersionUID = 1497761056;

    /**
     * Setter for <code>bitnami_edx.assessment_assessment.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.assessment_assessment.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.assessment_assessment.submission_uuid</code>.
     */
    public void setSubmissionUuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.assessment_assessment.submission_uuid</code>.
     */
    public String getSubmissionUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.assessment_assessment.scored_at</code>.
     */
    public void setScoredAt(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.assessment_assessment.scored_at</code>.
     */
    public Timestamp getScoredAt() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.assessment_assessment.scorer_id</code>.
     */
    public void setScorerId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.assessment_assessment.scorer_id</code>.
     */
    public String getScorerId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>bitnami_edx.assessment_assessment.score_type</code>.
     */
    public void setScoreType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bitnami_edx.assessment_assessment.score_type</code>.
     */
    public String getScoreType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>bitnami_edx.assessment_assessment.feedback</code>.
     */
    public void setFeedback(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>bitnami_edx.assessment_assessment.feedback</code>.
     */
    public String getFeedback() {
        return (String) get(5);
    }

    /**
     * Setter for <code>bitnami_edx.assessment_assessment.rubric_id</code>.
     */
    public void setRubricId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>bitnami_edx.assessment_assessment.rubric_id</code>.
     */
    public Integer getRubricId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, Timestamp, String, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, Timestamp, String, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AssessmentAssessment.ASSESSMENT_ASSESSMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AssessmentAssessment.ASSESSMENT_ASSESSMENT.SUBMISSION_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return AssessmentAssessment.ASSESSMENT_ASSESSMENT.SCORED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return AssessmentAssessment.ASSESSMENT_ASSESSMENT.SCORER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return AssessmentAssessment.ASSESSMENT_ASSESSMENT.SCORE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return AssessmentAssessment.ASSESSMENT_ASSESSMENT.FEEDBACK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return AssessmentAssessment.ASSESSMENT_ASSESSMENT.RUBRIC_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSubmissionUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getScoredAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getScorerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getScoreType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFeedback();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getRubricId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAssessmentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAssessmentRecord value2(String value) {
        setSubmissionUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAssessmentRecord value3(Timestamp value) {
        setScoredAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAssessmentRecord value4(String value) {
        setScorerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAssessmentRecord value5(String value) {
        setScoreType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAssessmentRecord value6(String value) {
        setFeedback(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAssessmentRecord value7(Integer value) {
        setRubricId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAssessmentRecord values(Integer value1, String value2, Timestamp value3, String value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssessmentAssessmentRecord
     */
    public AssessmentAssessmentRecord() {
        super(AssessmentAssessment.ASSESSMENT_ASSESSMENT);
    }

    /**
     * Create a detached, initialised AssessmentAssessmentRecord
     */
    public AssessmentAssessmentRecord(Integer id, String submissionUuid, Timestamp scoredAt, String scorerId, String scoreType, String feedback, Integer rubricId) {
        super(AssessmentAssessment.ASSESSMENT_ASSESSMENT);

        set(0, id);
        set(1, submissionUuid);
        set(2, scoredAt);
        set(3, scorerId);
        set(4, scoreType);
        set(5, feedback);
        set(6, rubricId);
    }
}
