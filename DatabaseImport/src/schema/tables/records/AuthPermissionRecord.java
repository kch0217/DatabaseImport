/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.AuthPermission;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthPermissionRecord extends UpdatableRecordImpl<AuthPermissionRecord> implements Record4<Integer, String, Integer, String> {

    private static final long serialVersionUID = -1852052630;

    /**
     * Setter for <code>bitnami_edx.auth_permission.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_permission.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.auth_permission.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_permission.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.auth_permission.content_type_id</code>.
     */
    public void setContentTypeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_permission.content_type_id</code>.
     */
    public Integer getContentTypeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.auth_permission.codename</code>.
     */
    public void setCodename(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.auth_permission.codename</code>.
     */
    public String getCodename() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AuthPermission.AUTH_PERMISSION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AuthPermission.AUTH_PERMISSION.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return AuthPermission.AUTH_PERMISSION.CONTENT_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return AuthPermission.AUTH_PERMISSION.CODENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getContentTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCodename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthPermissionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthPermissionRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthPermissionRecord value3(Integer value) {
        setContentTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthPermissionRecord value4(String value) {
        setCodename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthPermissionRecord values(Integer value1, String value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthPermissionRecord
     */
    public AuthPermissionRecord() {
        super(AuthPermission.AUTH_PERMISSION);
    }

    /**
     * Create a detached, initialised AuthPermissionRecord
     */
    public AuthPermissionRecord(Integer id, String name, Integer contentTypeId, String codename) {
        super(AuthPermission.AUTH_PERMISSION);

        set(0, id);
        set(1, name);
        set(2, contentTypeId);
        set(3, codename);
    }
}
