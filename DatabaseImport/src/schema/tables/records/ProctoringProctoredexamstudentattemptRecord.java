/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.ProctoringProctoredexamstudentattempt;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProctoringProctoredexamstudentattemptRecord extends UpdatableRecordImpl<ProctoringProctoredexamstudentattemptRecord> implements Record18<Integer, Timestamp, Timestamp, Timestamp, Timestamp, Timestamp, String, String, String, Integer, String, Byte, Byte, String, Integer, Integer, Integer, Byte> {

    private static final long serialVersionUID = 79553836;

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.modified</code>.
     */
    public void setModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.modified</code>.
     */
    public Timestamp getModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.started_at</code>.
     */
    public void setStartedAt(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.started_at</code>.
     */
    public Timestamp getStartedAt() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.completed_at</code>.
     */
    public void setCompletedAt(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.completed_at</code>.
     */
    public Timestamp getCompletedAt() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.last_poll_timestamp</code>.
     */
    public void setLastPollTimestamp(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.last_poll_timestamp</code>.
     */
    public Timestamp getLastPollTimestamp() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.last_poll_ipaddr</code>.
     */
    public void setLastPollIpaddr(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.last_poll_ipaddr</code>.
     */
    public String getLastPollIpaddr() {
        return (String) get(6);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.attempt_code</code>.
     */
    public void setAttemptCode(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.attempt_code</code>.
     */
    public String getAttemptCode() {
        return (String) get(7);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.external_id</code>.
     */
    public void setExternalId(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.external_id</code>.
     */
    public String getExternalId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.allowed_time_limit_mins</code>.
     */
    public void setAllowedTimeLimitMins(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.allowed_time_limit_mins</code>.
     */
    public Integer getAllowedTimeLimitMins() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.status</code>.
     */
    public void setStatus(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.status</code>.
     */
    public String getStatus() {
        return (String) get(10);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.taking_as_proctored</code>.
     */
    public void setTakingAsProctored(Byte value) {
        set(11, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.taking_as_proctored</code>.
     */
    public Byte getTakingAsProctored() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.is_sample_attempt</code>.
     */
    public void setIsSampleAttempt(Byte value) {
        set(12, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.is_sample_attempt</code>.
     */
    public Byte getIsSampleAttempt() {
        return (Byte) get(12);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.student_name</code>.
     */
    public void setStudentName(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.student_name</code>.
     */
    public String getStudentName() {
        return (String) get(13);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.review_policy_id</code>.
     */
    public void setReviewPolicyId(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.review_policy_id</code>.
     */
    public Integer getReviewPolicyId() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.proctored_exam_id</code>.
     */
    public void setProctoredExamId(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.proctored_exam_id</code>.
     */
    public Integer getProctoredExamId() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.is_status_acknowledged</code>.
     */
    public void setIsStatusAcknowledged(Byte value) {
        set(17, value);
    }

    /**
     * Getter for <code>bitnami_edx.proctoring_proctoredexamstudentattempt.is_status_acknowledged</code>.
     */
    public Byte getIsStatusAcknowledged() {
        return (Byte) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Integer, Timestamp, Timestamp, Timestamp, Timestamp, Timestamp, String, String, String, Integer, String, Byte, Byte, String, Integer, Integer, Integer, Byte> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Integer, Timestamp, Timestamp, Timestamp, Timestamp, Timestamp, String, String, String, Integer, String, Byte, Byte, String, Integer, Integer, Integer, Byte> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.STARTED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.COMPLETED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.LAST_POLL_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.LAST_POLL_IPADDR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.ATTEMPT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.EXTERNAL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.ALLOWED_TIME_LIMIT_MINS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field12() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.TAKING_AS_PROCTORED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field13() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.IS_SAMPLE_ATTEMPT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.STUDENT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field15() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.REVIEW_POLICY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field16() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.PROCTORED_EXAM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field17() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field18() {
        return ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT.IS_STATUS_ACKNOWLEDGED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getStartedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCompletedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getLastPollTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getLastPollIpaddr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getAttemptCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getExternalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getAllowedTimeLimitMins();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value12() {
        return getTakingAsProctored();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value13() {
        return getIsSampleAttempt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getStudentName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value15() {
        return getReviewPolicyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value16() {
        return getProctoredExamId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value17() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value18() {
        return getIsStatusAcknowledged();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value2(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value3(Timestamp value) {
        setModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value4(Timestamp value) {
        setStartedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value5(Timestamp value) {
        setCompletedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value6(Timestamp value) {
        setLastPollTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value7(String value) {
        setLastPollIpaddr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value8(String value) {
        setAttemptCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value9(String value) {
        setExternalId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value10(Integer value) {
        setAllowedTimeLimitMins(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value11(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value12(Byte value) {
        setTakingAsProctored(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value13(Byte value) {
        setIsSampleAttempt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value14(String value) {
        setStudentName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value15(Integer value) {
        setReviewPolicyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value16(Integer value) {
        setProctoredExamId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value17(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord value18(Byte value) {
        setIsStatusAcknowledged(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattemptRecord values(Integer value1, Timestamp value2, Timestamp value3, Timestamp value4, Timestamp value5, Timestamp value6, String value7, String value8, String value9, Integer value10, String value11, Byte value12, Byte value13, String value14, Integer value15, Integer value16, Integer value17, Byte value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProctoringProctoredexamstudentattemptRecord
     */
    public ProctoringProctoredexamstudentattemptRecord() {
        super(ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT);
    }

    /**
     * Create a detached, initialised ProctoringProctoredexamstudentattemptRecord
     */
    public ProctoringProctoredexamstudentattemptRecord(Integer id, Timestamp created, Timestamp modified, Timestamp startedAt, Timestamp completedAt, Timestamp lastPollTimestamp, String lastPollIpaddr, String attemptCode, String externalId, Integer allowedTimeLimitMins, String status, Byte takingAsProctored, Byte isSampleAttempt, String studentName, Integer reviewPolicyId, Integer proctoredExamId, Integer userId, Byte isStatusAcknowledged) {
        super(ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT);

        set(0, id);
        set(1, created);
        set(2, modified);
        set(3, startedAt);
        set(4, completedAt);
        set(5, lastPollTimestamp);
        set(6, lastPollIpaddr);
        set(7, attemptCode);
        set(8, externalId);
        set(9, allowedTimeLimitMins);
        set(10, status);
        set(11, takingAsProctored);
        set(12, isSampleAttempt);
        set(13, studentName);
        set(14, reviewPolicyId);
        set(15, proctoredExamId);
        set(16, userId);
        set(17, isStatusAcknowledged);
    }
}
