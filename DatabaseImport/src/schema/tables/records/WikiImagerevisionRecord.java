/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.WikiImagerevision;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiImagerevisionRecord extends UpdatableRecordImpl<WikiImagerevisionRecord> implements Record4<Integer, String, Short, Short> {

    private static final long serialVersionUID = -1744569763;

    /**
     * Setter for <code>bitnami_edx.wiki_imagerevision.revisionpluginrevision_ptr_id</code>.
     */
    public void setRevisionpluginrevisionPtrId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_imagerevision.revisionpluginrevision_ptr_id</code>.
     */
    public Integer getRevisionpluginrevisionPtrId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_imagerevision.image</code>.
     */
    public void setImage(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_imagerevision.image</code>.
     */
    public String getImage() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_imagerevision.width</code>.
     */
    public void setWidth(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_imagerevision.width</code>.
     */
    public Short getWidth() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_imagerevision.height</code>.
     */
    public void setHeight(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_imagerevision.height</code>.
     */
    public Short getHeight() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Short, Short> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Short, Short> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return WikiImagerevision.WIKI_IMAGEREVISION.REVISIONPLUGINREVISION_PTR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return WikiImagerevision.WIKI_IMAGEREVISION.IMAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return WikiImagerevision.WIKI_IMAGEREVISION.WIDTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return WikiImagerevision.WIKI_IMAGEREVISION.HEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRevisionpluginrevisionPtrId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getImage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getWidth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getHeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiImagerevisionRecord value1(Integer value) {
        setRevisionpluginrevisionPtrId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiImagerevisionRecord value2(String value) {
        setImage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiImagerevisionRecord value3(Short value) {
        setWidth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiImagerevisionRecord value4(Short value) {
        setHeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiImagerevisionRecord values(Integer value1, String value2, Short value3, Short value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WikiImagerevisionRecord
     */
    public WikiImagerevisionRecord() {
        super(WikiImagerevision.WIKI_IMAGEREVISION);
    }

    /**
     * Create a detached, initialised WikiImagerevisionRecord
     */
    public WikiImagerevisionRecord(Integer revisionpluginrevisionPtrId, String image, Short width, Short height) {
        super(WikiImagerevision.WIKI_IMAGEREVISION);

        set(0, revisionpluginrevisionPtrId);
        set(1, image);
        set(2, width);
        set(3, height);
    }
}
