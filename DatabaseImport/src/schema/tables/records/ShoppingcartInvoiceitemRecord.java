/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.ShoppingcartInvoiceitem;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShoppingcartInvoiceitemRecord extends UpdatableRecordImpl<ShoppingcartInvoiceitemRecord> implements Record7<Integer, Timestamp, Timestamp, Integer, BigDecimal, String, Integer> {

    private static final long serialVersionUID = -736491467;

    /**
     * Setter for <code>bitnami_edx.shoppingcart_invoiceitem.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.shoppingcart_invoiceitem.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.shoppingcart_invoiceitem.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.shoppingcart_invoiceitem.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.shoppingcart_invoiceitem.modified</code>.
     */
    public void setModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.shoppingcart_invoiceitem.modified</code>.
     */
    public Timestamp getModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.shoppingcart_invoiceitem.qty</code>.
     */
    public void setQty(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.shoppingcart_invoiceitem.qty</code>.
     */
    public Integer getQty() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>bitnami_edx.shoppingcart_invoiceitem.unit_price</code>.
     */
    public void setUnitPrice(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>bitnami_edx.shoppingcart_invoiceitem.unit_price</code>.
     */
    public BigDecimal getUnitPrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>bitnami_edx.shoppingcart_invoiceitem.currency</code>.
     */
    public void setCurrency(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>bitnami_edx.shoppingcart_invoiceitem.currency</code>.
     */
    public String getCurrency() {
        return (String) get(5);
    }

    /**
     * Setter for <code>bitnami_edx.shoppingcart_invoiceitem.invoice_id</code>.
     */
    public void setInvoiceId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>bitnami_edx.shoppingcart_invoiceitem.invoice_id</code>.
     */
    public Integer getInvoiceId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Timestamp, Timestamp, Integer, BigDecimal, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Timestamp, Timestamp, Integer, BigDecimal, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM.MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM.QTY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM.UNIT_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM.CURRENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM.INVOICE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getQty();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getUnitPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getInvoiceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartInvoiceitemRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartInvoiceitemRecord value2(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartInvoiceitemRecord value3(Timestamp value) {
        setModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartInvoiceitemRecord value4(Integer value) {
        setQty(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartInvoiceitemRecord value5(BigDecimal value) {
        setUnitPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartInvoiceitemRecord value6(String value) {
        setCurrency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartInvoiceitemRecord value7(Integer value) {
        setInvoiceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartInvoiceitemRecord values(Integer value1, Timestamp value2, Timestamp value3, Integer value4, BigDecimal value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShoppingcartInvoiceitemRecord
     */
    public ShoppingcartInvoiceitemRecord() {
        super(ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM);
    }

    /**
     * Create a detached, initialised ShoppingcartInvoiceitemRecord
     */
    public ShoppingcartInvoiceitemRecord(Integer id, Timestamp created, Timestamp modified, Integer qty, BigDecimal unitPrice, String currency, Integer invoiceId) {
        super(ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM);

        set(0, id);
        set(1, created);
        set(2, modified);
        set(3, qty);
        set(4, unitPrice);
        set(5, currency);
        set(6, invoiceId);
    }
}
