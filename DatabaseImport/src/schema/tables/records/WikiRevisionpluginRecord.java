/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.WikiRevisionplugin;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiRevisionpluginRecord extends UpdatableRecordImpl<WikiRevisionpluginRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1157477074;

    /**
     * Setter for <code>bitnami_edx.wiki_revisionplugin.articleplugin_ptr_id</code>.
     */
    public void setArticlepluginPtrId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_revisionplugin.articleplugin_ptr_id</code>.
     */
    public Integer getArticlepluginPtrId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_revisionplugin.current_revision_id</code>.
     */
    public void setCurrentRevisionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_revisionplugin.current_revision_id</code>.
     */
    public Integer getCurrentRevisionId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return WikiRevisionplugin.WIKI_REVISIONPLUGIN.ARTICLEPLUGIN_PTR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return WikiRevisionplugin.WIKI_REVISIONPLUGIN.CURRENT_REVISION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getArticlepluginPtrId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCurrentRevisionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiRevisionpluginRecord value1(Integer value) {
        setArticlepluginPtrId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiRevisionpluginRecord value2(Integer value) {
        setCurrentRevisionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiRevisionpluginRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WikiRevisionpluginRecord
     */
    public WikiRevisionpluginRecord() {
        super(WikiRevisionplugin.WIKI_REVISIONPLUGIN);
    }

    /**
     * Create a detached, initialised WikiRevisionpluginRecord
     */
    public WikiRevisionpluginRecord(Integer articlepluginPtrId, Integer currentRevisionId) {
        super(WikiRevisionplugin.WIKI_REVISIONPLUGIN);

        set(0, articlepluginPtrId);
        set(1, currentRevisionId);
    }
}
