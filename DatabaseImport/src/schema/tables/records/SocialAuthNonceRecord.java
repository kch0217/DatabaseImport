/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.SocialAuthNonce;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SocialAuthNonceRecord extends UpdatableRecordImpl<SocialAuthNonceRecord> implements Record4<Integer, String, Integer, String> {

    private static final long serialVersionUID = -1577072120;

    /**
     * Setter for <code>bitnami_edx.social_auth_nonce.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.social_auth_nonce.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.social_auth_nonce.server_url</code>.
     */
    public void setServerUrl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.social_auth_nonce.server_url</code>.
     */
    public String getServerUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.social_auth_nonce.timestamp</code>.
     */
    public void setTimestamp(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.social_auth_nonce.timestamp</code>.
     */
    public Integer getTimestamp() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.social_auth_nonce.salt</code>.
     */
    public void setSalt(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.social_auth_nonce.salt</code>.
     */
    public String getSalt() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SocialAuthNonce.SOCIAL_AUTH_NONCE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SocialAuthNonce.SOCIAL_AUTH_NONCE.SERVER_URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return SocialAuthNonce.SOCIAL_AUTH_NONCE.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SocialAuthNonce.SOCIAL_AUTH_NONCE.SALT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getServerUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSalt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SocialAuthNonceRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SocialAuthNonceRecord value2(String value) {
        setServerUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SocialAuthNonceRecord value3(Integer value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SocialAuthNonceRecord value4(String value) {
        setSalt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SocialAuthNonceRecord values(Integer value1, String value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SocialAuthNonceRecord
     */
    public SocialAuthNonceRecord() {
        super(SocialAuthNonce.SOCIAL_AUTH_NONCE);
    }

    /**
     * Create a detached, initialised SocialAuthNonceRecord
     */
    public SocialAuthNonceRecord(Integer id, String serverUrl, Integer timestamp, String salt) {
        super(SocialAuthNonce.SOCIAL_AUTH_NONCE);

        set(0, id);
        set(1, serverUrl);
        set(2, timestamp);
        set(3, salt);
    }
}
