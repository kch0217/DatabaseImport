/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import schema.tables.SubmissionsScore;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubmissionsScoreRecord extends UpdatableRecordImpl<SubmissionsScoreRecord> implements Record7<Integer, UInteger, UInteger, Timestamp, Byte, Integer, Integer> {

    private static final long serialVersionUID = 1438116827;

    /**
     * Setter for <code>bitnami_edx.submissions_score.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.submissions_score.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.submissions_score.points_earned</code>.
     */
    public void setPointsEarned(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.submissions_score.points_earned</code>.
     */
    public UInteger getPointsEarned() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.submissions_score.points_possible</code>.
     */
    public void setPointsPossible(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.submissions_score.points_possible</code>.
     */
    public UInteger getPointsPossible() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.submissions_score.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.submissions_score.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>bitnami_edx.submissions_score.reset</code>.
     */
    public void setReset(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>bitnami_edx.submissions_score.reset</code>.
     */
    public Byte getReset() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>bitnami_edx.submissions_score.student_item_id</code>.
     */
    public void setStudentItemId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>bitnami_edx.submissions_score.student_item_id</code>.
     */
    public Integer getStudentItemId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>bitnami_edx.submissions_score.submission_id</code>.
     */
    public void setSubmissionId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>bitnami_edx.submissions_score.submission_id</code>.
     */
    public Integer getSubmissionId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, UInteger, UInteger, Timestamp, Byte, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, UInteger, UInteger, Timestamp, Byte, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SubmissionsScore.SUBMISSIONS_SCORE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return SubmissionsScore.SUBMISSIONS_SCORE.POINTS_EARNED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field3() {
        return SubmissionsScore.SUBMISSIONS_SCORE.POINTS_POSSIBLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return SubmissionsScore.SUBMISSIONS_SCORE.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return SubmissionsScore.SUBMISSIONS_SCORE.RESET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return SubmissionsScore.SUBMISSIONS_SCORE.STUDENT_ITEM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return SubmissionsScore.SUBMISSIONS_SCORE.SUBMISSION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getPointsEarned();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value3() {
        return getPointsPossible();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getReset();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getStudentItemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getSubmissionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubmissionsScoreRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubmissionsScoreRecord value2(UInteger value) {
        setPointsEarned(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubmissionsScoreRecord value3(UInteger value) {
        setPointsPossible(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubmissionsScoreRecord value4(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubmissionsScoreRecord value5(Byte value) {
        setReset(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubmissionsScoreRecord value6(Integer value) {
        setStudentItemId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubmissionsScoreRecord value7(Integer value) {
        setSubmissionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubmissionsScoreRecord values(Integer value1, UInteger value2, UInteger value3, Timestamp value4, Byte value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubmissionsScoreRecord
     */
    public SubmissionsScoreRecord() {
        super(SubmissionsScore.SUBMISSIONS_SCORE);
    }

    /**
     * Create a detached, initialised SubmissionsScoreRecord
     */
    public SubmissionsScoreRecord(Integer id, UInteger pointsEarned, UInteger pointsPossible, Timestamp createdAt, Byte reset, Integer studentItemId, Integer submissionId) {
        super(SubmissionsScore.SUBMISSIONS_SCORE);

        set(0, id);
        set(1, pointsEarned);
        set(2, pointsPossible);
        set(3, createdAt);
        set(4, reset);
        set(5, studentItemId);
        set(6, submissionId);
    }
}
