/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.StudentPendingemailchange;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentPendingemailchangeRecord extends UpdatableRecordImpl<StudentPendingemailchangeRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = -1856412869;

    /**
     * Setter for <code>bitnami_edx.student_pendingemailchange.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_pendingemailchange.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.student_pendingemailchange.new_email</code>.
     */
    public void setNewEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_pendingemailchange.new_email</code>.
     */
    public String getNewEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.student_pendingemailchange.activation_key</code>.
     */
    public void setActivationKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_pendingemailchange.activation_key</code>.
     */
    public String getActivationKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.student_pendingemailchange.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_pendingemailchange.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return StudentPendingemailchange.STUDENT_PENDINGEMAILCHANGE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return StudentPendingemailchange.STUDENT_PENDINGEMAILCHANGE.NEW_EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return StudentPendingemailchange.STUDENT_PENDINGEMAILCHANGE.ACTIVATION_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return StudentPendingemailchange.STUDENT_PENDINGEMAILCHANGE.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNewEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getActivationKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentPendingemailchangeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentPendingemailchangeRecord value2(String value) {
        setNewEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentPendingemailchangeRecord value3(String value) {
        setActivationKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentPendingemailchangeRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentPendingemailchangeRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentPendingemailchangeRecord
     */
    public StudentPendingemailchangeRecord() {
        super(StudentPendingemailchange.STUDENT_PENDINGEMAILCHANGE);
    }

    /**
     * Create a detached, initialised StudentPendingemailchangeRecord
     */
    public StudentPendingemailchangeRecord(Integer id, String newEmail, String activationKey, Integer userId) {
        super(StudentPendingemailchange.STUDENT_PENDINGEMAILCHANGE);

        set(0, id);
        set(1, newEmail);
        set(2, activationKey);
        set(3, userId);
    }
}
