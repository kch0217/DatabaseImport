/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.StudentLoginfailures;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentLoginfailuresRecord extends UpdatableRecordImpl<StudentLoginfailuresRecord> implements Record4<Integer, Integer, Timestamp, Integer> {

    private static final long serialVersionUID = -1500856492;

    /**
     * Setter for <code>bitnami_edx.student_loginfailures.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_loginfailures.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.student_loginfailures.failure_count</code>.
     */
    public void setFailureCount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_loginfailures.failure_count</code>.
     */
    public Integer getFailureCount() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.student_loginfailures.lockout_until</code>.
     */
    public void setLockoutUntil(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_loginfailures.lockout_until</code>.
     */
    public Timestamp getLockoutUntil() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.student_loginfailures.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.student_loginfailures.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Timestamp, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Timestamp, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return StudentLoginfailures.STUDENT_LOGINFAILURES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return StudentLoginfailures.STUDENT_LOGINFAILURES.FAILURE_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return StudentLoginfailures.STUDENT_LOGINFAILURES.LOCKOUT_UNTIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return StudentLoginfailures.STUDENT_LOGINFAILURES.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getFailureCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getLockoutUntil();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentLoginfailuresRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentLoginfailuresRecord value2(Integer value) {
        setFailureCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentLoginfailuresRecord value3(Timestamp value) {
        setLockoutUntil(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentLoginfailuresRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentLoginfailuresRecord values(Integer value1, Integer value2, Timestamp value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentLoginfailuresRecord
     */
    public StudentLoginfailuresRecord() {
        super(StudentLoginfailures.STUDENT_LOGINFAILURES);
    }

    /**
     * Create a detached, initialised StudentLoginfailuresRecord
     */
    public StudentLoginfailuresRecord(Integer id, Integer failureCount, Timestamp lockoutUntil, Integer userId) {
        super(StudentLoginfailures.STUDENT_LOGINFAILURES);

        set(0, id);
        set(1, failureCount);
        set(2, lockoutUntil);
        set(3, userId);
    }
}
