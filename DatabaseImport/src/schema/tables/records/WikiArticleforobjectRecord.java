/**
 * This class is generated by jOOQ
 */
package schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import schema.tables.WikiArticleforobject;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiArticleforobjectRecord extends UpdatableRecordImpl<WikiArticleforobjectRecord> implements Record5<Integer, UInteger, Byte, Integer, Integer> {

    private static final long serialVersionUID = 644881423;

    /**
     * Setter for <code>bitnami_edx.wiki_articleforobject.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_articleforobject.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_articleforobject.object_id</code>.
     */
    public void setObjectId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_articleforobject.object_id</code>.
     */
    public UInteger getObjectId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_articleforobject.is_mptt</code>.
     */
    public void setIsMptt(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_articleforobject.is_mptt</code>.
     */
    public Byte getIsMptt() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_articleforobject.article_id</code>.
     */
    public void setArticleId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_articleforobject.article_id</code>.
     */
    public Integer getArticleId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>bitnami_edx.wiki_articleforobject.content_type_id</code>.
     */
    public void setContentTypeId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>bitnami_edx.wiki_articleforobject.content_type_id</code>.
     */
    public Integer getContentTypeId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, UInteger, Byte, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, UInteger, Byte, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return WikiArticleforobject.WIKI_ARTICLEFOROBJECT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return WikiArticleforobject.WIKI_ARTICLEFOROBJECT.OBJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return WikiArticleforobject.WIKI_ARTICLEFOROBJECT.IS_MPTT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return WikiArticleforobject.WIKI_ARTICLEFOROBJECT.ARTICLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return WikiArticleforobject.WIKI_ARTICLEFOROBJECT.CONTENT_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getObjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getIsMptt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getArticleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getContentTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiArticleforobjectRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiArticleforobjectRecord value2(UInteger value) {
        setObjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiArticleforobjectRecord value3(Byte value) {
        setIsMptt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiArticleforobjectRecord value4(Integer value) {
        setArticleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiArticleforobjectRecord value5(Integer value) {
        setContentTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiArticleforobjectRecord values(Integer value1, UInteger value2, Byte value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WikiArticleforobjectRecord
     */
    public WikiArticleforobjectRecord() {
        super(WikiArticleforobject.WIKI_ARTICLEFOROBJECT);
    }

    /**
     * Create a detached, initialised WikiArticleforobjectRecord
     */
    public WikiArticleforobjectRecord(Integer id, UInteger objectId, Byte isMptt, Integer articleId, Integer contentTypeId) {
        super(WikiArticleforobject.WIKI_ARTICLEFOROBJECT);

        set(0, id);
        set(1, objectId);
        set(2, isMptt);
        set(3, articleId);
        set(4, contentTypeId);
    }
}
