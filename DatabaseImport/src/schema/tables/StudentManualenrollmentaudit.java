/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.StudentManualenrollmentauditRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentManualenrollmentaudit extends TableImpl<StudentManualenrollmentauditRecord> {

    private static final long serialVersionUID = 1773817745;

    /**
     * The reference instance of <code>bitnami_edx.student_manualenrollmentaudit</code>
     */
    public static final StudentManualenrollmentaudit STUDENT_MANUALENROLLMENTAUDIT = new StudentManualenrollmentaudit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentManualenrollmentauditRecord> getRecordType() {
        return StudentManualenrollmentauditRecord.class;
    }

    /**
     * The column <code>bitnami_edx.student_manualenrollmentaudit.id</code>.
     */
    public final TableField<StudentManualenrollmentauditRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_manualenrollmentaudit.enrolled_email</code>.
     */
    public final TableField<StudentManualenrollmentauditRecord, String> ENROLLED_EMAIL = createField("enrolled_email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_manualenrollmentaudit.time_stamp</code>.
     */
    public final TableField<StudentManualenrollmentauditRecord, Timestamp> TIME_STAMP = createField("time_stamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.student_manualenrollmentaudit.state_transition</code>.
     */
    public final TableField<StudentManualenrollmentauditRecord, String> STATE_TRANSITION = createField("state_transition", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_manualenrollmentaudit.reason</code>.
     */
    public final TableField<StudentManualenrollmentauditRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.student_manualenrollmentaudit.enrolled_by_id</code>.
     */
    public final TableField<StudentManualenrollmentauditRecord, Integer> ENROLLED_BY_ID = createField("enrolled_by_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.student_manualenrollmentaudit.enrollment_id</code>.
     */
    public final TableField<StudentManualenrollmentauditRecord, Integer> ENROLLMENT_ID = createField("enrollment_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.student_manualenrollmentaudit</code> table reference
     */
    public StudentManualenrollmentaudit() {
        this("student_manualenrollmentaudit", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.student_manualenrollmentaudit</code> table reference
     */
    public StudentManualenrollmentaudit(String alias) {
        this(alias, STUDENT_MANUALENROLLMENTAUDIT);
    }

    private StudentManualenrollmentaudit(String alias, Table<StudentManualenrollmentauditRecord> aliased) {
        this(alias, aliased, null);
    }

    private StudentManualenrollmentaudit(String alias, Table<StudentManualenrollmentauditRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentManualenrollmentauditRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENT_MANUALENROLLMENTAUDIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentManualenrollmentauditRecord> getPrimaryKey() {
        return Keys.KEY_STUDENT_MANUALENROLLMENTAUDIT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentManualenrollmentauditRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentManualenrollmentauditRecord>>asList(Keys.KEY_STUDENT_MANUALENROLLMENTAUDIT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StudentManualenrollmentauditRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StudentManualenrollmentauditRecord, ?>>asList(Keys.STUDENT_MANUALENR_ENROLLED_BY_ID_729CECDC9F746E2_FK_AUTH_USER_ID, Keys.ST_ENROLLMENT_ID_60349E74284DF0D6_FK_STUDENT_COURSEENROLLMENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentManualenrollmentaudit as(String alias) {
        return new StudentManualenrollmentaudit(alias, this);
    }

    /**
     * Rename this table
     */
    public StudentManualenrollmentaudit rename(String name) {
        return new StudentManualenrollmentaudit(name, null);
    }
}
