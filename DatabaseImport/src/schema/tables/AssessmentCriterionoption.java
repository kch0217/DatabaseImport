/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.AssessmentCriterionoptionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssessmentCriterionoption extends TableImpl<AssessmentCriterionoptionRecord> {

    private static final long serialVersionUID = -1023543896;

    /**
     * The reference instance of <code>bitnami_edx.assessment_criterionoption</code>
     */
    public static final AssessmentCriterionoption ASSESSMENT_CRITERIONOPTION = new AssessmentCriterionoption();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssessmentCriterionoptionRecord> getRecordType() {
        return AssessmentCriterionoptionRecord.class;
    }

    /**
     * The column <code>bitnami_edx.assessment_criterionoption.id</code>.
     */
    public final TableField<AssessmentCriterionoptionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_criterionoption.order_num</code>.
     */
    public final TableField<AssessmentCriterionoptionRecord, UInteger> ORDER_NUM = createField("order_num", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_criterionoption.points</code>.
     */
    public final TableField<AssessmentCriterionoptionRecord, UInteger> POINTS = createField("points", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_criterionoption.name</code>.
     */
    public final TableField<AssessmentCriterionoptionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_criterionoption.label</code>.
     */
    public final TableField<AssessmentCriterionoptionRecord, String> LABEL = createField("label", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_criterionoption.explanation</code>.
     */
    public final TableField<AssessmentCriterionoptionRecord, String> EXPLANATION = createField("explanation", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_criterionoption.criterion_id</code>.
     */
    public final TableField<AssessmentCriterionoptionRecord, Integer> CRITERION_ID = createField("criterion_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.assessment_criterionoption</code> table reference
     */
    public AssessmentCriterionoption() {
        this("assessment_criterionoption", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.assessment_criterionoption</code> table reference
     */
    public AssessmentCriterionoption(String alias) {
        this(alias, ASSESSMENT_CRITERIONOPTION);
    }

    private AssessmentCriterionoption(String alias, Table<AssessmentCriterionoptionRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssessmentCriterionoption(String alias, Table<AssessmentCriterionoptionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssessmentCriterionoptionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ASSESSMENT_CRITERIONOPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssessmentCriterionoptionRecord> getPrimaryKey() {
        return Keys.KEY_ASSESSMENT_CRITERIONOPTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssessmentCriterionoptionRecord>> getKeys() {
        return Arrays.<UniqueKey<AssessmentCriterionoptionRecord>>asList(Keys.KEY_ASSESSMENT_CRITERIONOPTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AssessmentCriterionoptionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AssessmentCriterionoptionRecord, ?>>asList(Keys.ASSESSM_CRITERION_ID_4D0F74D959B454AF_FK_ASSESSMENT_CRITERION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentCriterionoption as(String alias) {
        return new AssessmentCriterionoption(alias, this);
    }

    /**
     * Rename this table
     */
    public AssessmentCriterionoption rename(String name) {
        return new AssessmentCriterionoption(name, null);
    }
}
