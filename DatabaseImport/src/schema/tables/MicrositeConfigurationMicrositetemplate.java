/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.MicrositeConfigurationMicrositetemplateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MicrositeConfigurationMicrositetemplate extends TableImpl<MicrositeConfigurationMicrositetemplateRecord> {

    private static final long serialVersionUID = 1784614627;

    /**
     * The reference instance of <code>bitnami_edx.microsite_configuration_micrositetemplate</code>
     */
    public static final MicrositeConfigurationMicrositetemplate MICROSITE_CONFIGURATION_MICROSITETEMPLATE = new MicrositeConfigurationMicrositetemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MicrositeConfigurationMicrositetemplateRecord> getRecordType() {
        return MicrositeConfigurationMicrositetemplateRecord.class;
    }

    /**
     * The column <code>bitnami_edx.microsite_configuration_micrositetemplate.id</code>.
     */
    public final TableField<MicrositeConfigurationMicrositetemplateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.microsite_configuration_micrositetemplate.template_uri</code>.
     */
    public final TableField<MicrositeConfigurationMicrositetemplateRecord, String> TEMPLATE_URI = createField("template_uri", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.microsite_configuration_micrositetemplate.template</code>.
     */
    public final TableField<MicrositeConfigurationMicrositetemplateRecord, String> TEMPLATE = createField("template", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.microsite_configuration_micrositetemplate.microsite_id</code>.
     */
    public final TableField<MicrositeConfigurationMicrositetemplateRecord, Integer> MICROSITE_ID = createField("microsite_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.microsite_configuration_micrositetemplate</code> table reference
     */
    public MicrositeConfigurationMicrositetemplate() {
        this("microsite_configuration_micrositetemplate", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.microsite_configuration_micrositetemplate</code> table reference
     */
    public MicrositeConfigurationMicrositetemplate(String alias) {
        this(alias, MICROSITE_CONFIGURATION_MICROSITETEMPLATE);
    }

    private MicrositeConfigurationMicrositetemplate(String alias, Table<MicrositeConfigurationMicrositetemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private MicrositeConfigurationMicrositetemplate(String alias, Table<MicrositeConfigurationMicrositetemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MicrositeConfigurationMicrositetemplateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MICROSITE_CONFIGURATION_MICROSITETEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MicrositeConfigurationMicrositetemplateRecord> getPrimaryKey() {
        return Keys.KEY_MICROSITE_CONFIGURATION_MICROSITETEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MicrositeConfigurationMicrositetemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<MicrositeConfigurationMicrositetemplateRecord>>asList(Keys.KEY_MICROSITE_CONFIGURATION_MICROSITETEMPLATE_PRIMARY, Keys.KEY_MICROSITE_CONFIGURATION_MICROSITETEMPLATE_MICROSITE_CONFIGURATION_MICROS_MICROSITE_ID_80B3F3616D2E317_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MicrositeConfigurationMicrositetemplateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MicrositeConfigurationMicrositetemplateRecord, ?>>asList(Keys.D4919CBC5F1414D3DE93AA9EC9AA48F3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicrositeConfigurationMicrositetemplate as(String alias) {
        return new MicrositeConfigurationMicrositetemplate(alias, this);
    }

    /**
     * Rename this table
     */
    public MicrositeConfigurationMicrositetemplate rename(String name) {
        return new MicrositeConfigurationMicrositetemplate(name, null);
    }
}
