/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ProctoringProctoredexamstudentattempthistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProctoringProctoredexamstudentattempthistory extends TableImpl<ProctoringProctoredexamstudentattempthistoryRecord> {

    private static final long serialVersionUID = 867442890;

    /**
     * The reference instance of <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory</code>
     */
    public static final ProctoringProctoredexamstudentattempthistory PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTHISTORY = new ProctoringProctoredexamstudentattempthistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProctoringProctoredexamstudentattempthistoryRecord> getRecordType() {
        return ProctoringProctoredexamstudentattempthistoryRecord.class;
    }

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.created</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.modified</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.attempt_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Integer> ATTEMPT_ID = createField("attempt_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.started_at</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Timestamp> STARTED_AT = createField("started_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.completed_at</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Timestamp> COMPLETED_AT = createField("completed_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.attempt_code</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, String> ATTEMPT_CODE = createField("attempt_code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.external_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, String> EXTERNAL_ID = createField("external_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.allowed_time_limit_mins</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Integer> ALLOWED_TIME_LIMIT_MINS = createField("allowed_time_limit_mins", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.status</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.taking_as_proctored</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Byte> TAKING_AS_PROCTORED = createField("taking_as_proctored", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.is_sample_attempt</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Byte> IS_SAMPLE_ATTEMPT = createField("is_sample_attempt", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.student_name</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, String> STUDENT_NAME = createField("student_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.review_policy_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Integer> REVIEW_POLICY_ID = createField("review_policy_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.last_poll_timestamp</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Timestamp> LAST_POLL_TIMESTAMP = createField("last_poll_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.last_poll_ipaddr</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, String> LAST_POLL_IPADDR = createField("last_poll_ipaddr", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.proctored_exam_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Integer> PROCTORED_EXAM_ID = createField("proctored_exam_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory.user_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattempthistoryRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory</code> table reference
     */
    public ProctoringProctoredexamstudentattempthistory() {
        this("proctoring_proctoredexamstudentattempthistory", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory</code> table reference
     */
    public ProctoringProctoredexamstudentattempthistory(String alias) {
        this(alias, PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTHISTORY);
    }

    private ProctoringProctoredexamstudentattempthistory(String alias, Table<ProctoringProctoredexamstudentattempthistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProctoringProctoredexamstudentattempthistory(String alias, Table<ProctoringProctoredexamstudentattempthistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProctoringProctoredexamstudentattempthistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTHISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProctoringProctoredexamstudentattempthistoryRecord> getPrimaryKey() {
        return Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTHISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProctoringProctoredexamstudentattempthistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ProctoringProctoredexamstudentattempthistoryRecord>>asList(Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTHISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProctoringProctoredexamstudentattempthistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProctoringProctoredexamstudentattempthistoryRecord, ?>>asList(Keys.CBCCBFD5C4C427541FDCE96E77E6BF6C, Keys.PROCTORING_PROCTOREDEXA_USER_ID_59CE75DB7C4FC769_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattempthistory as(String alias) {
        return new ProctoringProctoredexamstudentattempthistory(alias, this);
    }

    /**
     * Rename this table
     */
    public ProctoringProctoredexamstudentattempthistory rename(String name) {
        return new ProctoringProctoredexamstudentattempthistory(name, null);
    }
}
