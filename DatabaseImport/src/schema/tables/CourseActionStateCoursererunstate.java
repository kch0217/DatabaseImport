/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CourseActionStateCoursererunstateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseActionStateCoursererunstate extends TableImpl<CourseActionStateCoursererunstateRecord> {

    private static final long serialVersionUID = -823678623;

    /**
     * The reference instance of <code>bitnami_edx.course_action_state_coursererunstate</code>
     */
    public static final CourseActionStateCoursererunstate COURSE_ACTION_STATE_COURSERERUNSTATE = new CourseActionStateCoursererunstate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseActionStateCoursererunstateRecord> getRecordType() {
        return CourseActionStateCoursererunstateRecord.class;
    }

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.id</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.created_time</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, Timestamp> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.updated_time</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, Timestamp> UPDATED_TIME = createField("updated_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.course_key</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, String> COURSE_KEY = createField("course_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.action</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, String> ACTION = createField("action", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.state</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.should_display</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, Byte> SHOULD_DISPLAY = createField("should_display", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.message</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.source_course_key</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, String> SOURCE_COURSE_KEY = createField("source_course_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.display_name</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, String> DISPLAY_NAME = createField("display_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.created_user_id</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, Integer> CREATED_USER_ID = createField("created_user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.course_action_state_coursererunstate.updated_user_id</code>.
     */
    public final TableField<CourseActionStateCoursererunstateRecord, Integer> UPDATED_USER_ID = createField("updated_user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.course_action_state_coursererunstate</code> table reference
     */
    public CourseActionStateCoursererunstate() {
        this("course_action_state_coursererunstate", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.course_action_state_coursererunstate</code> table reference
     */
    public CourseActionStateCoursererunstate(String alias) {
        this(alias, COURSE_ACTION_STATE_COURSERERUNSTATE);
    }

    private CourseActionStateCoursererunstate(String alias, Table<CourseActionStateCoursererunstateRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseActionStateCoursererunstate(String alias, Table<CourseActionStateCoursererunstateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseActionStateCoursererunstateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_ACTION_STATE_COURSERERUNSTATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseActionStateCoursererunstateRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_ACTION_STATE_COURSERERUNSTATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseActionStateCoursererunstateRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseActionStateCoursererunstateRecord>>asList(Keys.KEY_COURSE_ACTION_STATE_COURSERERUNSTATE_PRIMARY, Keys.KEY_COURSE_ACTION_STATE_COURSERERUNSTATE_COURSE_ACTION_STATE_COURSERERUNS_COURSE_KEY_CF5DA77ED3032D6_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CourseActionStateCoursererunstateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CourseActionStateCoursererunstateRecord, ?>>asList(Keys.COURSE_ACTION_S_CREATED_USER_ID_7F53088EF8DCCD0B_FK_AUTH_USER_ID, Keys.COURSE_ACTION_S_UPDATED_USER_ID_4FAB18012332C9A4_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseActionStateCoursererunstate as(String alias) {
        return new CourseActionStateCoursererunstate(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseActionStateCoursererunstate rename(String name) {
        return new CourseActionStateCoursererunstate(name, null);
    }
}
