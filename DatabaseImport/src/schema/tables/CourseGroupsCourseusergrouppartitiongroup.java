/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CourseGroupsCourseusergrouppartitiongroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseGroupsCourseusergrouppartitiongroup extends TableImpl<CourseGroupsCourseusergrouppartitiongroupRecord> {

    private static final long serialVersionUID = 1180037339;

    /**
     * The reference instance of <code>bitnami_edx.course_groups_courseusergrouppartitiongroup</code>
     */
    public static final CourseGroupsCourseusergrouppartitiongroup COURSE_GROUPS_COURSEUSERGROUPPARTITIONGROUP = new CourseGroupsCourseusergrouppartitiongroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseGroupsCourseusergrouppartitiongroupRecord> getRecordType() {
        return CourseGroupsCourseusergrouppartitiongroupRecord.class;
    }

    /**
     * The column <code>bitnami_edx.course_groups_courseusergrouppartitiongroup.id</code>.
     */
    public final TableField<CourseGroupsCourseusergrouppartitiongroupRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_courseusergrouppartitiongroup.partition_id</code>.
     */
    public final TableField<CourseGroupsCourseusergrouppartitiongroupRecord, Integer> PARTITION_ID = createField("partition_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_courseusergrouppartitiongroup.group_id</code>.
     */
    public final TableField<CourseGroupsCourseusergrouppartitiongroupRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_courseusergrouppartitiongroup.created_at</code>.
     */
    public final TableField<CourseGroupsCourseusergrouppartitiongroupRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_courseusergrouppartitiongroup.updated_at</code>.
     */
    public final TableField<CourseGroupsCourseusergrouppartitiongroupRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_courseusergrouppartitiongroup.course_user_group_id</code>.
     */
    public final TableField<CourseGroupsCourseusergrouppartitiongroupRecord, Integer> COURSE_USER_GROUP_ID = createField("course_user_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.course_groups_courseusergrouppartitiongroup</code> table reference
     */
    public CourseGroupsCourseusergrouppartitiongroup() {
        this("course_groups_courseusergrouppartitiongroup", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.course_groups_courseusergrouppartitiongroup</code> table reference
     */
    public CourseGroupsCourseusergrouppartitiongroup(String alias) {
        this(alias, COURSE_GROUPS_COURSEUSERGROUPPARTITIONGROUP);
    }

    private CourseGroupsCourseusergrouppartitiongroup(String alias, Table<CourseGroupsCourseusergrouppartitiongroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseGroupsCourseusergrouppartitiongroup(String alias, Table<CourseGroupsCourseusergrouppartitiongroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseGroupsCourseusergrouppartitiongroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_GROUPS_COURSEUSERGROUPPARTITIONGROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseGroupsCourseusergrouppartitiongroupRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_GROUPS_COURSEUSERGROUPPARTITIONGROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseGroupsCourseusergrouppartitiongroupRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseGroupsCourseusergrouppartitiongroupRecord>>asList(Keys.KEY_COURSE_GROUPS_COURSEUSERGROUPPARTITIONGROUP_PRIMARY, Keys.KEY_COURSE_GROUPS_COURSEUSERGROUPPARTITIONGROUP_COURSE_USER_GROUP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CourseGroupsCourseusergrouppartitiongroupRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CourseGroupsCourseusergrouppartitiongroupRecord, ?>>asList(Keys.D1516B3811DD6DD500BFAE054D6FDC92);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseGroupsCourseusergrouppartitiongroup as(String alias) {
        return new CourseGroupsCourseusergrouppartitiongroup(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseGroupsCourseusergrouppartitiongroup rename(String name) {
        return new CourseGroupsCourseusergrouppartitiongroup(name, null);
    }
}
