/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.DjceleryPeriodictasksRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DjceleryPeriodictasks extends TableImpl<DjceleryPeriodictasksRecord> {

    private static final long serialVersionUID = 1801264756;

    /**
     * The reference instance of <code>bitnami_edx.djcelery_periodictasks</code>
     */
    public static final DjceleryPeriodictasks DJCELERY_PERIODICTASKS = new DjceleryPeriodictasks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DjceleryPeriodictasksRecord> getRecordType() {
        return DjceleryPeriodictasksRecord.class;
    }

    /**
     * The column <code>bitnami_edx.djcelery_periodictasks.ident</code>.
     */
    public final TableField<DjceleryPeriodictasksRecord, Short> IDENT = createField("ident", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.djcelery_periodictasks.last_update</code>.
     */
    public final TableField<DjceleryPeriodictasksRecord, Timestamp> LAST_UPDATE = createField("last_update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.djcelery_periodictasks</code> table reference
     */
    public DjceleryPeriodictasks() {
        this("djcelery_periodictasks", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.djcelery_periodictasks</code> table reference
     */
    public DjceleryPeriodictasks(String alias) {
        this(alias, DJCELERY_PERIODICTASKS);
    }

    private DjceleryPeriodictasks(String alias, Table<DjceleryPeriodictasksRecord> aliased) {
        this(alias, aliased, null);
    }

    private DjceleryPeriodictasks(String alias, Table<DjceleryPeriodictasksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DjceleryPeriodictasksRecord> getPrimaryKey() {
        return Keys.KEY_DJCELERY_PERIODICTASKS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DjceleryPeriodictasksRecord>> getKeys() {
        return Arrays.<UniqueKey<DjceleryPeriodictasksRecord>>asList(Keys.KEY_DJCELERY_PERIODICTASKS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DjceleryPeriodictasks as(String alias) {
        return new DjceleryPeriodictasks(alias, this);
    }

    /**
     * Rename this table
     */
    public DjceleryPeriodictasks rename(String name) {
        return new DjceleryPeriodictasks(name, null);
    }
}
