/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.BadgesBadgeclassRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BadgesBadgeclass extends TableImpl<BadgesBadgeclassRecord> {

    private static final long serialVersionUID = 1566367581;

    /**
     * The reference instance of <code>bitnami_edx.badges_badgeclass</code>
     */
    public static final BadgesBadgeclass BADGES_BADGECLASS = new BadgesBadgeclass();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BadgesBadgeclassRecord> getRecordType() {
        return BadgesBadgeclassRecord.class;
    }

    /**
     * The column <code>bitnami_edx.badges_badgeclass.id</code>.
     */
    public final TableField<BadgesBadgeclassRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.badges_badgeclass.slug</code>.
     */
    public final TableField<BadgesBadgeclassRecord, String> SLUG = createField("slug", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.badges_badgeclass.issuing_component</code>.
     */
    public final TableField<BadgesBadgeclassRecord, String> ISSUING_COMPONENT = createField("issuing_component", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.badges_badgeclass.display_name</code>.
     */
    public final TableField<BadgesBadgeclassRecord, String> DISPLAY_NAME = createField("display_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.badges_badgeclass.course_id</code>.
     */
    public final TableField<BadgesBadgeclassRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.badges_badgeclass.description</code>.
     */
    public final TableField<BadgesBadgeclassRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.badges_badgeclass.criteria</code>.
     */
    public final TableField<BadgesBadgeclassRecord, String> CRITERIA = createField("criteria", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.badges_badgeclass.mode</code>.
     */
    public final TableField<BadgesBadgeclassRecord, String> MODE = createField("mode", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.badges_badgeclass.image</code>.
     */
    public final TableField<BadgesBadgeclassRecord, String> IMAGE = createField("image", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.badges_badgeclass</code> table reference
     */
    public BadgesBadgeclass() {
        this("badges_badgeclass", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.badges_badgeclass</code> table reference
     */
    public BadgesBadgeclass(String alias) {
        this(alias, BADGES_BADGECLASS);
    }

    private BadgesBadgeclass(String alias, Table<BadgesBadgeclassRecord> aliased) {
        this(alias, aliased, null);
    }

    private BadgesBadgeclass(String alias, Table<BadgesBadgeclassRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BadgesBadgeclassRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BADGES_BADGECLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BadgesBadgeclassRecord> getPrimaryKey() {
        return Keys.KEY_BADGES_BADGECLASS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BadgesBadgeclassRecord>> getKeys() {
        return Arrays.<UniqueKey<BadgesBadgeclassRecord>>asList(Keys.KEY_BADGES_BADGECLASS_PRIMARY, Keys.KEY_BADGES_BADGECLASS_BADGES_BADGECLASS_SLUG_7FE9EAC3BCA91F16_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BadgesBadgeclass as(String alias) {
        return new BadgesBadgeclass(alias, this);
    }

    /**
     * Rename this table
     */
    public BadgesBadgeclass rename(String name) {
        return new BadgesBadgeclass(name, null);
    }
}
