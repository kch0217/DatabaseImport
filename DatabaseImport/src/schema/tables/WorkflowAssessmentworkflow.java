/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.WorkflowAssessmentworkflowRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowAssessmentworkflow extends TableImpl<WorkflowAssessmentworkflowRecord> {

    private static final long serialVersionUID = 1202195495;

    /**
     * The reference instance of <code>bitnami_edx.workflow_assessmentworkflow</code>
     */
    public static final WorkflowAssessmentworkflow WORKFLOW_ASSESSMENTWORKFLOW = new WorkflowAssessmentworkflow();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowAssessmentworkflowRecord> getRecordType() {
        return WorkflowAssessmentworkflowRecord.class;
    }

    /**
     * The column <code>bitnami_edx.workflow_assessmentworkflow.id</code>.
     */
    public final TableField<WorkflowAssessmentworkflowRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.workflow_assessmentworkflow.created</code>.
     */
    public final TableField<WorkflowAssessmentworkflowRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.workflow_assessmentworkflow.modified</code>.
     */
    public final TableField<WorkflowAssessmentworkflowRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.workflow_assessmentworkflow.status</code>.
     */
    public final TableField<WorkflowAssessmentworkflowRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.workflow_assessmentworkflow.status_changed</code>.
     */
    public final TableField<WorkflowAssessmentworkflowRecord, Timestamp> STATUS_CHANGED = createField("status_changed", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.workflow_assessmentworkflow.submission_uuid</code>.
     */
    public final TableField<WorkflowAssessmentworkflowRecord, String> SUBMISSION_UUID = createField("submission_uuid", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.workflow_assessmentworkflow.uuid</code>.
     */
    public final TableField<WorkflowAssessmentworkflowRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.workflow_assessmentworkflow.course_id</code>.
     */
    public final TableField<WorkflowAssessmentworkflowRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.workflow_assessmentworkflow.item_id</code>.
     */
    public final TableField<WorkflowAssessmentworkflowRecord, String> ITEM_ID = createField("item_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.workflow_assessmentworkflow</code> table reference
     */
    public WorkflowAssessmentworkflow() {
        this("workflow_assessmentworkflow", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.workflow_assessmentworkflow</code> table reference
     */
    public WorkflowAssessmentworkflow(String alias) {
        this(alias, WORKFLOW_ASSESSMENTWORKFLOW);
    }

    private WorkflowAssessmentworkflow(String alias, Table<WorkflowAssessmentworkflowRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkflowAssessmentworkflow(String alias, Table<WorkflowAssessmentworkflowRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WorkflowAssessmentworkflowRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WORKFLOW_ASSESSMENTWORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WorkflowAssessmentworkflowRecord> getPrimaryKey() {
        return Keys.KEY_WORKFLOW_ASSESSMENTWORKFLOW_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WorkflowAssessmentworkflowRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkflowAssessmentworkflowRecord>>asList(Keys.KEY_WORKFLOW_ASSESSMENTWORKFLOW_PRIMARY, Keys.KEY_WORKFLOW_ASSESSMENTWORKFLOW_SUBMISSION_UUID, Keys.KEY_WORKFLOW_ASSESSMENTWORKFLOW_UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WorkflowAssessmentworkflow as(String alias) {
        return new WorkflowAssessmentworkflow(alias, this);
    }

    /**
     * Rename this table
     */
    public WorkflowAssessmentworkflow rename(String name) {
        return new WorkflowAssessmentworkflow(name, null);
    }
}
