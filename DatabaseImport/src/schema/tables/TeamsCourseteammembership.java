/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.TeamsCourseteammembershipRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamsCourseteammembership extends TableImpl<TeamsCourseteammembershipRecord> {

    private static final long serialVersionUID = 1205209322;

    /**
     * The reference instance of <code>bitnami_edx.teams_courseteammembership</code>
     */
    public static final TeamsCourseteammembership TEAMS_COURSETEAMMEMBERSHIP = new TeamsCourseteammembership();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeamsCourseteammembershipRecord> getRecordType() {
        return TeamsCourseteammembershipRecord.class;
    }

    /**
     * The column <code>bitnami_edx.teams_courseteammembership.id</code>.
     */
    public final TableField<TeamsCourseteammembershipRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteammembership.date_joined</code>.
     */
    public final TableField<TeamsCourseteammembershipRecord, Timestamp> DATE_JOINED = createField("date_joined", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteammembership.last_activity_at</code>.
     */
    public final TableField<TeamsCourseteammembershipRecord, Timestamp> LAST_ACTIVITY_AT = createField("last_activity_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteammembership.team_id</code>.
     */
    public final TableField<TeamsCourseteammembershipRecord, Integer> TEAM_ID = createField("team_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteammembership.user_id</code>.
     */
    public final TableField<TeamsCourseteammembershipRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.teams_courseteammembership</code> table reference
     */
    public TeamsCourseteammembership() {
        this("teams_courseteammembership", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.teams_courseteammembership</code> table reference
     */
    public TeamsCourseteammembership(String alias) {
        this(alias, TEAMS_COURSETEAMMEMBERSHIP);
    }

    private TeamsCourseteammembership(String alias, Table<TeamsCourseteammembershipRecord> aliased) {
        this(alias, aliased, null);
    }

    private TeamsCourseteammembership(String alias, Table<TeamsCourseteammembershipRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TeamsCourseteammembershipRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TEAMS_COURSETEAMMEMBERSHIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TeamsCourseteammembershipRecord> getPrimaryKey() {
        return Keys.KEY_TEAMS_COURSETEAMMEMBERSHIP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TeamsCourseteammembershipRecord>> getKeys() {
        return Arrays.<UniqueKey<TeamsCourseteammembershipRecord>>asList(Keys.KEY_TEAMS_COURSETEAMMEMBERSHIP_PRIMARY, Keys.KEY_TEAMS_COURSETEAMMEMBERSHIP_TEAMS_COURSETEAMMEMBERSHIP_USER_ID_48EFA8E8971947C3_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TeamsCourseteammembershipRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TeamsCourseteammembershipRecord, ?>>asList(Keys.TEAMS_COURSETEAM_TEAM_ID_594700D19B04F922_FK_TEAMS_COURSETEAM_ID, Keys.TEAMS_COURSETEAMMEMBERS_USER_ID_2D93B28BE22C3C40_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeamsCourseteammembership as(String alias) {
        return new TeamsCourseteammembership(alias, this);
    }

    /**
     * Rename this table
     */
    public TeamsCourseteammembership rename(String name) {
        return new TeamsCourseteammembership(name, null);
    }
}
