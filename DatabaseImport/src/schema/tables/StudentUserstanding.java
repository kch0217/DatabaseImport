/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.StudentUserstandingRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentUserstanding extends TableImpl<StudentUserstandingRecord> {

    private static final long serialVersionUID = 1846046970;

    /**
     * The reference instance of <code>bitnami_edx.student_userstanding</code>
     */
    public static final StudentUserstanding STUDENT_USERSTANDING = new StudentUserstanding();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentUserstandingRecord> getRecordType() {
        return StudentUserstandingRecord.class;
    }

    /**
     * The column <code>bitnami_edx.student_userstanding.id</code>.
     */
    public final TableField<StudentUserstandingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_userstanding.account_status</code>.
     */
    public final TableField<StudentUserstandingRecord, String> ACCOUNT_STATUS = createField("account_status", org.jooq.impl.SQLDataType.VARCHAR.length(31).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_userstanding.standing_last_changed_at</code>.
     */
    public final TableField<StudentUserstandingRecord, Timestamp> STANDING_LAST_CHANGED_AT = createField("standing_last_changed_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_userstanding.changed_by_id</code>.
     */
    public final TableField<StudentUserstandingRecord, Integer> CHANGED_BY_ID = createField("changed_by_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_userstanding.user_id</code>.
     */
    public final TableField<StudentUserstandingRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.student_userstanding</code> table reference
     */
    public StudentUserstanding() {
        this("student_userstanding", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.student_userstanding</code> table reference
     */
    public StudentUserstanding(String alias) {
        this(alias, STUDENT_USERSTANDING);
    }

    private StudentUserstanding(String alias, Table<StudentUserstandingRecord> aliased) {
        this(alias, aliased, null);
    }

    private StudentUserstanding(String alias, Table<StudentUserstandingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentUserstandingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENT_USERSTANDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentUserstandingRecord> getPrimaryKey() {
        return Keys.KEY_STUDENT_USERSTANDING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentUserstandingRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentUserstandingRecord>>asList(Keys.KEY_STUDENT_USERSTANDING_PRIMARY, Keys.KEY_STUDENT_USERSTANDING_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StudentUserstandingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StudentUserstandingRecord, ?>>asList(Keys.STUDENT_USERSTAND_CHANGED_BY_ID_23784B83F2849AFF_FK_AUTH_USER_ID, Keys.STUDENT_USERSTANDING_USER_ID_6BB90ABAAA05D42E_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentUserstanding as(String alias) {
        return new StudentUserstanding(alias, this);
    }

    /**
     * Rename this table
     */
    public StudentUserstanding rename(String name) {
        return new StudentUserstanding(name, null);
    }
}
