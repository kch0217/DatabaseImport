/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.WikiRevisionpluginrevisionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiRevisionpluginrevision extends TableImpl<WikiRevisionpluginrevisionRecord> {

    private static final long serialVersionUID = -453361855;

    /**
     * The reference instance of <code>bitnami_edx.wiki_revisionpluginrevision</code>
     */
    public static final WikiRevisionpluginrevision WIKI_REVISIONPLUGINREVISION = new WikiRevisionpluginrevision();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WikiRevisionpluginrevisionRecord> getRecordType() {
        return WikiRevisionpluginrevisionRecord.class;
    }

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.id</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.revision_number</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, Integer> REVISION_NUMBER = createField("revision_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.user_message</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, String> USER_MESSAGE = createField("user_message", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.automatic_log</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, String> AUTOMATIC_LOG = createField("automatic_log", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.ip_address</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, String> IP_ADDRESS = createField("ip_address", org.jooq.impl.SQLDataType.CHAR.length(15), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.modified</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.created</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.deleted</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.locked</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, Byte> LOCKED = createField("locked", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.plugin_id</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, Integer> PLUGIN_ID = createField("plugin_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.previous_revision_id</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, Integer> PREVIOUS_REVISION_ID = createField("previous_revision_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.wiki_revisionpluginrevision.user_id</code>.
     */
    public final TableField<WikiRevisionpluginrevisionRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.wiki_revisionpluginrevision</code> table reference
     */
    public WikiRevisionpluginrevision() {
        this("wiki_revisionpluginrevision", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.wiki_revisionpluginrevision</code> table reference
     */
    public WikiRevisionpluginrevision(String alias) {
        this(alias, WIKI_REVISIONPLUGINREVISION);
    }

    private WikiRevisionpluginrevision(String alias, Table<WikiRevisionpluginrevisionRecord> aliased) {
        this(alias, aliased, null);
    }

    private WikiRevisionpluginrevision(String alias, Table<WikiRevisionpluginrevisionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WikiRevisionpluginrevisionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WIKI_REVISIONPLUGINREVISION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WikiRevisionpluginrevisionRecord> getPrimaryKey() {
        return Keys.KEY_WIKI_REVISIONPLUGINREVISION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WikiRevisionpluginrevisionRecord>> getKeys() {
        return Arrays.<UniqueKey<WikiRevisionpluginrevisionRecord>>asList(Keys.KEY_WIKI_REVISIONPLUGINREVISION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WikiRevisionpluginrevisionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WikiRevisionpluginrevisionRecord, ?>>asList(Keys.D9574E2F57B828A85A24838761473871, Keys.E524C4F887E857F93C39356F7CF7D4DF, Keys.WIKI_REVISIONPLUGINREVI_USER_ID_55A00BD0E2532762_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiRevisionpluginrevision as(String alias) {
        return new WikiRevisionpluginrevision(alias, this);
    }

    /**
     * Rename this table
     */
    public WikiRevisionpluginrevision rename(String name) {
        return new WikiRevisionpluginrevision(name, null);
    }
}
