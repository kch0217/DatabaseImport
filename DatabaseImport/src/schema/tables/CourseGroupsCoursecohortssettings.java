/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CourseGroupsCoursecohortssettingsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseGroupsCoursecohortssettings extends TableImpl<CourseGroupsCoursecohortssettingsRecord> {

    private static final long serialVersionUID = 13518602;

    /**
     * The reference instance of <code>bitnami_edx.course_groups_coursecohortssettings</code>
     */
    public static final CourseGroupsCoursecohortssettings COURSE_GROUPS_COURSECOHORTSSETTINGS = new CourseGroupsCoursecohortssettings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseGroupsCoursecohortssettingsRecord> getRecordType() {
        return CourseGroupsCoursecohortssettingsRecord.class;
    }

    /**
     * The column <code>bitnami_edx.course_groups_coursecohortssettings.id</code>.
     */
    public final TableField<CourseGroupsCoursecohortssettingsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_coursecohortssettings.is_cohorted</code>.
     */
    public final TableField<CourseGroupsCoursecohortssettingsRecord, Byte> IS_COHORTED = createField("is_cohorted", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_coursecohortssettings.course_id</code>.
     */
    public final TableField<CourseGroupsCoursecohortssettingsRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_groups_coursecohortssettings.cohorted_discussions</code>.
     */
    public final TableField<CourseGroupsCoursecohortssettingsRecord, String> COHORTED_DISCUSSIONS = createField("cohorted_discussions", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_groups_coursecohortssettings.always_cohort_inline_discussions</code>.
     */
    public final TableField<CourseGroupsCoursecohortssettingsRecord, Byte> ALWAYS_COHORT_INLINE_DISCUSSIONS = createField("always_cohort_inline_discussions", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.course_groups_coursecohortssettings</code> table reference
     */
    public CourseGroupsCoursecohortssettings() {
        this("course_groups_coursecohortssettings", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.course_groups_coursecohortssettings</code> table reference
     */
    public CourseGroupsCoursecohortssettings(String alias) {
        this(alias, COURSE_GROUPS_COURSECOHORTSSETTINGS);
    }

    private CourseGroupsCoursecohortssettings(String alias, Table<CourseGroupsCoursecohortssettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseGroupsCoursecohortssettings(String alias, Table<CourseGroupsCoursecohortssettingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseGroupsCoursecohortssettingsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_GROUPS_COURSECOHORTSSETTINGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseGroupsCoursecohortssettingsRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_GROUPS_COURSECOHORTSSETTINGS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseGroupsCoursecohortssettingsRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseGroupsCoursecohortssettingsRecord>>asList(Keys.KEY_COURSE_GROUPS_COURSECOHORTSSETTINGS_PRIMARY, Keys.KEY_COURSE_GROUPS_COURSECOHORTSSETTINGS_COURSE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseGroupsCoursecohortssettings as(String alias) {
        return new CourseGroupsCoursecohortssettings(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseGroupsCoursecohortssettings rename(String name) {
        return new CourseGroupsCoursecohortssettings(name, null);
    }
}
