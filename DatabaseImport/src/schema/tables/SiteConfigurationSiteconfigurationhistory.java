/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.SiteConfigurationSiteconfigurationhistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SiteConfigurationSiteconfigurationhistory extends TableImpl<SiteConfigurationSiteconfigurationhistoryRecord> {

    private static final long serialVersionUID = 662013262;

    /**
     * The reference instance of <code>bitnami_edx.site_configuration_siteconfigurationhistory</code>
     */
    public static final SiteConfigurationSiteconfigurationhistory SITE_CONFIGURATION_SITECONFIGURATIONHISTORY = new SiteConfigurationSiteconfigurationhistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SiteConfigurationSiteconfigurationhistoryRecord> getRecordType() {
        return SiteConfigurationSiteconfigurationhistoryRecord.class;
    }

    /**
     * The column <code>bitnami_edx.site_configuration_siteconfigurationhistory.id</code>.
     */
    public final TableField<SiteConfigurationSiteconfigurationhistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.site_configuration_siteconfigurationhistory.created</code>.
     */
    public final TableField<SiteConfigurationSiteconfigurationhistoryRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.site_configuration_siteconfigurationhistory.modified</code>.
     */
    public final TableField<SiteConfigurationSiteconfigurationhistoryRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.site_configuration_siteconfigurationhistory.values</code>.
     */
    public final TableField<SiteConfigurationSiteconfigurationhistoryRecord, String> VALUES = createField("values", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.site_configuration_siteconfigurationhistory.site_id</code>.
     */
    public final TableField<SiteConfigurationSiteconfigurationhistoryRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.site_configuration_siteconfigurationhistory</code> table reference
     */
    public SiteConfigurationSiteconfigurationhistory() {
        this("site_configuration_siteconfigurationhistory", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.site_configuration_siteconfigurationhistory</code> table reference
     */
    public SiteConfigurationSiteconfigurationhistory(String alias) {
        this(alias, SITE_CONFIGURATION_SITECONFIGURATIONHISTORY);
    }

    private SiteConfigurationSiteconfigurationhistory(String alias, Table<SiteConfigurationSiteconfigurationhistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private SiteConfigurationSiteconfigurationhistory(String alias, Table<SiteConfigurationSiteconfigurationhistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SiteConfigurationSiteconfigurationhistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SITE_CONFIGURATION_SITECONFIGURATIONHISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SiteConfigurationSiteconfigurationhistoryRecord> getPrimaryKey() {
        return Keys.KEY_SITE_CONFIGURATION_SITECONFIGURATIONHISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SiteConfigurationSiteconfigurationhistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<SiteConfigurationSiteconfigurationhistoryRecord>>asList(Keys.KEY_SITE_CONFIGURATION_SITECONFIGURATIONHISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SiteConfigurationSiteconfigurationhistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SiteConfigurationSiteconfigurationhistoryRecord, ?>>asList(Keys.SITE_CONFIGURATION_SI_SITE_ID_20C9C1A5F8C3358E_FK_DJANGO_SITE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SiteConfigurationSiteconfigurationhistory as(String alias) {
        return new SiteConfigurationSiteconfigurationhistory(alias, this);
    }

    /**
     * Rename this table
     */
    public SiteConfigurationSiteconfigurationhistory rename(String name) {
        return new SiteConfigurationSiteconfigurationhistory(name, null);
    }
}
