/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CoursewareStudentmodulehistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoursewareStudentmodulehistory extends TableImpl<CoursewareStudentmodulehistoryRecord> {

    private static final long serialVersionUID = 1518129140;

    /**
     * The reference instance of <code>bitnami_edx.courseware_studentmodulehistory</code>
     */
    public static final CoursewareStudentmodulehistory COURSEWARE_STUDENTMODULEHISTORY = new CoursewareStudentmodulehistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoursewareStudentmodulehistoryRecord> getRecordType() {
        return CoursewareStudentmodulehistoryRecord.class;
    }

    /**
     * The column <code>bitnami_edx.courseware_studentmodulehistory.id</code>.
     */
    public final TableField<CoursewareStudentmodulehistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentmodulehistory.version</code>.
     */
    public final TableField<CoursewareStudentmodulehistoryRecord, String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentmodulehistory.created</code>.
     */
    public final TableField<CoursewareStudentmodulehistoryRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentmodulehistory.state</code>.
     */
    public final TableField<CoursewareStudentmodulehistoryRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentmodulehistory.grade</code>.
     */
    public final TableField<CoursewareStudentmodulehistoryRecord, Double> GRADE = createField("grade", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentmodulehistory.max_grade</code>.
     */
    public final TableField<CoursewareStudentmodulehistoryRecord, Double> MAX_GRADE = createField("max_grade", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentmodulehistory.student_module_id</code>.
     */
    public final TableField<CoursewareStudentmodulehistoryRecord, Integer> STUDENT_MODULE_ID = createField("student_module_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.courseware_studentmodulehistory</code> table reference
     */
    public CoursewareStudentmodulehistory() {
        this("courseware_studentmodulehistory", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.courseware_studentmodulehistory</code> table reference
     */
    public CoursewareStudentmodulehistory(String alias) {
        this(alias, COURSEWARE_STUDENTMODULEHISTORY);
    }

    private CoursewareStudentmodulehistory(String alias, Table<CoursewareStudentmodulehistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoursewareStudentmodulehistory(String alias, Table<CoursewareStudentmodulehistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CoursewareStudentmodulehistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSEWARE_STUDENTMODULEHISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CoursewareStudentmodulehistoryRecord> getPrimaryKey() {
        return Keys.KEY_COURSEWARE_STUDENTMODULEHISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CoursewareStudentmodulehistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<CoursewareStudentmodulehistoryRecord>>asList(Keys.KEY_COURSEWARE_STUDENTMODULEHISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CoursewareStudentmodulehistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CoursewareStudentmodulehistoryRecord, ?>>asList(Keys.D45B867F7277556BEB93BFF02EBA5F03);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursewareStudentmodulehistory as(String alias) {
        return new CoursewareStudentmodulehistory(alias, this);
    }

    /**
     * Rename this table
     */
    public CoursewareStudentmodulehistory rename(String name) {
        return new CoursewareStudentmodulehistory(name, null);
    }
}
