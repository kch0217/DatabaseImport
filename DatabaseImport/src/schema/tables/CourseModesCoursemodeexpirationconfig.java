/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CourseModesCoursemodeexpirationconfigRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseModesCoursemodeexpirationconfig extends TableImpl<CourseModesCoursemodeexpirationconfigRecord> {

    private static final long serialVersionUID = -721280864;

    /**
     * The reference instance of <code>bitnami_edx.course_modes_coursemodeexpirationconfig</code>
     */
    public static final CourseModesCoursemodeexpirationconfig COURSE_MODES_COURSEMODEEXPIRATIONCONFIG = new CourseModesCoursemodeexpirationconfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseModesCoursemodeexpirationconfigRecord> getRecordType() {
        return CourseModesCoursemodeexpirationconfigRecord.class;
    }

    /**
     * The column <code>bitnami_edx.course_modes_coursemodeexpirationconfig.id</code>.
     */
    public final TableField<CourseModesCoursemodeexpirationconfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodeexpirationconfig.change_date</code>.
     */
    public final TableField<CourseModesCoursemodeexpirationconfigRecord, Timestamp> CHANGE_DATE = createField("change_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodeexpirationconfig.enabled</code>.
     */
    public final TableField<CourseModesCoursemodeexpirationconfigRecord, Byte> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodeexpirationconfig.verification_window</code>.
     */
    public final TableField<CourseModesCoursemodeexpirationconfigRecord, Long> VERIFICATION_WINDOW = createField("verification_window", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodeexpirationconfig.changed_by_id</code>.
     */
    public final TableField<CourseModesCoursemodeexpirationconfigRecord, Integer> CHANGED_BY_ID = createField("changed_by_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.course_modes_coursemodeexpirationconfig</code> table reference
     */
    public CourseModesCoursemodeexpirationconfig() {
        this("course_modes_coursemodeexpirationconfig", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.course_modes_coursemodeexpirationconfig</code> table reference
     */
    public CourseModesCoursemodeexpirationconfig(String alias) {
        this(alias, COURSE_MODES_COURSEMODEEXPIRATIONCONFIG);
    }

    private CourseModesCoursemodeexpirationconfig(String alias, Table<CourseModesCoursemodeexpirationconfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseModesCoursemodeexpirationconfig(String alias, Table<CourseModesCoursemodeexpirationconfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseModesCoursemodeexpirationconfigRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_MODES_COURSEMODEEXPIRATIONCONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseModesCoursemodeexpirationconfigRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_MODES_COURSEMODEEXPIRATIONCONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseModesCoursemodeexpirationconfigRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseModesCoursemodeexpirationconfigRecord>>asList(Keys.KEY_COURSE_MODES_COURSEMODEEXPIRATIONCONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CourseModesCoursemodeexpirationconfigRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CourseModesCoursemodeexpirationconfigRecord, ?>>asList(Keys.COURSE_MODES_COUR_CHANGED_BY_ID_4D31FAB2BBE98B89_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseModesCoursemodeexpirationconfig as(String alias) {
        return new CourseModesCoursemodeexpirationconfig(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseModesCoursemodeexpirationconfig rename(String name) {
        return new CourseModesCoursemodeexpirationconfig(name, null);
    }
}
