/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ApiAdminHistoricalapiaccessrequestRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApiAdminHistoricalapiaccessrequest extends TableImpl<ApiAdminHistoricalapiaccessrequestRecord> {

    private static final long serialVersionUID = -1407519862;

    /**
     * The reference instance of <code>bitnami_edx.api_admin_historicalapiaccessrequest</code>
     */
    public static final ApiAdminHistoricalapiaccessrequest API_ADMIN_HISTORICALAPIACCESSREQUEST = new ApiAdminHistoricalapiaccessrequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApiAdminHistoricalapiaccessrequestRecord> getRecordType() {
        return ApiAdminHistoricalapiaccessrequestRecord.class;
    }

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.id</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.created</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.modified</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.status</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.website</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.reason</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.history_id</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, Integer> HISTORY_ID = createField("history_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.history_date</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, Timestamp> HISTORY_DATE = createField("history_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.history_type</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, String> HISTORY_TYPE = createField("history_type", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.history_user_id</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, Integer> HISTORY_USER_ID = createField("history_user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.user_id</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.company_address</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, String> COMPANY_ADDRESS = createField("company_address", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.company_name</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.contacted</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, Byte> CONTACTED = createField("contacted", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_historicalapiaccessrequest.site_id</code>.
     */
    public final TableField<ApiAdminHistoricalapiaccessrequestRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.api_admin_historicalapiaccessrequest</code> table reference
     */
    public ApiAdminHistoricalapiaccessrequest() {
        this("api_admin_historicalapiaccessrequest", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.api_admin_historicalapiaccessrequest</code> table reference
     */
    public ApiAdminHistoricalapiaccessrequest(String alias) {
        this(alias, API_ADMIN_HISTORICALAPIACCESSREQUEST);
    }

    private ApiAdminHistoricalapiaccessrequest(String alias, Table<ApiAdminHistoricalapiaccessrequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApiAdminHistoricalapiaccessrequest(String alias, Table<ApiAdminHistoricalapiaccessrequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ApiAdminHistoricalapiaccessrequestRecord, Integer> getIdentity() {
        return Keys.IDENTITY_API_ADMIN_HISTORICALAPIACCESSREQUEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ApiAdminHistoricalapiaccessrequestRecord> getPrimaryKey() {
        return Keys.KEY_API_ADMIN_HISTORICALAPIACCESSREQUEST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ApiAdminHistoricalapiaccessrequestRecord>> getKeys() {
        return Arrays.<UniqueKey<ApiAdminHistoricalapiaccessrequestRecord>>asList(Keys.KEY_API_ADMIN_HISTORICALAPIACCESSREQUEST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ApiAdminHistoricalapiaccessrequestRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ApiAdminHistoricalapiaccessrequestRecord, ?>>asList(Keys.API_ADMIN_HISTO_HISTORY_USER_ID_73C59297A81BCD02_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApiAdminHistoricalapiaccessrequest as(String alias) {
        return new ApiAdminHistoricalapiaccessrequest(alias, this);
    }

    /**
     * Rename this table
     */
    public ApiAdminHistoricalapiaccessrequest rename(String name) {
        return new ApiAdminHistoricalapiaccessrequest(name, null);
    }
}
