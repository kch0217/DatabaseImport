/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CertificatesCertificategenerationconfigurationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CertificatesCertificategenerationconfiguration extends TableImpl<CertificatesCertificategenerationconfigurationRecord> {

    private static final long serialVersionUID = -1300032294;

    /**
     * The reference instance of <code>bitnami_edx.certificates_certificategenerationconfiguration</code>
     */
    public static final CertificatesCertificategenerationconfiguration CERTIFICATES_CERTIFICATEGENERATIONCONFIGURATION = new CertificatesCertificategenerationconfiguration();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CertificatesCertificategenerationconfigurationRecord> getRecordType() {
        return CertificatesCertificategenerationconfigurationRecord.class;
    }

    /**
     * The column <code>bitnami_edx.certificates_certificategenerationconfiguration.id</code>.
     */
    public final TableField<CertificatesCertificategenerationconfigurationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificategenerationconfiguration.change_date</code>.
     */
    public final TableField<CertificatesCertificategenerationconfigurationRecord, Timestamp> CHANGE_DATE = createField("change_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificategenerationconfiguration.enabled</code>.
     */
    public final TableField<CertificatesCertificategenerationconfigurationRecord, Byte> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificategenerationconfiguration.changed_by_id</code>.
     */
    public final TableField<CertificatesCertificategenerationconfigurationRecord, Integer> CHANGED_BY_ID = createField("changed_by_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.certificates_certificategenerationconfiguration</code> table reference
     */
    public CertificatesCertificategenerationconfiguration() {
        this("certificates_certificategenerationconfiguration", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.certificates_certificategenerationconfiguration</code> table reference
     */
    public CertificatesCertificategenerationconfiguration(String alias) {
        this(alias, CERTIFICATES_CERTIFICATEGENERATIONCONFIGURATION);
    }

    private CertificatesCertificategenerationconfiguration(String alias, Table<CertificatesCertificategenerationconfigurationRecord> aliased) {
        this(alias, aliased, null);
    }

    private CertificatesCertificategenerationconfiguration(String alias, Table<CertificatesCertificategenerationconfigurationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CertificatesCertificategenerationconfigurationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CERTIFICATES_CERTIFICATEGENERATIONCONFIGURATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CertificatesCertificategenerationconfigurationRecord> getPrimaryKey() {
        return Keys.KEY_CERTIFICATES_CERTIFICATEGENERATIONCONFIGURATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CertificatesCertificategenerationconfigurationRecord>> getKeys() {
        return Arrays.<UniqueKey<CertificatesCertificategenerationconfigurationRecord>>asList(Keys.KEY_CERTIFICATES_CERTIFICATEGENERATIONCONFIGURATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CertificatesCertificategenerationconfigurationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CertificatesCertificategenerationconfigurationRecord, ?>>asList(Keys.CERTIFICATES_CERT_CHANGED_BY_ID_2A1D896CDBD5FEC5_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CertificatesCertificategenerationconfiguration as(String alias) {
        return new CertificatesCertificategenerationconfiguration(alias, this);
    }

    /**
     * Rename this table
     */
    public CertificatesCertificategenerationconfiguration rename(String name) {
        return new CertificatesCertificategenerationconfiguration(name, null);
    }
}
