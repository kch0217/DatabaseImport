/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.SurveySurveyanswerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SurveySurveyanswer extends TableImpl<SurveySurveyanswerRecord> {

    private static final long serialVersionUID = -1387849571;

    /**
     * The reference instance of <code>bitnami_edx.survey_surveyanswer</code>
     */
    public static final SurveySurveyanswer SURVEY_SURVEYANSWER = new SurveySurveyanswer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SurveySurveyanswerRecord> getRecordType() {
        return SurveySurveyanswerRecord.class;
    }

    /**
     * The column <code>bitnami_edx.survey_surveyanswer.id</code>.
     */
    public final TableField<SurveySurveyanswerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.survey_surveyanswer.created</code>.
     */
    public final TableField<SurveySurveyanswerRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.survey_surveyanswer.modified</code>.
     */
    public final TableField<SurveySurveyanswerRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.survey_surveyanswer.field_name</code>.
     */
    public final TableField<SurveySurveyanswerRecord, String> FIELD_NAME = createField("field_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.survey_surveyanswer.field_value</code>.
     */
    public final TableField<SurveySurveyanswerRecord, String> FIELD_VALUE = createField("field_value", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.survey_surveyanswer.course_key</code>.
     */
    public final TableField<SurveySurveyanswerRecord, String> COURSE_KEY = createField("course_key", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.survey_surveyanswer.form_id</code>.
     */
    public final TableField<SurveySurveyanswerRecord, Integer> FORM_ID = createField("form_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.survey_surveyanswer.user_id</code>.
     */
    public final TableField<SurveySurveyanswerRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.survey_surveyanswer</code> table reference
     */
    public SurveySurveyanswer() {
        this("survey_surveyanswer", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.survey_surveyanswer</code> table reference
     */
    public SurveySurveyanswer(String alias) {
        this(alias, SURVEY_SURVEYANSWER);
    }

    private SurveySurveyanswer(String alias, Table<SurveySurveyanswerRecord> aliased) {
        this(alias, aliased, null);
    }

    private SurveySurveyanswer(String alias, Table<SurveySurveyanswerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SurveySurveyanswerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SURVEY_SURVEYANSWER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SurveySurveyanswerRecord> getPrimaryKey() {
        return Keys.KEY_SURVEY_SURVEYANSWER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SurveySurveyanswerRecord>> getKeys() {
        return Arrays.<UniqueKey<SurveySurveyanswerRecord>>asList(Keys.KEY_SURVEY_SURVEYANSWER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SurveySurveyanswerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SurveySurveyanswerRecord, ?>>asList(Keys.SURVEY_SURVEYAN_FORM_ID_1C835AFE12A54912_FK_SURVEY_SURVEYFORM_ID, Keys.SURVEY_SURVEYANSWER_USER_ID_4E77D83A82FD0B2B_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SurveySurveyanswer as(String alias) {
        return new SurveySurveyanswer(alias, this);
    }

    /**
     * Rename this table
     */
    public SurveySurveyanswer rename(String name) {
        return new SurveySurveyanswer(name, null);
    }
}
