/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CourseModesCoursemodesarchiveRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseModesCoursemodesarchive extends TableImpl<CourseModesCoursemodesarchiveRecord> {

    private static final long serialVersionUID = 322089071;

    /**
     * The reference instance of <code>bitnami_edx.course_modes_coursemodesarchive</code>
     */
    public static final CourseModesCoursemodesarchive COURSE_MODES_COURSEMODESARCHIVE = new CourseModesCoursemodesarchive();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseModesCoursemodesarchiveRecord> getRecordType() {
        return CourseModesCoursemodesarchiveRecord.class;
    }

    /**
     * The column <code>bitnami_edx.course_modes_coursemodesarchive.id</code>.
     */
    public final TableField<CourseModesCoursemodesarchiveRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodesarchive.course_id</code>.
     */
    public final TableField<CourseModesCoursemodesarchiveRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodesarchive.mode_slug</code>.
     */
    public final TableField<CourseModesCoursemodesarchiveRecord, String> MODE_SLUG = createField("mode_slug", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodesarchive.mode_display_name</code>.
     */
    public final TableField<CourseModesCoursemodesarchiveRecord, String> MODE_DISPLAY_NAME = createField("mode_display_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodesarchive.min_price</code>.
     */
    public final TableField<CourseModesCoursemodesarchiveRecord, Integer> MIN_PRICE = createField("min_price", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodesarchive.suggested_prices</code>.
     */
    public final TableField<CourseModesCoursemodesarchiveRecord, String> SUGGESTED_PRICES = createField("suggested_prices", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodesarchive.currency</code>.
     */
    public final TableField<CourseModesCoursemodesarchiveRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(8).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodesarchive.expiration_date</code>.
     */
    public final TableField<CourseModesCoursemodesarchiveRecord, Date> EXPIRATION_DATE = createField("expiration_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>bitnami_edx.course_modes_coursemodesarchive.expiration_datetime</code>.
     */
    public final TableField<CourseModesCoursemodesarchiveRecord, Timestamp> EXPIRATION_DATETIME = createField("expiration_datetime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>bitnami_edx.course_modes_coursemodesarchive</code> table reference
     */
    public CourseModesCoursemodesarchive() {
        this("course_modes_coursemodesarchive", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.course_modes_coursemodesarchive</code> table reference
     */
    public CourseModesCoursemodesarchive(String alias) {
        this(alias, COURSE_MODES_COURSEMODESARCHIVE);
    }

    private CourseModesCoursemodesarchive(String alias, Table<CourseModesCoursemodesarchiveRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseModesCoursemodesarchive(String alias, Table<CourseModesCoursemodesarchiveRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseModesCoursemodesarchiveRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_MODES_COURSEMODESARCHIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseModesCoursemodesarchiveRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_MODES_COURSEMODESARCHIVE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseModesCoursemodesarchiveRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseModesCoursemodesarchiveRecord>>asList(Keys.KEY_COURSE_MODES_COURSEMODESARCHIVE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseModesCoursemodesarchive as(String alias) {
        return new CourseModesCoursemodesarchive(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseModesCoursemodesarchive rename(String name) {
        return new CourseModesCoursemodesarchive(name, null);
    }
}
