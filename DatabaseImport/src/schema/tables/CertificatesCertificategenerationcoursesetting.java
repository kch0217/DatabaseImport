/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CertificatesCertificategenerationcoursesettingRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CertificatesCertificategenerationcoursesetting extends TableImpl<CertificatesCertificategenerationcoursesettingRecord> {

    private static final long serialVersionUID = -552570992;

    /**
     * The reference instance of <code>bitnami_edx.certificates_certificategenerationcoursesetting</code>
     */
    public static final CertificatesCertificategenerationcoursesetting CERTIFICATES_CERTIFICATEGENERATIONCOURSESETTING = new CertificatesCertificategenerationcoursesetting();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CertificatesCertificategenerationcoursesettingRecord> getRecordType() {
        return CertificatesCertificategenerationcoursesettingRecord.class;
    }

    /**
     * The column <code>bitnami_edx.certificates_certificategenerationcoursesetting.id</code>.
     */
    public final TableField<CertificatesCertificategenerationcoursesettingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificategenerationcoursesetting.created</code>.
     */
    public final TableField<CertificatesCertificategenerationcoursesettingRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificategenerationcoursesetting.modified</code>.
     */
    public final TableField<CertificatesCertificategenerationcoursesettingRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificategenerationcoursesetting.course_key</code>.
     */
    public final TableField<CertificatesCertificategenerationcoursesettingRecord, String> COURSE_KEY = createField("course_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificategenerationcoursesetting.enabled</code>.
     */
    public final TableField<CertificatesCertificategenerationcoursesettingRecord, Byte> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.certificates_certificategenerationcoursesetting</code> table reference
     */
    public CertificatesCertificategenerationcoursesetting() {
        this("certificates_certificategenerationcoursesetting", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.certificates_certificategenerationcoursesetting</code> table reference
     */
    public CertificatesCertificategenerationcoursesetting(String alias) {
        this(alias, CERTIFICATES_CERTIFICATEGENERATIONCOURSESETTING);
    }

    private CertificatesCertificategenerationcoursesetting(String alias, Table<CertificatesCertificategenerationcoursesettingRecord> aliased) {
        this(alias, aliased, null);
    }

    private CertificatesCertificategenerationcoursesetting(String alias, Table<CertificatesCertificategenerationcoursesettingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CertificatesCertificategenerationcoursesettingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CERTIFICATES_CERTIFICATEGENERATIONCOURSESETTING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CertificatesCertificategenerationcoursesettingRecord> getPrimaryKey() {
        return Keys.KEY_CERTIFICATES_CERTIFICATEGENERATIONCOURSESETTING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CertificatesCertificategenerationcoursesettingRecord>> getKeys() {
        return Arrays.<UniqueKey<CertificatesCertificategenerationcoursesettingRecord>>asList(Keys.KEY_CERTIFICATES_CERTIFICATEGENERATIONCOURSESETTING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CertificatesCertificategenerationcoursesetting as(String alias) {
        return new CertificatesCertificategenerationcoursesetting(alias, this);
    }

    /**
     * Rename this table
     */
    public CertificatesCertificategenerationcoursesetting rename(String name) {
        return new CertificatesCertificategenerationcoursesetting(name, null);
    }
}
