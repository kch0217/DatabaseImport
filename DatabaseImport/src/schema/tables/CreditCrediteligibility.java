/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CreditCrediteligibilityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditCrediteligibility extends TableImpl<CreditCrediteligibilityRecord> {

    private static final long serialVersionUID = 609228016;

    /**
     * The reference instance of <code>bitnami_edx.credit_crediteligibility</code>
     */
    public static final CreditCrediteligibility CREDIT_CREDITELIGIBILITY = new CreditCrediteligibility();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CreditCrediteligibilityRecord> getRecordType() {
        return CreditCrediteligibilityRecord.class;
    }

    /**
     * The column <code>bitnami_edx.credit_crediteligibility.id</code>.
     */
    public final TableField<CreditCrediteligibilityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_crediteligibility.created</code>.
     */
    public final TableField<CreditCrediteligibilityRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_crediteligibility.modified</code>.
     */
    public final TableField<CreditCrediteligibilityRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_crediteligibility.username</code>.
     */
    public final TableField<CreditCrediteligibilityRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_crediteligibility.deadline</code>.
     */
    public final TableField<CreditCrediteligibilityRecord, Timestamp> DEADLINE = createField("deadline", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_crediteligibility.course_id</code>.
     */
    public final TableField<CreditCrediteligibilityRecord, Integer> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.credit_crediteligibility</code> table reference
     */
    public CreditCrediteligibility() {
        this("credit_crediteligibility", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.credit_crediteligibility</code> table reference
     */
    public CreditCrediteligibility(String alias) {
        this(alias, CREDIT_CREDITELIGIBILITY);
    }

    private CreditCrediteligibility(String alias, Table<CreditCrediteligibilityRecord> aliased) {
        this(alias, aliased, null);
    }

    private CreditCrediteligibility(String alias, Table<CreditCrediteligibilityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CreditCrediteligibilityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CREDIT_CREDITELIGIBILITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CreditCrediteligibilityRecord> getPrimaryKey() {
        return Keys.KEY_CREDIT_CREDITELIGIBILITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CreditCrediteligibilityRecord>> getKeys() {
        return Arrays.<UniqueKey<CreditCrediteligibilityRecord>>asList(Keys.KEY_CREDIT_CREDITELIGIBILITY_PRIMARY, Keys.KEY_CREDIT_CREDITELIGIBILITY_CREDIT_CREDITELIGIBILITY_USERNAME_936CB16677E83E_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CreditCrediteligibilityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CreditCrediteligibilityRecord, ?>>asList(Keys.CREDIT_CRED_COURSE_ID_4218ADEBA258BF8B_FK_CREDIT_CREDITCOURSE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditCrediteligibility as(String alias) {
        return new CreditCrediteligibility(alias, this);
    }

    /**
     * Rename this table
     */
    public CreditCrediteligibility rename(String name) {
        return new CreditCrediteligibility(name, null);
    }
}
