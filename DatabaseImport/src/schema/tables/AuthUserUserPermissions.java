/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.AuthUserUserPermissionsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthUserUserPermissions extends TableImpl<AuthUserUserPermissionsRecord> {

    private static final long serialVersionUID = 319597664;

    /**
     * The reference instance of <code>bitnami_edx.auth_user_user_permissions</code>
     */
    public static final AuthUserUserPermissions AUTH_USER_USER_PERMISSIONS = new AuthUserUserPermissions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthUserUserPermissionsRecord> getRecordType() {
        return AuthUserUserPermissionsRecord.class;
    }

    /**
     * The column <code>bitnami_edx.auth_user_user_permissions.id</code>.
     */
    public final TableField<AuthUserUserPermissionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.auth_user_user_permissions.user_id</code>.
     */
    public final TableField<AuthUserUserPermissionsRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.auth_user_user_permissions.permission_id</code>.
     */
    public final TableField<AuthUserUserPermissionsRecord, Integer> PERMISSION_ID = createField("permission_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.auth_user_user_permissions</code> table reference
     */
    public AuthUserUserPermissions() {
        this("auth_user_user_permissions", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.auth_user_user_permissions</code> table reference
     */
    public AuthUserUserPermissions(String alias) {
        this(alias, AUTH_USER_USER_PERMISSIONS);
    }

    private AuthUserUserPermissions(String alias, Table<AuthUserUserPermissionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuthUserUserPermissions(String alias, Table<AuthUserUserPermissionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AuthUserUserPermissionsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_AUTH_USER_USER_PERMISSIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AuthUserUserPermissionsRecord> getPrimaryKey() {
        return Keys.KEY_AUTH_USER_USER_PERMISSIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AuthUserUserPermissionsRecord>> getKeys() {
        return Arrays.<UniqueKey<AuthUserUserPermissionsRecord>>asList(Keys.KEY_AUTH_USER_USER_PERMISSIONS_PRIMARY, Keys.KEY_AUTH_USER_USER_PERMISSIONS_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AuthUserUserPermissionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AuthUserUserPermissionsRecord, ?>>asList(Keys.AUTH_USER_USER_PERMISSI_USER_ID_7F0938558328534A_FK_AUTH_USER_ID, Keys.AUTH_USER_U_PERMISSION_ID_384B62483D7071F0_FK_AUTH_PERMISSION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserUserPermissions as(String alias) {
        return new AuthUserUserPermissions(alias, this);
    }

    /**
     * Rename this table
     */
    public AuthUserUserPermissions rename(String name) {
        return new AuthUserUserPermissions(name, null);
    }
}
