/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.AuthGroupPermissionsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthGroupPermissions extends TableImpl<AuthGroupPermissionsRecord> {

    private static final long serialVersionUID = -2100313838;

    /**
     * The reference instance of <code>bitnami_edx.auth_group_permissions</code>
     */
    public static final AuthGroupPermissions AUTH_GROUP_PERMISSIONS = new AuthGroupPermissions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthGroupPermissionsRecord> getRecordType() {
        return AuthGroupPermissionsRecord.class;
    }

    /**
     * The column <code>bitnami_edx.auth_group_permissions.id</code>.
     */
    public final TableField<AuthGroupPermissionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.auth_group_permissions.group_id</code>.
     */
    public final TableField<AuthGroupPermissionsRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.auth_group_permissions.permission_id</code>.
     */
    public final TableField<AuthGroupPermissionsRecord, Integer> PERMISSION_ID = createField("permission_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.auth_group_permissions</code> table reference
     */
    public AuthGroupPermissions() {
        this("auth_group_permissions", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.auth_group_permissions</code> table reference
     */
    public AuthGroupPermissions(String alias) {
        this(alias, AUTH_GROUP_PERMISSIONS);
    }

    private AuthGroupPermissions(String alias, Table<AuthGroupPermissionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuthGroupPermissions(String alias, Table<AuthGroupPermissionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AuthGroupPermissionsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_AUTH_GROUP_PERMISSIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AuthGroupPermissionsRecord> getPrimaryKey() {
        return Keys.KEY_AUTH_GROUP_PERMISSIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AuthGroupPermissionsRecord>> getKeys() {
        return Arrays.<UniqueKey<AuthGroupPermissionsRecord>>asList(Keys.KEY_AUTH_GROUP_PERMISSIONS_PRIMARY, Keys.KEY_AUTH_GROUP_PERMISSIONS_GROUP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AuthGroupPermissionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AuthGroupPermissionsRecord, ?>>asList(Keys.AUTH_GROUP_PERMISSION_GROUP_ID_689710A9A73B7457_FK_AUTH_GROUP_ID, Keys.AUTH_GROUP__PERMISSION_ID_1F49CCBBDC69D2FC_FK_AUTH_PERMISSION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthGroupPermissions as(String alias) {
        return new AuthGroupPermissions(alias, this);
    }

    /**
     * Rename this table
     */
    public AuthGroupPermissions rename(String name) {
        return new AuthGroupPermissions(name, null);
    }
}
