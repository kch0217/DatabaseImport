/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.MilestonesMilestonerelationshiptypeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MilestonesMilestonerelationshiptype extends TableImpl<MilestonesMilestonerelationshiptypeRecord> {

    private static final long serialVersionUID = 1850875569;

    /**
     * The reference instance of <code>bitnami_edx.milestones_milestonerelationshiptype</code>
     */
    public static final MilestonesMilestonerelationshiptype MILESTONES_MILESTONERELATIONSHIPTYPE = new MilestonesMilestonerelationshiptype();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MilestonesMilestonerelationshiptypeRecord> getRecordType() {
        return MilestonesMilestonerelationshiptypeRecord.class;
    }

    /**
     * The column <code>bitnami_edx.milestones_milestonerelationshiptype.id</code>.
     */
    public final TableField<MilestonesMilestonerelationshiptypeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.milestones_milestonerelationshiptype.created</code>.
     */
    public final TableField<MilestonesMilestonerelationshiptypeRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.milestones_milestonerelationshiptype.modified</code>.
     */
    public final TableField<MilestonesMilestonerelationshiptypeRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.milestones_milestonerelationshiptype.name</code>.
     */
    public final TableField<MilestonesMilestonerelationshiptypeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.milestones_milestonerelationshiptype.description</code>.
     */
    public final TableField<MilestonesMilestonerelationshiptypeRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.milestones_milestonerelationshiptype.active</code>.
     */
    public final TableField<MilestonesMilestonerelationshiptypeRecord, Byte> ACTIVE = createField("active", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.milestones_milestonerelationshiptype</code> table reference
     */
    public MilestonesMilestonerelationshiptype() {
        this("milestones_milestonerelationshiptype", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.milestones_milestonerelationshiptype</code> table reference
     */
    public MilestonesMilestonerelationshiptype(String alias) {
        this(alias, MILESTONES_MILESTONERELATIONSHIPTYPE);
    }

    private MilestonesMilestonerelationshiptype(String alias, Table<MilestonesMilestonerelationshiptypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private MilestonesMilestonerelationshiptype(String alias, Table<MilestonesMilestonerelationshiptypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MilestonesMilestonerelationshiptypeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MILESTONES_MILESTONERELATIONSHIPTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MilestonesMilestonerelationshiptypeRecord> getPrimaryKey() {
        return Keys.KEY_MILESTONES_MILESTONERELATIONSHIPTYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MilestonesMilestonerelationshiptypeRecord>> getKeys() {
        return Arrays.<UniqueKey<MilestonesMilestonerelationshiptypeRecord>>asList(Keys.KEY_MILESTONES_MILESTONERELATIONSHIPTYPE_PRIMARY, Keys.KEY_MILESTONES_MILESTONERELATIONSHIPTYPE_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MilestonesMilestonerelationshiptype as(String alias) {
        return new MilestonesMilestonerelationshiptype(alias, this);
    }

    /**
     * Rename this table
     */
    public MilestonesMilestonerelationshiptype rename(String name) {
        return new MilestonesMilestonerelationshiptype(name, null);
    }
}
