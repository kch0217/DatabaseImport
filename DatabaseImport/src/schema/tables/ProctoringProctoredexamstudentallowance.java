/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ProctoringProctoredexamstudentallowanceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProctoringProctoredexamstudentallowance extends TableImpl<ProctoringProctoredexamstudentallowanceRecord> {

    private static final long serialVersionUID = 482328879;

    /**
     * The reference instance of <code>bitnami_edx.proctoring_proctoredexamstudentallowance</code>
     */
    public static final ProctoringProctoredexamstudentallowance PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCE = new ProctoringProctoredexamstudentallowance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProctoringProctoredexamstudentallowanceRecord> getRecordType() {
        return ProctoringProctoredexamstudentallowanceRecord.class;
    }

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentallowance.id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentallowanceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentallowance.created</code>.
     */
    public final TableField<ProctoringProctoredexamstudentallowanceRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentallowance.modified</code>.
     */
    public final TableField<ProctoringProctoredexamstudentallowanceRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentallowance.key</code>.
     */
    public final TableField<ProctoringProctoredexamstudentallowanceRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentallowance.value</code>.
     */
    public final TableField<ProctoringProctoredexamstudentallowanceRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentallowance.proctored_exam_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentallowanceRecord, Integer> PROCTORED_EXAM_ID = createField("proctored_exam_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentallowance.user_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentallowanceRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.proctoring_proctoredexamstudentallowance</code> table reference
     */
    public ProctoringProctoredexamstudentallowance() {
        this("proctoring_proctoredexamstudentallowance", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.proctoring_proctoredexamstudentallowance</code> table reference
     */
    public ProctoringProctoredexamstudentallowance(String alias) {
        this(alias, PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCE);
    }

    private ProctoringProctoredexamstudentallowance(String alias, Table<ProctoringProctoredexamstudentallowanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProctoringProctoredexamstudentallowance(String alias, Table<ProctoringProctoredexamstudentallowanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProctoringProctoredexamstudentallowanceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProctoringProctoredexamstudentallowanceRecord> getPrimaryKey() {
        return Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProctoringProctoredexamstudentallowanceRecord>> getKeys() {
        return Arrays.<UniqueKey<ProctoringProctoredexamstudentallowanceRecord>>asList(Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCE_PRIMARY, Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCE_PROCTORING_PROCTOREDEXAMSTUDENTALL_USER_ID_665ED945152C2F60_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProctoringProctoredexamstudentallowanceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProctoringProctoredexamstudentallowanceRecord, ?>>asList(Keys.DB55B83A7875E70B3A0EBD1F81A898D8, Keys.PROCTORING_PROCTOREDEXAM_USER_ID_A0A0681D4A01661_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentallowance as(String alias) {
        return new ProctoringProctoredexamstudentallowance(alias, this);
    }

    /**
     * Rename this table
     */
    public ProctoringProctoredexamstudentallowance rename(String name) {
        return new ProctoringProctoredexamstudentallowance(name, null);
    }
}
