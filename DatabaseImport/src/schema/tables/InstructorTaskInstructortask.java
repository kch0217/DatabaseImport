/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.InstructorTaskInstructortaskRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InstructorTaskInstructortask extends TableImpl<InstructorTaskInstructortaskRecord> {

    private static final long serialVersionUID = -1565249561;

    /**
     * The reference instance of <code>bitnami_edx.instructor_task_instructortask</code>
     */
    public static final InstructorTaskInstructortask INSTRUCTOR_TASK_INSTRUCTORTASK = new InstructorTaskInstructortask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InstructorTaskInstructortaskRecord> getRecordType() {
        return InstructorTaskInstructortaskRecord.class;
    }

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.id</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.task_type</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, String> TASK_TYPE = createField("task_type", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.course_id</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.task_key</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, String> TASK_KEY = createField("task_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.task_input</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, String> TASK_INPUT = createField("task_input", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.task_id</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, String> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.task_state</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, String> TASK_STATE = createField("task_state", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.task_output</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, String> TASK_OUTPUT = createField("task_output", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.created</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.updated</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.subtasks</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, String> SUBTASKS = createField("subtasks", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.instructor_task_instructortask.requester_id</code>.
     */
    public final TableField<InstructorTaskInstructortaskRecord, Integer> REQUESTER_ID = createField("requester_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.instructor_task_instructortask</code> table reference
     */
    public InstructorTaskInstructortask() {
        this("instructor_task_instructortask", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.instructor_task_instructortask</code> table reference
     */
    public InstructorTaskInstructortask(String alias) {
        this(alias, INSTRUCTOR_TASK_INSTRUCTORTASK);
    }

    private InstructorTaskInstructortask(String alias, Table<InstructorTaskInstructortaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private InstructorTaskInstructortask(String alias, Table<InstructorTaskInstructortaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InstructorTaskInstructortaskRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INSTRUCTOR_TASK_INSTRUCTORTASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InstructorTaskInstructortaskRecord> getPrimaryKey() {
        return Keys.KEY_INSTRUCTOR_TASK_INSTRUCTORTASK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InstructorTaskInstructortaskRecord>> getKeys() {
        return Arrays.<UniqueKey<InstructorTaskInstructortaskRecord>>asList(Keys.KEY_INSTRUCTOR_TASK_INSTRUCTORTASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InstructorTaskInstructortaskRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InstructorTaskInstructortaskRecord, ?>>asList(Keys.INSTRUCTOR_TASK_IN_REQUESTER_ID_3383ACFE2FE42391_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InstructorTaskInstructortask as(String alias) {
        return new InstructorTaskInstructortask(alias, this);
    }

    /**
     * Rename this table
     */
    public InstructorTaskInstructortask rename(String name) {
        return new InstructorTaskInstructortask(name, null);
    }
}
