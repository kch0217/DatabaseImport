/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.AssessmentAitrainingworkflowRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssessmentAitrainingworkflow extends TableImpl<AssessmentAitrainingworkflowRecord> {

    private static final long serialVersionUID = -2032665967;

    /**
     * The reference instance of <code>bitnami_edx.assessment_aitrainingworkflow</code>
     */
    public static final AssessmentAitrainingworkflow ASSESSMENT_AITRAININGWORKFLOW = new AssessmentAitrainingworkflow();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssessmentAitrainingworkflowRecord> getRecordType() {
        return AssessmentAitrainingworkflowRecord.class;
    }

    /**
     * The column <code>bitnami_edx.assessment_aitrainingworkflow.id</code>.
     */
    public final TableField<AssessmentAitrainingworkflowRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_aitrainingworkflow.uuid</code>.
     */
    public final TableField<AssessmentAitrainingworkflowRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_aitrainingworkflow.course_id</code>.
     */
    public final TableField<AssessmentAitrainingworkflowRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_aitrainingworkflow.item_id</code>.
     */
    public final TableField<AssessmentAitrainingworkflowRecord, String> ITEM_ID = createField("item_id", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_aitrainingworkflow.scheduled_at</code>.
     */
    public final TableField<AssessmentAitrainingworkflowRecord, Timestamp> SCHEDULED_AT = createField("scheduled_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_aitrainingworkflow.completed_at</code>.
     */
    public final TableField<AssessmentAitrainingworkflowRecord, Timestamp> COMPLETED_AT = createField("completed_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.assessment_aitrainingworkflow.algorithm_id</code>.
     */
    public final TableField<AssessmentAitrainingworkflowRecord, String> ALGORITHM_ID = createField("algorithm_id", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_aitrainingworkflow.classifier_set_id</code>.
     */
    public final TableField<AssessmentAitrainingworkflowRecord, Integer> CLASSIFIER_SET_ID = createField("classifier_set_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.assessment_aitrainingworkflow</code> table reference
     */
    public AssessmentAitrainingworkflow() {
        this("assessment_aitrainingworkflow", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.assessment_aitrainingworkflow</code> table reference
     */
    public AssessmentAitrainingworkflow(String alias) {
        this(alias, ASSESSMENT_AITRAININGWORKFLOW);
    }

    private AssessmentAitrainingworkflow(String alias, Table<AssessmentAitrainingworkflowRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssessmentAitrainingworkflow(String alias, Table<AssessmentAitrainingworkflowRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssessmentAitrainingworkflowRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ASSESSMENT_AITRAININGWORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssessmentAitrainingworkflowRecord> getPrimaryKey() {
        return Keys.KEY_ASSESSMENT_AITRAININGWORKFLOW_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssessmentAitrainingworkflowRecord>> getKeys() {
        return Arrays.<UniqueKey<AssessmentAitrainingworkflowRecord>>asList(Keys.KEY_ASSESSMENT_AITRAININGWORKFLOW_PRIMARY, Keys.KEY_ASSESSMENT_AITRAININGWORKFLOW_UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AssessmentAitrainingworkflowRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AssessmentAitrainingworkflowRecord, ?>>asList(Keys.FB3B73B224DC39EB386F5D3EC67998B7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAitrainingworkflow as(String alias) {
        return new AssessmentAitrainingworkflow(alias, this);
    }

    /**
     * Rename this table
     */
    public AssessmentAitrainingworkflow rename(String name) {
        return new AssessmentAitrainingworkflow(name, null);
    }
}
