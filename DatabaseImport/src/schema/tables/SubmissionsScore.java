/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.SubmissionsScoreRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubmissionsScore extends TableImpl<SubmissionsScoreRecord> {

    private static final long serialVersionUID = -1747429714;

    /**
     * The reference instance of <code>bitnami_edx.submissions_score</code>
     */
    public static final SubmissionsScore SUBMISSIONS_SCORE = new SubmissionsScore();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SubmissionsScoreRecord> getRecordType() {
        return SubmissionsScoreRecord.class;
    }

    /**
     * The column <code>bitnami_edx.submissions_score.id</code>.
     */
    public final TableField<SubmissionsScoreRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.submissions_score.points_earned</code>.
     */
    public final TableField<SubmissionsScoreRecord, UInteger> POINTS_EARNED = createField("points_earned", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.submissions_score.points_possible</code>.
     */
    public final TableField<SubmissionsScoreRecord, UInteger> POINTS_POSSIBLE = createField("points_possible", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.submissions_score.created_at</code>.
     */
    public final TableField<SubmissionsScoreRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.submissions_score.reset</code>.
     */
    public final TableField<SubmissionsScoreRecord, Byte> RESET = createField("reset", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.submissions_score.student_item_id</code>.
     */
    public final TableField<SubmissionsScoreRecord, Integer> STUDENT_ITEM_ID = createField("student_item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.submissions_score.submission_id</code>.
     */
    public final TableField<SubmissionsScoreRecord, Integer> SUBMISSION_ID = createField("submission_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.submissions_score</code> table reference
     */
    public SubmissionsScore() {
        this("submissions_score", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.submissions_score</code> table reference
     */
    public SubmissionsScore(String alias) {
        this(alias, SUBMISSIONS_SCORE);
    }

    private SubmissionsScore(String alias, Table<SubmissionsScoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private SubmissionsScore(String alias, Table<SubmissionsScoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SubmissionsScoreRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SUBMISSIONS_SCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SubmissionsScoreRecord> getPrimaryKey() {
        return Keys.KEY_SUBMISSIONS_SCORE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SubmissionsScoreRecord>> getKeys() {
        return Arrays.<UniqueKey<SubmissionsScoreRecord>>asList(Keys.KEY_SUBMISSIONS_SCORE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SubmissionsScoreRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SubmissionsScoreRecord, ?>>asList(Keys.S_STUDENT_ITEM_ID_7D4D4BB6A7DD0642_FK_SUBMISSIONS_STUDENTITEM_ID, Keys.SUBM_SUBMISSION_ID_3FC975FE88442FF7_FK_SUBMISSIONS_SUBMISSION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubmissionsScore as(String alias) {
        return new SubmissionsScore(alias, this);
    }

    /**
     * Rename this table
     */
    public SubmissionsScore rename(String name) {
        return new SubmissionsScore(name, null);
    }
}
