/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.AssessmentAssessmentpartRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssessmentAssessmentpart extends TableImpl<AssessmentAssessmentpartRecord> {

    private static final long serialVersionUID = 1912127965;

    /**
     * The reference instance of <code>bitnami_edx.assessment_assessmentpart</code>
     */
    public static final AssessmentAssessmentpart ASSESSMENT_ASSESSMENTPART = new AssessmentAssessmentpart();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssessmentAssessmentpartRecord> getRecordType() {
        return AssessmentAssessmentpartRecord.class;
    }

    /**
     * The column <code>bitnami_edx.assessment_assessmentpart.id</code>.
     */
    public final TableField<AssessmentAssessmentpartRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_assessmentpart.feedback</code>.
     */
    public final TableField<AssessmentAssessmentpartRecord, String> FEEDBACK = createField("feedback", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_assessmentpart.assessment_id</code>.
     */
    public final TableField<AssessmentAssessmentpartRecord, Integer> ASSESSMENT_ID = createField("assessment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_assessmentpart.criterion_id</code>.
     */
    public final TableField<AssessmentAssessmentpartRecord, Integer> CRITERION_ID = createField("criterion_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_assessmentpart.option_id</code>.
     */
    public final TableField<AssessmentAssessmentpartRecord, Integer> OPTION_ID = createField("option_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.assessment_assessmentpart</code> table reference
     */
    public AssessmentAssessmentpart() {
        this("assessment_assessmentpart", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.assessment_assessmentpart</code> table reference
     */
    public AssessmentAssessmentpart(String alias) {
        this(alias, ASSESSMENT_ASSESSMENTPART);
    }

    private AssessmentAssessmentpart(String alias, Table<AssessmentAssessmentpartRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssessmentAssessmentpart(String alias, Table<AssessmentAssessmentpartRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssessmentAssessmentpartRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ASSESSMENT_ASSESSMENTPART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssessmentAssessmentpartRecord> getPrimaryKey() {
        return Keys.KEY_ASSESSMENT_ASSESSMENTPART_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssessmentAssessmentpartRecord>> getKeys() {
        return Arrays.<UniqueKey<AssessmentAssessmentpartRecord>>asList(Keys.KEY_ASSESSMENT_ASSESSMENTPART_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AssessmentAssessmentpartRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AssessmentAssessmentpartRecord, ?>>asList(Keys.ASSES_ASSESSMENT_ID_1D752290138CE479_FK_ASSESSMENT_ASSESSMENT_ID, Keys.ASSESSM_CRITERION_ID_2061F2359FD292BF_FK_ASSESSMENT_CRITERION_ID, Keys.ASSE_OPTION_ID_2508A14FEEABF4CE_FK_ASSESSMENT_CRITERIONOPTION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentAssessmentpart as(String alias) {
        return new AssessmentAssessmentpart(alias, this);
    }

    /**
     * Rename this table
     */
    public AssessmentAssessmentpart rename(String name) {
        return new AssessmentAssessmentpart(name, null);
    }
}
