/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MicrositeConfigurationHistoricalmicrositeorganizationmapping extends TableImpl<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord> {

    private static final long serialVersionUID = -671777651;

    /**
     * The reference instance of <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping</code>
     */
    public static final MicrositeConfigurationHistoricalmicrositeorganizationmapping MICROSITE_CONFIGURATION_HISTORICALMICROSITEORGANIZATIONMAPPING = new MicrositeConfigurationHistoricalmicrositeorganizationmapping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord> getRecordType() {
        return MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord.class;
    }

    /**
     * The column <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping.id</code>.
     */
    public final TableField<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping.organization</code>.
     */
    public final TableField<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, String> ORGANIZATION = createField("organization", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping.history_id</code>.
     */
    public final TableField<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, Integer> HISTORY_ID = createField("history_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping.history_date</code>.
     */
    public final TableField<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, Timestamp> HISTORY_DATE = createField("history_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping.history_type</code>.
     */
    public final TableField<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, String> HISTORY_TYPE = createField("history_type", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping.history_user_id</code>.
     */
    public final TableField<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, Integer> HISTORY_USER_ID = createField("history_user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping.microsite_id</code>.
     */
    public final TableField<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, Integer> MICROSITE_ID = createField("microsite_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping</code> table reference
     */
    public MicrositeConfigurationHistoricalmicrositeorganizationmapping() {
        this("microsite_configuration_historicalmicrositeorganizationmapping", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping</code> table reference
     */
    public MicrositeConfigurationHistoricalmicrositeorganizationmapping(String alias) {
        this(alias, MICROSITE_CONFIGURATION_HISTORICALMICROSITEORGANIZATIONMAPPING);
    }

    private MicrositeConfigurationHistoricalmicrositeorganizationmapping(String alias, Table<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private MicrositeConfigurationHistoricalmicrositeorganizationmapping(String alias, Table<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MICROSITE_CONFIGURATION_HISTORICALMICROSITEORGANIZATIONMAPPING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord> getPrimaryKey() {
        return Keys.KEY_MICROSITE_CONFIGURATION_HISTORICALMICROSITEORGANIZATIONMAPPING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord>> getKeys() {
        return Arrays.<UniqueKey<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord>>asList(Keys.KEY_MICROSITE_CONFIGURATION_HISTORICALMICROSITEORGANIZATIONMAPPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MicrositeConfigurationHistoricalmicrositeorganizationmappingRecord, ?>>asList(Keys.MICROSITE_CONFI_HISTORY_USER_ID_40846FE04877DD35_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicrositeConfigurationHistoricalmicrositeorganizationmapping as(String alias) {
        return new MicrositeConfigurationHistoricalmicrositeorganizationmapping(alias, this);
    }

    /**
     * Rename this table
     */
    public MicrositeConfigurationHistoricalmicrositeorganizationmapping rename(String name) {
        return new MicrositeConfigurationHistoricalmicrositeorganizationmapping(name, null);
    }
}
