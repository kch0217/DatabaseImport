/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CoursewareOfflinecomputedgradelogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoursewareOfflinecomputedgradelog extends TableImpl<CoursewareOfflinecomputedgradelogRecord> {

    private static final long serialVersionUID = 1226272325;

    /**
     * The reference instance of <code>bitnami_edx.courseware_offlinecomputedgradelog</code>
     */
    public static final CoursewareOfflinecomputedgradelog COURSEWARE_OFFLINECOMPUTEDGRADELOG = new CoursewareOfflinecomputedgradelog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoursewareOfflinecomputedgradelogRecord> getRecordType() {
        return CoursewareOfflinecomputedgradelogRecord.class;
    }

    /**
     * The column <code>bitnami_edx.courseware_offlinecomputedgradelog.id</code>.
     */
    public final TableField<CoursewareOfflinecomputedgradelogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_offlinecomputedgradelog.course_id</code>.
     */
    public final TableField<CoursewareOfflinecomputedgradelogRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_offlinecomputedgradelog.created</code>.
     */
    public final TableField<CoursewareOfflinecomputedgradelogRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.courseware_offlinecomputedgradelog.seconds</code>.
     */
    public final TableField<CoursewareOfflinecomputedgradelogRecord, Integer> SECONDS = createField("seconds", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_offlinecomputedgradelog.nstudents</code>.
     */
    public final TableField<CoursewareOfflinecomputedgradelogRecord, Integer> NSTUDENTS = createField("nstudents", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.courseware_offlinecomputedgradelog</code> table reference
     */
    public CoursewareOfflinecomputedgradelog() {
        this("courseware_offlinecomputedgradelog", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.courseware_offlinecomputedgradelog</code> table reference
     */
    public CoursewareOfflinecomputedgradelog(String alias) {
        this(alias, COURSEWARE_OFFLINECOMPUTEDGRADELOG);
    }

    private CoursewareOfflinecomputedgradelog(String alias, Table<CoursewareOfflinecomputedgradelogRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoursewareOfflinecomputedgradelog(String alias, Table<CoursewareOfflinecomputedgradelogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CoursewareOfflinecomputedgradelogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSEWARE_OFFLINECOMPUTEDGRADELOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CoursewareOfflinecomputedgradelogRecord> getPrimaryKey() {
        return Keys.KEY_COURSEWARE_OFFLINECOMPUTEDGRADELOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CoursewareOfflinecomputedgradelogRecord>> getKeys() {
        return Arrays.<UniqueKey<CoursewareOfflinecomputedgradelogRecord>>asList(Keys.KEY_COURSEWARE_OFFLINECOMPUTEDGRADELOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursewareOfflinecomputedgradelog as(String alias) {
        return new CoursewareOfflinecomputedgradelog(alias, this);
    }

    /**
     * Rename this table
     */
    public CoursewareOfflinecomputedgradelog rename(String name) {
        return new CoursewareOfflinecomputedgradelog(name, null);
    }
}
