/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CertificatesCertificatetemplateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CertificatesCertificatetemplate extends TableImpl<CertificatesCertificatetemplateRecord> {

    private static final long serialVersionUID = -130261606;

    /**
     * The reference instance of <code>bitnami_edx.certificates_certificatetemplate</code>
     */
    public static final CertificatesCertificatetemplate CERTIFICATES_CERTIFICATETEMPLATE = new CertificatesCertificatetemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CertificatesCertificatetemplateRecord> getRecordType() {
        return CertificatesCertificatetemplateRecord.class;
    }

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.id</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.created</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.modified</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.name</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.description</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.template</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, String> TEMPLATE = createField("template", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.organization_id</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, Integer> ORGANIZATION_ID = createField("organization_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.course_key</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, String> COURSE_KEY = createField("course_key", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.mode</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, String> MODE = createField("mode", org.jooq.impl.SQLDataType.VARCHAR.length(125), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplate.is_active</code>.
     */
    public final TableField<CertificatesCertificatetemplateRecord, Byte> IS_ACTIVE = createField("is_active", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.certificates_certificatetemplate</code> table reference
     */
    public CertificatesCertificatetemplate() {
        this("certificates_certificatetemplate", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.certificates_certificatetemplate</code> table reference
     */
    public CertificatesCertificatetemplate(String alias) {
        this(alias, CERTIFICATES_CERTIFICATETEMPLATE);
    }

    private CertificatesCertificatetemplate(String alias, Table<CertificatesCertificatetemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private CertificatesCertificatetemplate(String alias, Table<CertificatesCertificatetemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CertificatesCertificatetemplateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CERTIFICATES_CERTIFICATETEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CertificatesCertificatetemplateRecord> getPrimaryKey() {
        return Keys.KEY_CERTIFICATES_CERTIFICATETEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CertificatesCertificatetemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<CertificatesCertificatetemplateRecord>>asList(Keys.KEY_CERTIFICATES_CERTIFICATETEMPLATE_PRIMARY, Keys.KEY_CERTIFICATES_CERTIFICATETEMPLATE_CERTIFICATES_CERTIFICATETEM_ORGANIZATION_ID_F0C7BFD32B374FB_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CertificatesCertificatetemplate as(String alias) {
        return new CertificatesCertificatetemplate(alias, this);
    }

    /**
     * Rename this table
     */
    public CertificatesCertificatetemplate rename(String name) {
        return new CertificatesCertificatetemplate(name, null);
    }
}
