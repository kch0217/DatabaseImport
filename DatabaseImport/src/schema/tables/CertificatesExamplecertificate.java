/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CertificatesExamplecertificateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CertificatesExamplecertificate extends TableImpl<CertificatesExamplecertificateRecord> {

    private static final long serialVersionUID = -639505813;

    /**
     * The reference instance of <code>bitnami_edx.certificates_examplecertificate</code>
     */
    public static final CertificatesExamplecertificate CERTIFICATES_EXAMPLECERTIFICATE = new CertificatesExamplecertificate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CertificatesExamplecertificateRecord> getRecordType() {
        return CertificatesExamplecertificateRecord.class;
    }

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.id</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.created</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.modified</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.description</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.uuid</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.access_key</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, String> ACCESS_KEY = createField("access_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.full_name</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, String> FULL_NAME = createField("full_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.template</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, String> TEMPLATE = createField("template", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.status</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.error_reason</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, String> ERROR_REASON = createField("error_reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.download_url</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, String> DOWNLOAD_URL = createField("download_url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.certificates_examplecertificate.example_cert_set_id</code>.
     */
    public final TableField<CertificatesExamplecertificateRecord, Integer> EXAMPLE_CERT_SET_ID = createField("example_cert_set_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.certificates_examplecertificate</code> table reference
     */
    public CertificatesExamplecertificate() {
        this("certificates_examplecertificate", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.certificates_examplecertificate</code> table reference
     */
    public CertificatesExamplecertificate(String alias) {
        this(alias, CERTIFICATES_EXAMPLECERTIFICATE);
    }

    private CertificatesExamplecertificate(String alias, Table<CertificatesExamplecertificateRecord> aliased) {
        this(alias, aliased, null);
    }

    private CertificatesExamplecertificate(String alias, Table<CertificatesExamplecertificateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CertificatesExamplecertificateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CERTIFICATES_EXAMPLECERTIFICATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CertificatesExamplecertificateRecord> getPrimaryKey() {
        return Keys.KEY_CERTIFICATES_EXAMPLECERTIFICATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CertificatesExamplecertificateRecord>> getKeys() {
        return Arrays.<UniqueKey<CertificatesExamplecertificateRecord>>asList(Keys.KEY_CERTIFICATES_EXAMPLECERTIFICATE_PRIMARY, Keys.KEY_CERTIFICATES_EXAMPLECERTIFICATE_UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CertificatesExamplecertificateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CertificatesExamplecertificateRecord, ?>>asList(Keys.D5CEAE87B49ED6AB15ACE7B6F1C01C35);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CertificatesExamplecertificate as(String alias) {
        return new CertificatesExamplecertificate(alias, this);
    }

    /**
     * Rename this table
     */
    public CertificatesExamplecertificate rename(String name) {
        return new CertificatesExamplecertificate(name, null);
    }
}
