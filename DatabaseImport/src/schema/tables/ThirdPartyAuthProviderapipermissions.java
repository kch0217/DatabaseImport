/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ThirdPartyAuthProviderapipermissionsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThirdPartyAuthProviderapipermissions extends TableImpl<ThirdPartyAuthProviderapipermissionsRecord> {

    private static final long serialVersionUID = -2142529493;

    /**
     * The reference instance of <code>bitnami_edx.third_party_auth_providerapipermissions</code>
     */
    public static final ThirdPartyAuthProviderapipermissions THIRD_PARTY_AUTH_PROVIDERAPIPERMISSIONS = new ThirdPartyAuthProviderapipermissions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ThirdPartyAuthProviderapipermissionsRecord> getRecordType() {
        return ThirdPartyAuthProviderapipermissionsRecord.class;
    }

    /**
     * The column <code>bitnami_edx.third_party_auth_providerapipermissions.id</code>.
     */
    public final TableField<ThirdPartyAuthProviderapipermissionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.third_party_auth_providerapipermissions.provider_id</code>.
     */
    public final TableField<ThirdPartyAuthProviderapipermissionsRecord, String> PROVIDER_ID = createField("provider_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.third_party_auth_providerapipermissions.client_id</code>.
     */
    public final TableField<ThirdPartyAuthProviderapipermissionsRecord, Integer> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.third_party_auth_providerapipermissions</code> table reference
     */
    public ThirdPartyAuthProviderapipermissions() {
        this("third_party_auth_providerapipermissions", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.third_party_auth_providerapipermissions</code> table reference
     */
    public ThirdPartyAuthProviderapipermissions(String alias) {
        this(alias, THIRD_PARTY_AUTH_PROVIDERAPIPERMISSIONS);
    }

    private ThirdPartyAuthProviderapipermissions(String alias, Table<ThirdPartyAuthProviderapipermissionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ThirdPartyAuthProviderapipermissions(String alias, Table<ThirdPartyAuthProviderapipermissionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ThirdPartyAuthProviderapipermissionsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_THIRD_PARTY_AUTH_PROVIDERAPIPERMISSIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ThirdPartyAuthProviderapipermissionsRecord> getPrimaryKey() {
        return Keys.KEY_THIRD_PARTY_AUTH_PROVIDERAPIPERMISSIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ThirdPartyAuthProviderapipermissionsRecord>> getKeys() {
        return Arrays.<UniqueKey<ThirdPartyAuthProviderapipermissionsRecord>>asList(Keys.KEY_THIRD_PARTY_AUTH_PROVIDERAPIPERMISSIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ThirdPartyAuthProviderapipermissionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ThirdPartyAuthProviderapipermissionsRecord, ?>>asList(Keys.THIRD_PARTY_AUTH__CLIENT_ID_648D3F6D6109693B_FK_OAUTH2_CLIENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThirdPartyAuthProviderapipermissions as(String alias) {
        return new ThirdPartyAuthProviderapipermissions(alias, this);
    }

    /**
     * Rename this table
     */
    public ThirdPartyAuthProviderapipermissions rename(String name) {
        return new ThirdPartyAuthProviderapipermissions(name, null);
    }
}
