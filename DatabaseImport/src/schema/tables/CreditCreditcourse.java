/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CreditCreditcourseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditCreditcourse extends TableImpl<CreditCreditcourseRecord> {

    private static final long serialVersionUID = -259479511;

    /**
     * The reference instance of <code>bitnami_edx.credit_creditcourse</code>
     */
    public static final CreditCreditcourse CREDIT_CREDITCOURSE = new CreditCreditcourse();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CreditCreditcourseRecord> getRecordType() {
        return CreditCreditcourseRecord.class;
    }

    /**
     * The column <code>bitnami_edx.credit_creditcourse.id</code>.
     */
    public final TableField<CreditCreditcourseRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditcourse.course_key</code>.
     */
    public final TableField<CreditCreditcourseRecord, String> COURSE_KEY = createField("course_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditcourse.enabled</code>.
     */
    public final TableField<CreditCreditcourseRecord, Byte> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.credit_creditcourse</code> table reference
     */
    public CreditCreditcourse() {
        this("credit_creditcourse", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.credit_creditcourse</code> table reference
     */
    public CreditCreditcourse(String alias) {
        this(alias, CREDIT_CREDITCOURSE);
    }

    private CreditCreditcourse(String alias, Table<CreditCreditcourseRecord> aliased) {
        this(alias, aliased, null);
    }

    private CreditCreditcourse(String alias, Table<CreditCreditcourseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CreditCreditcourseRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CREDIT_CREDITCOURSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CreditCreditcourseRecord> getPrimaryKey() {
        return Keys.KEY_CREDIT_CREDITCOURSE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CreditCreditcourseRecord>> getKeys() {
        return Arrays.<UniqueKey<CreditCreditcourseRecord>>asList(Keys.KEY_CREDIT_CREDITCOURSE_PRIMARY, Keys.KEY_CREDIT_CREDITCOURSE_COURSE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditCreditcourse as(String alias) {
        return new CreditCreditcourse(alias, this);
    }

    /**
     * Rename this table
     */
    public CreditCreditcourse rename(String name) {
        return new CreditCreditcourse(name, null);
    }
}
