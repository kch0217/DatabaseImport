/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CoursewareStudentfieldoverrideRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoursewareStudentfieldoverride extends TableImpl<CoursewareStudentfieldoverrideRecord> {

    private static final long serialVersionUID = 50566327;

    /**
     * The reference instance of <code>bitnami_edx.courseware_studentfieldoverride</code>
     */
    public static final CoursewareStudentfieldoverride COURSEWARE_STUDENTFIELDOVERRIDE = new CoursewareStudentfieldoverride();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoursewareStudentfieldoverrideRecord> getRecordType() {
        return CoursewareStudentfieldoverrideRecord.class;
    }

    /**
     * The column <code>bitnami_edx.courseware_studentfieldoverride.id</code>.
     */
    public final TableField<CoursewareStudentfieldoverrideRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentfieldoverride.created</code>.
     */
    public final TableField<CoursewareStudentfieldoverrideRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentfieldoverride.modified</code>.
     */
    public final TableField<CoursewareStudentfieldoverrideRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentfieldoverride.course_id</code>.
     */
    public final TableField<CoursewareStudentfieldoverrideRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentfieldoverride.location</code>.
     */
    public final TableField<CoursewareStudentfieldoverrideRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentfieldoverride.field</code>.
     */
    public final TableField<CoursewareStudentfieldoverrideRecord, String> FIELD = createField("field", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentfieldoverride.value</code>.
     */
    public final TableField<CoursewareStudentfieldoverrideRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.courseware_studentfieldoverride.student_id</code>.
     */
    public final TableField<CoursewareStudentfieldoverrideRecord, Integer> STUDENT_ID = createField("student_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.courseware_studentfieldoverride</code> table reference
     */
    public CoursewareStudentfieldoverride() {
        this("courseware_studentfieldoverride", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.courseware_studentfieldoverride</code> table reference
     */
    public CoursewareStudentfieldoverride(String alias) {
        this(alias, COURSEWARE_STUDENTFIELDOVERRIDE);
    }

    private CoursewareStudentfieldoverride(String alias, Table<CoursewareStudentfieldoverrideRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoursewareStudentfieldoverride(String alias, Table<CoursewareStudentfieldoverrideRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CoursewareStudentfieldoverrideRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSEWARE_STUDENTFIELDOVERRIDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CoursewareStudentfieldoverrideRecord> getPrimaryKey() {
        return Keys.KEY_COURSEWARE_STUDENTFIELDOVERRIDE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CoursewareStudentfieldoverrideRecord>> getKeys() {
        return Arrays.<UniqueKey<CoursewareStudentfieldoverrideRecord>>asList(Keys.KEY_COURSEWARE_STUDENTFIELDOVERRIDE_PRIMARY, Keys.KEY_COURSEWARE_STUDENTFIELDOVERRIDE_COURSEWARE_STUDENTFIELDOVERRIDE_COURSE_ID_39DD7EAEAC5623D2_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CoursewareStudentfieldoverrideRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CoursewareStudentfieldoverrideRecord, ?>>asList(Keys.COURSEWARE_STUDENTFI_STUDENT_ID_70E7C0F5A4F91B65_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursewareStudentfieldoverride as(String alias) {
        return new CoursewareStudentfieldoverride(alias, this);
    }

    /**
     * Rename this table
     */
    public CoursewareStudentfieldoverride rename(String name) {
        return new CoursewareStudentfieldoverride(name, null);
    }
}
