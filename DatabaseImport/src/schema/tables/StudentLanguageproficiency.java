/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.StudentLanguageproficiencyRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentLanguageproficiency extends TableImpl<StudentLanguageproficiencyRecord> {

    private static final long serialVersionUID = 1225149728;

    /**
     * The reference instance of <code>bitnami_edx.student_languageproficiency</code>
     */
    public static final StudentLanguageproficiency STUDENT_LANGUAGEPROFICIENCY = new StudentLanguageproficiency();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentLanguageproficiencyRecord> getRecordType() {
        return StudentLanguageproficiencyRecord.class;
    }

    /**
     * The column <code>bitnami_edx.student_languageproficiency.id</code>.
     */
    public final TableField<StudentLanguageproficiencyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_languageproficiency.code</code>.
     */
    public final TableField<StudentLanguageproficiencyRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_languageproficiency.user_profile_id</code>.
     */
    public final TableField<StudentLanguageproficiencyRecord, Integer> USER_PROFILE_ID = createField("user_profile_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.student_languageproficiency</code> table reference
     */
    public StudentLanguageproficiency() {
        this("student_languageproficiency", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.student_languageproficiency</code> table reference
     */
    public StudentLanguageproficiency(String alias) {
        this(alias, STUDENT_LANGUAGEPROFICIENCY);
    }

    private StudentLanguageproficiency(String alias, Table<StudentLanguageproficiencyRecord> aliased) {
        this(alias, aliased, null);
    }

    private StudentLanguageproficiency(String alias, Table<StudentLanguageproficiencyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentLanguageproficiencyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENT_LANGUAGEPROFICIENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentLanguageproficiencyRecord> getPrimaryKey() {
        return Keys.KEY_STUDENT_LANGUAGEPROFICIENCY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentLanguageproficiencyRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentLanguageproficiencyRecord>>asList(Keys.KEY_STUDENT_LANGUAGEPROFICIENCY_PRIMARY, Keys.KEY_STUDENT_LANGUAGEPROFICIENCY_STUDENT_LANGUAGEPROFICIENCY_CODE_68E76171684C62E5_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StudentLanguageproficiencyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StudentLanguageproficiencyRecord, ?>>asList(Keys.STUDENT__USER_PROFILE_ID_283EDB437B102619_FK_AUTH_USERPROFILE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentLanguageproficiency as(String alias) {
        return new StudentLanguageproficiency(alias, this);
    }

    /**
     * Rename this table
     */
    public StudentLanguageproficiency rename(String name) {
        return new StudentLanguageproficiency(name, null);
    }
}
