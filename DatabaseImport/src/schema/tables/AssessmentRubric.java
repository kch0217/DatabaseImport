/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.AssessmentRubricRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssessmentRubric extends TableImpl<AssessmentRubricRecord> {

    private static final long serialVersionUID = 470434712;

    /**
     * The reference instance of <code>bitnami_edx.assessment_rubric</code>
     */
    public static final AssessmentRubric ASSESSMENT_RUBRIC = new AssessmentRubric();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssessmentRubricRecord> getRecordType() {
        return AssessmentRubricRecord.class;
    }

    /**
     * The column <code>bitnami_edx.assessment_rubric.id</code>.
     */
    public final TableField<AssessmentRubricRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_rubric.content_hash</code>.
     */
    public final TableField<AssessmentRubricRecord, String> CONTENT_HASH = createField("content_hash", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_rubric.structure_hash</code>.
     */
    public final TableField<AssessmentRubricRecord, String> STRUCTURE_HASH = createField("structure_hash", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.assessment_rubric</code> table reference
     */
    public AssessmentRubric() {
        this("assessment_rubric", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.assessment_rubric</code> table reference
     */
    public AssessmentRubric(String alias) {
        this(alias, ASSESSMENT_RUBRIC);
    }

    private AssessmentRubric(String alias, Table<AssessmentRubricRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssessmentRubric(String alias, Table<AssessmentRubricRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssessmentRubricRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ASSESSMENT_RUBRIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssessmentRubricRecord> getPrimaryKey() {
        return Keys.KEY_ASSESSMENT_RUBRIC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssessmentRubricRecord>> getKeys() {
        return Arrays.<UniqueKey<AssessmentRubricRecord>>asList(Keys.KEY_ASSESSMENT_RUBRIC_PRIMARY, Keys.KEY_ASSESSMENT_RUBRIC_CONTENT_HASH);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentRubric as(String alias) {
        return new AssessmentRubric(alias, this);
    }

    /**
     * Rename this table
     */
    public AssessmentRubric rename(String name) {
        return new AssessmentRubric(name, null);
    }
}
