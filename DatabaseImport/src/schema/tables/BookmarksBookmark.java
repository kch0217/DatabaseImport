/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.BookmarksBookmarkRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookmarksBookmark extends TableImpl<BookmarksBookmarkRecord> {

    private static final long serialVersionUID = 1978434306;

    /**
     * The reference instance of <code>bitnami_edx.bookmarks_bookmark</code>
     */
    public static final BookmarksBookmark BOOKMARKS_BOOKMARK = new BookmarksBookmark();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookmarksBookmarkRecord> getRecordType() {
        return BookmarksBookmarkRecord.class;
    }

    /**
     * The column <code>bitnami_edx.bookmarks_bookmark.id</code>.
     */
    public final TableField<BookmarksBookmarkRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_bookmark.created</code>.
     */
    public final TableField<BookmarksBookmarkRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_bookmark.modified</code>.
     */
    public final TableField<BookmarksBookmarkRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_bookmark.course_key</code>.
     */
    public final TableField<BookmarksBookmarkRecord, String> COURSE_KEY = createField("course_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_bookmark.usage_key</code>.
     */
    public final TableField<BookmarksBookmarkRecord, String> USAGE_KEY = createField("usage_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_bookmark.path</code>.
     */
    public final TableField<BookmarksBookmarkRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_bookmark.user_id</code>.
     */
    public final TableField<BookmarksBookmarkRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_bookmark.xblock_cache_id</code>.
     */
    public final TableField<BookmarksBookmarkRecord, Integer> XBLOCK_CACHE_ID = createField("xblock_cache_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.bookmarks_bookmark</code> table reference
     */
    public BookmarksBookmark() {
        this("bookmarks_bookmark", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.bookmarks_bookmark</code> table reference
     */
    public BookmarksBookmark(String alias) {
        this(alias, BOOKMARKS_BOOKMARK);
    }

    private BookmarksBookmark(String alias, Table<BookmarksBookmarkRecord> aliased) {
        this(alias, aliased, null);
    }

    private BookmarksBookmark(String alias, Table<BookmarksBookmarkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BookmarksBookmarkRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BOOKMARKS_BOOKMARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BookmarksBookmarkRecord> getPrimaryKey() {
        return Keys.KEY_BOOKMARKS_BOOKMARK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BookmarksBookmarkRecord>> getKeys() {
        return Arrays.<UniqueKey<BookmarksBookmarkRecord>>asList(Keys.KEY_BOOKMARKS_BOOKMARK_PRIMARY, Keys.KEY_BOOKMARKS_BOOKMARK_BOOKMARKS_BOOKMARK_USER_ID_7059F67CDDD52C9A_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BookmarksBookmarkRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BookmarksBookmarkRecord, ?>>asList(Keys.BOOKMARKS_BOOKMARK_USER_ID_33914FA9ACCF01CB_FK_AUTH_USER_ID, Keys.BOO_XBLOCK_CACHE_ID_22D48842487BA2D2_FK_BOOKMARKS_XBLOCKCACHE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarksBookmark as(String alias) {
        return new BookmarksBookmark(alias, this);
    }

    /**
     * Rename this table
     */
    public BookmarksBookmark rename(String name) {
        return new BookmarksBookmark(name, null);
    }
}
