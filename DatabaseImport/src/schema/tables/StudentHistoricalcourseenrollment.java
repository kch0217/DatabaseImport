/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.StudentHistoricalcourseenrollmentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentHistoricalcourseenrollment extends TableImpl<StudentHistoricalcourseenrollmentRecord> {

    private static final long serialVersionUID = -1940833414;

    /**
     * The reference instance of <code>bitnami_edx.student_historicalcourseenrollment</code>
     */
    public static final StudentHistoricalcourseenrollment STUDENT_HISTORICALCOURSEENROLLMENT = new StudentHistoricalcourseenrollment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentHistoricalcourseenrollmentRecord> getRecordType() {
        return StudentHistoricalcourseenrollmentRecord.class;
    }

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.id</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.course_id</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.created</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.is_active</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, Byte> IS_ACTIVE = createField("is_active", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.mode</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, String> MODE = createField("mode", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.history_id</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, Integer> HISTORY_ID = createField("history_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.history_date</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, Timestamp> HISTORY_DATE = createField("history_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.history_type</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, String> HISTORY_TYPE = createField("history_type", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.history_user_id</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, Integer> HISTORY_USER_ID = createField("history_user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.student_historicalcourseenrollment.user_id</code>.
     */
    public final TableField<StudentHistoricalcourseenrollmentRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.student_historicalcourseenrollment</code> table reference
     */
    public StudentHistoricalcourseenrollment() {
        this("student_historicalcourseenrollment", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.student_historicalcourseenrollment</code> table reference
     */
    public StudentHistoricalcourseenrollment(String alias) {
        this(alias, STUDENT_HISTORICALCOURSEENROLLMENT);
    }

    private StudentHistoricalcourseenrollment(String alias, Table<StudentHistoricalcourseenrollmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private StudentHistoricalcourseenrollment(String alias, Table<StudentHistoricalcourseenrollmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentHistoricalcourseenrollmentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENT_HISTORICALCOURSEENROLLMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentHistoricalcourseenrollmentRecord> getPrimaryKey() {
        return Keys.KEY_STUDENT_HISTORICALCOURSEENROLLMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentHistoricalcourseenrollmentRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentHistoricalcourseenrollmentRecord>>asList(Keys.KEY_STUDENT_HISTORICALCOURSEENROLLMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StudentHistoricalcourseenrollmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StudentHistoricalcourseenrollmentRecord, ?>>asList(Keys.STUDENT_HISTORI_HISTORY_USER_ID_49FD2870709A6441_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentHistoricalcourseenrollment as(String alias) {
        return new StudentHistoricalcourseenrollment(alias, this);
    }

    /**
     * Rename this table
     */
    public StudentHistoricalcourseenrollment rename(String name) {
        return new StudentHistoricalcourseenrollment(name, null);
    }
}
