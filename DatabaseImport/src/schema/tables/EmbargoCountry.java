/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.EmbargoCountryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmbargoCountry extends TableImpl<EmbargoCountryRecord> {

    private static final long serialVersionUID = 22039739;

    /**
     * The reference instance of <code>bitnami_edx.embargo_country</code>
     */
    public static final EmbargoCountry EMBARGO_COUNTRY = new EmbargoCountry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmbargoCountryRecord> getRecordType() {
        return EmbargoCountryRecord.class;
    }

    /**
     * The column <code>bitnami_edx.embargo_country.id</code>.
     */
    public final TableField<EmbargoCountryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.embargo_country.country</code>.
     */
    public final TableField<EmbargoCountryRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.embargo_country</code> table reference
     */
    public EmbargoCountry() {
        this("embargo_country", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.embargo_country</code> table reference
     */
    public EmbargoCountry(String alias) {
        this(alias, EMBARGO_COUNTRY);
    }

    private EmbargoCountry(String alias, Table<EmbargoCountryRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmbargoCountry(String alias, Table<EmbargoCountryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmbargoCountryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMBARGO_COUNTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmbargoCountryRecord> getPrimaryKey() {
        return Keys.KEY_EMBARGO_COUNTRY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmbargoCountryRecord>> getKeys() {
        return Arrays.<UniqueKey<EmbargoCountryRecord>>asList(Keys.KEY_EMBARGO_COUNTRY_PRIMARY, Keys.KEY_EMBARGO_COUNTRY_COUNTRY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmbargoCountry as(String alias) {
        return new EmbargoCountry(alias, this);
    }

    /**
     * Rename this table
     */
    public EmbargoCountry rename(String name) {
        return new EmbargoCountry(name, null);
    }
}
