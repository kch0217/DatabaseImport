/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.StudentPendingemailchangeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentPendingemailchange extends TableImpl<StudentPendingemailchangeRecord> {

    private static final long serialVersionUID = 1215146876;

    /**
     * The reference instance of <code>bitnami_edx.student_pendingemailchange</code>
     */
    public static final StudentPendingemailchange STUDENT_PENDINGEMAILCHANGE = new StudentPendingemailchange();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentPendingemailchangeRecord> getRecordType() {
        return StudentPendingemailchangeRecord.class;
    }

    /**
     * The column <code>bitnami_edx.student_pendingemailchange.id</code>.
     */
    public final TableField<StudentPendingemailchangeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_pendingemailchange.new_email</code>.
     */
    public final TableField<StudentPendingemailchangeRecord, String> NEW_EMAIL = createField("new_email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_pendingemailchange.activation_key</code>.
     */
    public final TableField<StudentPendingemailchangeRecord, String> ACTIVATION_KEY = createField("activation_key", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_pendingemailchange.user_id</code>.
     */
    public final TableField<StudentPendingemailchangeRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.student_pendingemailchange</code> table reference
     */
    public StudentPendingemailchange() {
        this("student_pendingemailchange", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.student_pendingemailchange</code> table reference
     */
    public StudentPendingemailchange(String alias) {
        this(alias, STUDENT_PENDINGEMAILCHANGE);
    }

    private StudentPendingemailchange(String alias, Table<StudentPendingemailchangeRecord> aliased) {
        this(alias, aliased, null);
    }

    private StudentPendingemailchange(String alias, Table<StudentPendingemailchangeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentPendingemailchangeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENT_PENDINGEMAILCHANGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentPendingemailchangeRecord> getPrimaryKey() {
        return Keys.KEY_STUDENT_PENDINGEMAILCHANGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentPendingemailchangeRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentPendingemailchangeRecord>>asList(Keys.KEY_STUDENT_PENDINGEMAILCHANGE_PRIMARY, Keys.KEY_STUDENT_PENDINGEMAILCHANGE_ACTIVATION_KEY, Keys.KEY_STUDENT_PENDINGEMAILCHANGE_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StudentPendingemailchangeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StudentPendingemailchangeRecord, ?>>asList(Keys.STUDENT_PENDINGEMAILCHA_USER_ID_566CACCC3F3C3966_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentPendingemailchange as(String alias) {
        return new StudentPendingemailchange(alias, this);
    }

    /**
     * Rename this table
     */
    public StudentPendingemailchange rename(String name) {
        return new StudentPendingemailchange(name, null);
    }
}
