/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ProctoringProctoredexamRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProctoringProctoredexam extends TableImpl<ProctoringProctoredexamRecord> {

    private static final long serialVersionUID = 1461486101;

    /**
     * The reference instance of <code>bitnami_edx.proctoring_proctoredexam</code>
     */
    public static final ProctoringProctoredexam PROCTORING_PROCTOREDEXAM = new ProctoringProctoredexam();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProctoringProctoredexamRecord> getRecordType() {
        return ProctoringProctoredexamRecord.class;
    }

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.id</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.created</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.modified</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.course_id</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.content_id</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, String> CONTENT_ID = createField("content_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.external_id</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, String> EXTERNAL_ID = createField("external_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.exam_name</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, String> EXAM_NAME = createField("exam_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.time_limit_mins</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, Integer> TIME_LIMIT_MINS = createField("time_limit_mins", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.due_date</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, Timestamp> DUE_DATE = createField("due_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.is_proctored</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, Byte> IS_PROCTORED = createField("is_proctored", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.is_practice_exam</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, Byte> IS_PRACTICE_EXAM = createField("is_practice_exam", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexam.is_active</code>.
     */
    public final TableField<ProctoringProctoredexamRecord, Byte> IS_ACTIVE = createField("is_active", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.proctoring_proctoredexam</code> table reference
     */
    public ProctoringProctoredexam() {
        this("proctoring_proctoredexam", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.proctoring_proctoredexam</code> table reference
     */
    public ProctoringProctoredexam(String alias) {
        this(alias, PROCTORING_PROCTOREDEXAM);
    }

    private ProctoringProctoredexam(String alias, Table<ProctoringProctoredexamRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProctoringProctoredexam(String alias, Table<ProctoringProctoredexamRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProctoringProctoredexamRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROCTORING_PROCTOREDEXAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProctoringProctoredexamRecord> getPrimaryKey() {
        return Keys.KEY_PROCTORING_PROCTOREDEXAM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProctoringProctoredexamRecord>> getKeys() {
        return Arrays.<UniqueKey<ProctoringProctoredexamRecord>>asList(Keys.KEY_PROCTORING_PROCTOREDEXAM_PRIMARY, Keys.KEY_PROCTORING_PROCTOREDEXAM_PROCTORING_PROCTOREDEXAM_COURSE_ID_7D8AB189323890C0_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexam as(String alias) {
        return new ProctoringProctoredexam(alias, this);
    }

    /**
     * Rename this table
     */
    public ProctoringProctoredexam rename(String name) {
        return new ProctoringProctoredexam(name, null);
    }
}
