/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CeleryTasksetmetaRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CeleryTasksetmeta extends TableImpl<CeleryTasksetmetaRecord> {

    private static final long serialVersionUID = 20323898;

    /**
     * The reference instance of <code>bitnami_edx.celery_tasksetmeta</code>
     */
    public static final CeleryTasksetmeta CELERY_TASKSETMETA = new CeleryTasksetmeta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CeleryTasksetmetaRecord> getRecordType() {
        return CeleryTasksetmetaRecord.class;
    }

    /**
     * The column <code>bitnami_edx.celery_tasksetmeta.id</code>.
     */
    public final TableField<CeleryTasksetmetaRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.celery_tasksetmeta.taskset_id</code>.
     */
    public final TableField<CeleryTasksetmetaRecord, String> TASKSET_ID = createField("taskset_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.celery_tasksetmeta.result</code>.
     */
    public final TableField<CeleryTasksetmetaRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.celery_tasksetmeta.date_done</code>.
     */
    public final TableField<CeleryTasksetmetaRecord, Timestamp> DATE_DONE = createField("date_done", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.celery_tasksetmeta.hidden</code>.
     */
    public final TableField<CeleryTasksetmetaRecord, Byte> HIDDEN = createField("hidden", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.celery_tasksetmeta</code> table reference
     */
    public CeleryTasksetmeta() {
        this("celery_tasksetmeta", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.celery_tasksetmeta</code> table reference
     */
    public CeleryTasksetmeta(String alias) {
        this(alias, CELERY_TASKSETMETA);
    }

    private CeleryTasksetmeta(String alias, Table<CeleryTasksetmetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private CeleryTasksetmeta(String alias, Table<CeleryTasksetmetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CeleryTasksetmetaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CELERY_TASKSETMETA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CeleryTasksetmetaRecord> getPrimaryKey() {
        return Keys.KEY_CELERY_TASKSETMETA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CeleryTasksetmetaRecord>> getKeys() {
        return Arrays.<UniqueKey<CeleryTasksetmetaRecord>>asList(Keys.KEY_CELERY_TASKSETMETA_PRIMARY, Keys.KEY_CELERY_TASKSETMETA_TASKSET_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CeleryTasksetmeta as(String alias) {
        return new CeleryTasksetmeta(alias, this);
    }

    /**
     * Rename this table
     */
    public CeleryTasksetmeta rename(String name) {
        return new CeleryTasksetmeta(name, null);
    }
}
