/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.UserApiUserorgtagRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserApiUserorgtag extends TableImpl<UserApiUserorgtagRecord> {

    private static final long serialVersionUID = 495276856;

    /**
     * The reference instance of <code>bitnami_edx.user_api_userorgtag</code>
     */
    public static final UserApiUserorgtag USER_API_USERORGTAG = new UserApiUserorgtag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserApiUserorgtagRecord> getRecordType() {
        return UserApiUserorgtagRecord.class;
    }

    /**
     * The column <code>bitnami_edx.user_api_userorgtag.id</code>.
     */
    public final TableField<UserApiUserorgtagRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.user_api_userorgtag.created</code>.
     */
    public final TableField<UserApiUserorgtagRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.user_api_userorgtag.modified</code>.
     */
    public final TableField<UserApiUserorgtagRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.user_api_userorgtag.key</code>.
     */
    public final TableField<UserApiUserorgtagRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.user_api_userorgtag.org</code>.
     */
    public final TableField<UserApiUserorgtagRecord, String> ORG = createField("org", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.user_api_userorgtag.value</code>.
     */
    public final TableField<UserApiUserorgtagRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.user_api_userorgtag.user_id</code>.
     */
    public final TableField<UserApiUserorgtagRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.user_api_userorgtag</code> table reference
     */
    public UserApiUserorgtag() {
        this("user_api_userorgtag", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.user_api_userorgtag</code> table reference
     */
    public UserApiUserorgtag(String alias) {
        this(alias, USER_API_USERORGTAG);
    }

    private UserApiUserorgtag(String alias, Table<UserApiUserorgtagRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserApiUserorgtag(String alias, Table<UserApiUserorgtagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserApiUserorgtagRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_API_USERORGTAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserApiUserorgtagRecord> getPrimaryKey() {
        return Keys.KEY_USER_API_USERORGTAG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserApiUserorgtagRecord>> getKeys() {
        return Arrays.<UniqueKey<UserApiUserorgtagRecord>>asList(Keys.KEY_USER_API_USERORGTAG_PRIMARY, Keys.KEY_USER_API_USERORGTAG_USER_API_USERORGTAG_USER_ID_694F9E3322120C6F_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserApiUserorgtagRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserApiUserorgtagRecord, ?>>asList(Keys.USER_API_USERORGTAG_USER_ID_16C7189496B4DF00_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserApiUserorgtag as(String alias) {
        return new UserApiUserorgtag(alias, this);
    }

    /**
     * Rename this table
     */
    public UserApiUserorgtag rename(String name) {
        return new UserApiUserorgtag(name, null);
    }
}
