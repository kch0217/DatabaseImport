/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.StudentEntranceexamconfigurationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentEntranceexamconfiguration extends TableImpl<StudentEntranceexamconfigurationRecord> {

    private static final long serialVersionUID = -880072940;

    /**
     * The reference instance of <code>bitnami_edx.student_entranceexamconfiguration</code>
     */
    public static final StudentEntranceexamconfiguration STUDENT_ENTRANCEEXAMCONFIGURATION = new StudentEntranceexamconfiguration();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentEntranceexamconfigurationRecord> getRecordType() {
        return StudentEntranceexamconfigurationRecord.class;
    }

    /**
     * The column <code>bitnami_edx.student_entranceexamconfiguration.id</code>.
     */
    public final TableField<StudentEntranceexamconfigurationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_entranceexamconfiguration.course_id</code>.
     */
    public final TableField<StudentEntranceexamconfigurationRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_entranceexamconfiguration.created</code>.
     */
    public final TableField<StudentEntranceexamconfigurationRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.student_entranceexamconfiguration.updated</code>.
     */
    public final TableField<StudentEntranceexamconfigurationRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_entranceexamconfiguration.skip_entrance_exam</code>.
     */
    public final TableField<StudentEntranceexamconfigurationRecord, Byte> SKIP_ENTRANCE_EXAM = createField("skip_entrance_exam", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_entranceexamconfiguration.user_id</code>.
     */
    public final TableField<StudentEntranceexamconfigurationRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.student_entranceexamconfiguration</code> table reference
     */
    public StudentEntranceexamconfiguration() {
        this("student_entranceexamconfiguration", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.student_entranceexamconfiguration</code> table reference
     */
    public StudentEntranceexamconfiguration(String alias) {
        this(alias, STUDENT_ENTRANCEEXAMCONFIGURATION);
    }

    private StudentEntranceexamconfiguration(String alias, Table<StudentEntranceexamconfigurationRecord> aliased) {
        this(alias, aliased, null);
    }

    private StudentEntranceexamconfiguration(String alias, Table<StudentEntranceexamconfigurationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentEntranceexamconfigurationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENT_ENTRANCEEXAMCONFIGURATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentEntranceexamconfigurationRecord> getPrimaryKey() {
        return Keys.KEY_STUDENT_ENTRANCEEXAMCONFIGURATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentEntranceexamconfigurationRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentEntranceexamconfigurationRecord>>asList(Keys.KEY_STUDENT_ENTRANCEEXAMCONFIGURATION_PRIMARY, Keys.KEY_STUDENT_ENTRANCEEXAMCONFIGURATION_STUDENT_ENTRANCEEXAMCONFIGURATION_USER_ID_714C2EF6A88504F0_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StudentEntranceexamconfigurationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StudentEntranceexamconfigurationRecord, ?>>asList(Keys.STUDENT_ENTRANCEEXAMCON_USER_ID_530195AF5BABE0DD_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentEntranceexamconfiguration as(String alias) {
        return new StudentEntranceexamconfiguration(alias, this);
    }

    /**
     * Rename this table
     */
    public StudentEntranceexamconfiguration rename(String name) {
        return new StudentEntranceexamconfiguration(name, null);
    }
}
