/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ShoppingcartOrderitemRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShoppingcartOrderitem extends TableImpl<ShoppingcartOrderitemRecord> {

    private static final long serialVersionUID = 1772219113;

    /**
     * The reference instance of <code>bitnami_edx.shoppingcart_orderitem</code>
     */
    public static final ShoppingcartOrderitem SHOPPINGCART_ORDERITEM = new ShoppingcartOrderitem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShoppingcartOrderitemRecord> getRecordType() {
        return ShoppingcartOrderitemRecord.class;
    }

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.id</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.created</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.modified</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.status</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.qty</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, Integer> QTY = createField("qty", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.unit_cost</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, BigDecimal> UNIT_COST = createField("unit_cost", org.jooq.impl.SQLDataType.DECIMAL.precision(30, 2).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.list_price</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, BigDecimal> LIST_PRICE = createField("list_price", org.jooq.impl.SQLDataType.DECIMAL.precision(30, 2), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.line_desc</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, String> LINE_DESC = createField("line_desc", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.currency</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(8).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.fulfilled_time</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, Timestamp> FULFILLED_TIME = createField("fulfilled_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.refund_requested_time</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, Timestamp> REFUND_REQUESTED_TIME = createField("refund_requested_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.service_fee</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, BigDecimal> SERVICE_FEE = createField("service_fee", org.jooq.impl.SQLDataType.DECIMAL.precision(30, 2).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.report_comments</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, String> REPORT_COMMENTS = createField("report_comments", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.order_id</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.shoppingcart_orderitem.user_id</code>.
     */
    public final TableField<ShoppingcartOrderitemRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.shoppingcart_orderitem</code> table reference
     */
    public ShoppingcartOrderitem() {
        this("shoppingcart_orderitem", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.shoppingcart_orderitem</code> table reference
     */
    public ShoppingcartOrderitem(String alias) {
        this(alias, SHOPPINGCART_ORDERITEM);
    }

    private ShoppingcartOrderitem(String alias, Table<ShoppingcartOrderitemRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShoppingcartOrderitem(String alias, Table<ShoppingcartOrderitemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShoppingcartOrderitemRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHOPPINGCART_ORDERITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShoppingcartOrderitemRecord> getPrimaryKey() {
        return Keys.KEY_SHOPPINGCART_ORDERITEM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShoppingcartOrderitemRecord>> getKeys() {
        return Arrays.<UniqueKey<ShoppingcartOrderitemRecord>>asList(Keys.KEY_SHOPPINGCART_ORDERITEM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ShoppingcartOrderitemRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ShoppingcartOrderitemRecord, ?>>asList(Keys.SHOPPINGCART__ORDER_ID_325E5347F18743E3_FK_SHOPPINGCART_ORDER_ID, Keys.SHOPPINGCART_ORDERITEM_USER_ID_5708EC7AABE24A31_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShoppingcartOrderitem as(String alias) {
        return new ShoppingcartOrderitem(alias, this);
    }

    /**
     * Rename this table
     */
    public ShoppingcartOrderitem rename(String name) {
        return new ShoppingcartOrderitem(name, null);
    }
}
