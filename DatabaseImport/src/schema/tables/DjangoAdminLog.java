/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.DjangoAdminLogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DjangoAdminLog extends TableImpl<DjangoAdminLogRecord> {

    private static final long serialVersionUID = -10368637;

    /**
     * The reference instance of <code>bitnami_edx.django_admin_log</code>
     */
    public static final DjangoAdminLog DJANGO_ADMIN_LOG = new DjangoAdminLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DjangoAdminLogRecord> getRecordType() {
        return DjangoAdminLogRecord.class;
    }

    /**
     * The column <code>bitnami_edx.django_admin_log.id</code>.
     */
    public final TableField<DjangoAdminLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.django_admin_log.action_time</code>.
     */
    public final TableField<DjangoAdminLogRecord, Timestamp> ACTION_TIME = createField("action_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.django_admin_log.object_id</code>.
     */
    public final TableField<DjangoAdminLogRecord, String> OBJECT_ID = createField("object_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.django_admin_log.object_repr</code>.
     */
    public final TableField<DjangoAdminLogRecord, String> OBJECT_REPR = createField("object_repr", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.django_admin_log.action_flag</code>.
     */
    public final TableField<DjangoAdminLogRecord, UShort> ACTION_FLAG = createField("action_flag", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.django_admin_log.change_message</code>.
     */
    public final TableField<DjangoAdminLogRecord, String> CHANGE_MESSAGE = createField("change_message", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.django_admin_log.content_type_id</code>.
     */
    public final TableField<DjangoAdminLogRecord, Integer> CONTENT_TYPE_ID = createField("content_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.django_admin_log.user_id</code>.
     */
    public final TableField<DjangoAdminLogRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.django_admin_log</code> table reference
     */
    public DjangoAdminLog() {
        this("django_admin_log", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.django_admin_log</code> table reference
     */
    public DjangoAdminLog(String alias) {
        this(alias, DJANGO_ADMIN_LOG);
    }

    private DjangoAdminLog(String alias, Table<DjangoAdminLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private DjangoAdminLog(String alias, Table<DjangoAdminLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DjangoAdminLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DJANGO_ADMIN_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DjangoAdminLogRecord> getPrimaryKey() {
        return Keys.KEY_DJANGO_ADMIN_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DjangoAdminLogRecord>> getKeys() {
        return Arrays.<UniqueKey<DjangoAdminLogRecord>>asList(Keys.KEY_DJANGO_ADMIN_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DjangoAdminLogRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DjangoAdminLogRecord, ?>>asList(Keys.DJANG_CONTENT_TYPE_ID_697914295151027A_FK_DJANGO_CONTENT_TYPE_ID, Keys.DJANGO_ADMIN_LOG_USER_ID_52FDD58701C5F563_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DjangoAdminLog as(String alias) {
        return new DjangoAdminLog(alias, this);
    }

    /**
     * Rename this table
     */
    public DjangoAdminLog rename(String name) {
        return new DjangoAdminLog(name, null);
    }
}
