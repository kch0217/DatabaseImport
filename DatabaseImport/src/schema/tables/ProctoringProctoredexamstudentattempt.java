/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ProctoringProctoredexamstudentattemptRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProctoringProctoredexamstudentattempt extends TableImpl<ProctoringProctoredexamstudentattemptRecord> {

    private static final long serialVersionUID = -636078683;

    /**
     * The reference instance of <code>bitnami_edx.proctoring_proctoredexamstudentattempt</code>
     */
    public static final ProctoringProctoredexamstudentattempt PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT = new ProctoringProctoredexamstudentattempt();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProctoringProctoredexamstudentattemptRecord> getRecordType() {
        return ProctoringProctoredexamstudentattemptRecord.class;
    }

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.created</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.modified</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.started_at</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Timestamp> STARTED_AT = createField("started_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.completed_at</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Timestamp> COMPLETED_AT = createField("completed_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.last_poll_timestamp</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Timestamp> LAST_POLL_TIMESTAMP = createField("last_poll_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.last_poll_ipaddr</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, String> LAST_POLL_IPADDR = createField("last_poll_ipaddr", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.attempt_code</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, String> ATTEMPT_CODE = createField("attempt_code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.external_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, String> EXTERNAL_ID = createField("external_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.allowed_time_limit_mins</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Integer> ALLOWED_TIME_LIMIT_MINS = createField("allowed_time_limit_mins", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.status</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.taking_as_proctored</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Byte> TAKING_AS_PROCTORED = createField("taking_as_proctored", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.is_sample_attempt</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Byte> IS_SAMPLE_ATTEMPT = createField("is_sample_attempt", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.student_name</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, String> STUDENT_NAME = createField("student_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.review_policy_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Integer> REVIEW_POLICY_ID = createField("review_policy_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.proctored_exam_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Integer> PROCTORED_EXAM_ID = createField("proctored_exam_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.user_id</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.proctoring_proctoredexamstudentattempt.is_status_acknowledged</code>.
     */
    public final TableField<ProctoringProctoredexamstudentattemptRecord, Byte> IS_STATUS_ACKNOWLEDGED = createField("is_status_acknowledged", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.proctoring_proctoredexamstudentattempt</code> table reference
     */
    public ProctoringProctoredexamstudentattempt() {
        this("proctoring_proctoredexamstudentattempt", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.proctoring_proctoredexamstudentattempt</code> table reference
     */
    public ProctoringProctoredexamstudentattempt(String alias) {
        this(alias, PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT);
    }

    private ProctoringProctoredexamstudentattempt(String alias, Table<ProctoringProctoredexamstudentattemptRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProctoringProctoredexamstudentattempt(String alias, Table<ProctoringProctoredexamstudentattemptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProctoringProctoredexamstudentattemptRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProctoringProctoredexamstudentattemptRecord> getPrimaryKey() {
        return Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProctoringProctoredexamstudentattemptRecord>> getKeys() {
        return Arrays.<UniqueKey<ProctoringProctoredexamstudentattemptRecord>>asList(Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT_PRIMARY, Keys.KEY_PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT_PROCTORING_PROCTOREDEXAMSTUDENTATT_USER_ID_15D13FA8DAC316A0_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProctoringProctoredexamstudentattemptRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProctoringProctoredexamstudentattemptRecord, ?>>asList(Keys.D5E0A120C32F715BFE04A0A57F399EC0, Keys.PROCTORING_PROCTOREDEXA_USER_ID_633FD8F4F65A0CAC_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProctoringProctoredexamstudentattempt as(String alias) {
        return new ProctoringProctoredexamstudentattempt(alias, this);
    }

    /**
     * Rename this table
     */
    public ProctoringProctoredexamstudentattempt rename(String name) {
        return new ProctoringProctoredexamstudentattempt(name, null);
    }
}
