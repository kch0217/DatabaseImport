/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ContentstoreVideouploadconfigRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContentstoreVideouploadconfig extends TableImpl<ContentstoreVideouploadconfigRecord> {

    private static final long serialVersionUID = 400596023;

    /**
     * The reference instance of <code>bitnami_edx.contentstore_videouploadconfig</code>
     */
    public static final ContentstoreVideouploadconfig CONTENTSTORE_VIDEOUPLOADCONFIG = new ContentstoreVideouploadconfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContentstoreVideouploadconfigRecord> getRecordType() {
        return ContentstoreVideouploadconfigRecord.class;
    }

    /**
     * The column <code>bitnami_edx.contentstore_videouploadconfig.id</code>.
     */
    public final TableField<ContentstoreVideouploadconfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.contentstore_videouploadconfig.change_date</code>.
     */
    public final TableField<ContentstoreVideouploadconfigRecord, Timestamp> CHANGE_DATE = createField("change_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.contentstore_videouploadconfig.enabled</code>.
     */
    public final TableField<ContentstoreVideouploadconfigRecord, Byte> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.contentstore_videouploadconfig.profile_whitelist</code>.
     */
    public final TableField<ContentstoreVideouploadconfigRecord, String> PROFILE_WHITELIST = createField("profile_whitelist", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.contentstore_videouploadconfig.changed_by_id</code>.
     */
    public final TableField<ContentstoreVideouploadconfigRecord, Integer> CHANGED_BY_ID = createField("changed_by_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.contentstore_videouploadconfig</code> table reference
     */
    public ContentstoreVideouploadconfig() {
        this("contentstore_videouploadconfig", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.contentstore_videouploadconfig</code> table reference
     */
    public ContentstoreVideouploadconfig(String alias) {
        this(alias, CONTENTSTORE_VIDEOUPLOADCONFIG);
    }

    private ContentstoreVideouploadconfig(String alias, Table<ContentstoreVideouploadconfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContentstoreVideouploadconfig(String alias, Table<ContentstoreVideouploadconfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContentstoreVideouploadconfigRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONTENTSTORE_VIDEOUPLOADCONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContentstoreVideouploadconfigRecord> getPrimaryKey() {
        return Keys.KEY_CONTENTSTORE_VIDEOUPLOADCONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContentstoreVideouploadconfigRecord>> getKeys() {
        return Arrays.<UniqueKey<ContentstoreVideouploadconfigRecord>>asList(Keys.KEY_CONTENTSTORE_VIDEOUPLOADCONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ContentstoreVideouploadconfigRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ContentstoreVideouploadconfigRecord, ?>>asList(Keys.CONTENTSTORE_VIDE_CHANGED_BY_ID_17A489D0A46D9A4B_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContentstoreVideouploadconfig as(String alias) {
        return new ContentstoreVideouploadconfig(alias, this);
    }

    /**
     * Rename this table
     */
    public ContentstoreVideouploadconfig rename(String name) {
        return new ContentstoreVideouploadconfig(name, null);
    }
}
