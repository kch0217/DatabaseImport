/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.Oauth2GrantRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Oauth2Grant extends TableImpl<Oauth2GrantRecord> {

    private static final long serialVersionUID = -1782191313;

    /**
     * The reference instance of <code>bitnami_edx.oauth2_grant</code>
     */
    public static final Oauth2Grant OAUTH2_GRANT = new Oauth2Grant();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Oauth2GrantRecord> getRecordType() {
        return Oauth2GrantRecord.class;
    }

    /**
     * The column <code>bitnami_edx.oauth2_grant.id</code>.
     */
    public final TableField<Oauth2GrantRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.oauth2_grant.code</code>.
     */
    public final TableField<Oauth2GrantRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.oauth2_grant.expires</code>.
     */
    public final TableField<Oauth2GrantRecord, Timestamp> EXPIRES = createField("expires", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.oauth2_grant.redirect_uri</code>.
     */
    public final TableField<Oauth2GrantRecord, String> REDIRECT_URI = createField("redirect_uri", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.oauth2_grant.scope</code>.
     */
    public final TableField<Oauth2GrantRecord, Integer> SCOPE = createField("scope", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.oauth2_grant.client_id</code>.
     */
    public final TableField<Oauth2GrantRecord, Integer> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.oauth2_grant.user_id</code>.
     */
    public final TableField<Oauth2GrantRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.oauth2_grant</code> table reference
     */
    public Oauth2Grant() {
        this("oauth2_grant", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.oauth2_grant</code> table reference
     */
    public Oauth2Grant(String alias) {
        this(alias, OAUTH2_GRANT);
    }

    private Oauth2Grant(String alias, Table<Oauth2GrantRecord> aliased) {
        this(alias, aliased, null);
    }

    private Oauth2Grant(String alias, Table<Oauth2GrantRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Oauth2GrantRecord, Integer> getIdentity() {
        return Keys.IDENTITY_OAUTH2_GRANT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Oauth2GrantRecord> getPrimaryKey() {
        return Keys.KEY_OAUTH2_GRANT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Oauth2GrantRecord>> getKeys() {
        return Arrays.<UniqueKey<Oauth2GrantRecord>>asList(Keys.KEY_OAUTH2_GRANT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Oauth2GrantRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<Oauth2GrantRecord, ?>>asList(Keys.OAUTH2_GRANT_CLIENT_ID_FBFC174FBC856AF_FK_OAUTH2_CLIENT_ID, Keys.OAUTH2_GRANT_USER_ID_3DE96A461BB76819_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Oauth2Grant as(String alias) {
        return new Oauth2Grant(alias, this);
    }

    /**
     * Rename this table
     */
    public Oauth2Grant rename(String name) {
        return new Oauth2Grant(name, null);
    }
}
