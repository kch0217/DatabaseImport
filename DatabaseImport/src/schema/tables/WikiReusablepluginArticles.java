/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.WikiReusablepluginArticlesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiReusablepluginArticles extends TableImpl<WikiReusablepluginArticlesRecord> {

    private static final long serialVersionUID = -845789101;

    /**
     * The reference instance of <code>bitnami_edx.wiki_reusableplugin_articles</code>
     */
    public static final WikiReusablepluginArticles WIKI_REUSABLEPLUGIN_ARTICLES = new WikiReusablepluginArticles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WikiReusablepluginArticlesRecord> getRecordType() {
        return WikiReusablepluginArticlesRecord.class;
    }

    /**
     * The column <code>bitnami_edx.wiki_reusableplugin_articles.id</code>.
     */
    public final TableField<WikiReusablepluginArticlesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_reusableplugin_articles.reusableplugin_id</code>.
     */
    public final TableField<WikiReusablepluginArticlesRecord, Integer> REUSABLEPLUGIN_ID = createField("reusableplugin_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_reusableplugin_articles.article_id</code>.
     */
    public final TableField<WikiReusablepluginArticlesRecord, Integer> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.wiki_reusableplugin_articles</code> table reference
     */
    public WikiReusablepluginArticles() {
        this("wiki_reusableplugin_articles", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.wiki_reusableplugin_articles</code> table reference
     */
    public WikiReusablepluginArticles(String alias) {
        this(alias, WIKI_REUSABLEPLUGIN_ARTICLES);
    }

    private WikiReusablepluginArticles(String alias, Table<WikiReusablepluginArticlesRecord> aliased) {
        this(alias, aliased, null);
    }

    private WikiReusablepluginArticles(String alias, Table<WikiReusablepluginArticlesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WikiReusablepluginArticlesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WIKI_REUSABLEPLUGIN_ARTICLES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WikiReusablepluginArticlesRecord> getPrimaryKey() {
        return Keys.KEY_WIKI_REUSABLEPLUGIN_ARTICLES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WikiReusablepluginArticlesRecord>> getKeys() {
        return Arrays.<UniqueKey<WikiReusablepluginArticlesRecord>>asList(Keys.KEY_WIKI_REUSABLEPLUGIN_ARTICLES_PRIMARY, Keys.KEY_WIKI_REUSABLEPLUGIN_ARTICLES_REUSABLEPLUGIN_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WikiReusablepluginArticlesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WikiReusablepluginArticlesRecord, ?>>asList(Keys.A9F9F50FD4E8FDAFE7FFC0C1A145FEE3, Keys.WIKI_REUSABLEPLUG_ARTICLE_ID_5E893D3B3FB4F7FA_FK_WIKI_ARTICLE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiReusablepluginArticles as(String alias) {
        return new WikiReusablepluginArticles(alias, this);
    }

    /**
     * Rename this table
     */
    public WikiReusablepluginArticles rename(String name) {
        return new WikiReusablepluginArticles(name, null);
    }
}
