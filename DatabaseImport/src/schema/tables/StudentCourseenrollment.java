/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.StudentCourseenrollmentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentCourseenrollment extends TableImpl<StudentCourseenrollmentRecord> {

    private static final long serialVersionUID = 897062113;

    /**
     * The reference instance of <code>bitnami_edx.student_courseenrollment</code>
     */
    public static final StudentCourseenrollment STUDENT_COURSEENROLLMENT = new StudentCourseenrollment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentCourseenrollmentRecord> getRecordType() {
        return StudentCourseenrollmentRecord.class;
    }

    /**
     * The column <code>bitnami_edx.student_courseenrollment.id</code>.
     */
    public final TableField<StudentCourseenrollmentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_courseenrollment.course_id</code>.
     */
    public final TableField<StudentCourseenrollmentRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_courseenrollment.created</code>.
     */
    public final TableField<StudentCourseenrollmentRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.student_courseenrollment.is_active</code>.
     */
    public final TableField<StudentCourseenrollmentRecord, Byte> IS_ACTIVE = createField("is_active", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_courseenrollment.mode</code>.
     */
    public final TableField<StudentCourseenrollmentRecord, String> MODE = createField("mode", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.student_courseenrollment.user_id</code>.
     */
    public final TableField<StudentCourseenrollmentRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.student_courseenrollment</code> table reference
     */
    public StudentCourseenrollment() {
        this("student_courseenrollment", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.student_courseenrollment</code> table reference
     */
    public StudentCourseenrollment(String alias) {
        this(alias, STUDENT_COURSEENROLLMENT);
    }

    private StudentCourseenrollment(String alias, Table<StudentCourseenrollmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private StudentCourseenrollment(String alias, Table<StudentCourseenrollmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentCourseenrollmentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENT_COURSEENROLLMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentCourseenrollmentRecord> getPrimaryKey() {
        return Keys.KEY_STUDENT_COURSEENROLLMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentCourseenrollmentRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentCourseenrollmentRecord>>asList(Keys.KEY_STUDENT_COURSEENROLLMENT_PRIMARY, Keys.KEY_STUDENT_COURSEENROLLMENT_STUDENT_COURSEENROLLMENT_USER_ID_2D2A572F07DD8E37_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StudentCourseenrollmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StudentCourseenrollmentRecord, ?>>asList(Keys.STUDENT_COURSEENROLLMEN_USER_ID_15BEAAEBC8333CE4_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentCourseenrollment as(String alias) {
        return new StudentCourseenrollment(alias, this);
    }

    /**
     * Rename this table
     */
    public StudentCourseenrollment rename(String name) {
        return new StudentCourseenrollment(name, null);
    }
}
