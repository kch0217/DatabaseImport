/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.WikiAttachmentrevisionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiAttachmentrevision extends TableImpl<WikiAttachmentrevisionRecord> {

    private static final long serialVersionUID = -1575689306;

    /**
     * The reference instance of <code>bitnami_edx.wiki_attachmentrevision</code>
     */
    public static final WikiAttachmentrevision WIKI_ATTACHMENTREVISION = new WikiAttachmentrevision();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WikiAttachmentrevisionRecord> getRecordType() {
        return WikiAttachmentrevisionRecord.class;
    }

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.id</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.revision_number</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, Integer> REVISION_NUMBER = createField("revision_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.user_message</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, String> USER_MESSAGE = createField("user_message", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.automatic_log</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, String> AUTOMATIC_LOG = createField("automatic_log", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.ip_address</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, String> IP_ADDRESS = createField("ip_address", org.jooq.impl.SQLDataType.CHAR.length(15), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.modified</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.created</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.deleted</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.locked</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, Byte> LOCKED = createField("locked", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.file</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, String> FILE = createField("file", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.description</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.attachment_id</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, Integer> ATTACHMENT_ID = createField("attachment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.previous_revision_id</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, Integer> PREVIOUS_REVISION_ID = createField("previous_revision_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachmentrevision.user_id</code>.
     */
    public final TableField<WikiAttachmentrevisionRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.wiki_attachmentrevision</code> table reference
     */
    public WikiAttachmentrevision() {
        this("wiki_attachmentrevision", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.wiki_attachmentrevision</code> table reference
     */
    public WikiAttachmentrevision(String alias) {
        this(alias, WIKI_ATTACHMENTREVISION);
    }

    private WikiAttachmentrevision(String alias, Table<WikiAttachmentrevisionRecord> aliased) {
        this(alias, aliased, null);
    }

    private WikiAttachmentrevision(String alias, Table<WikiAttachmentrevisionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WikiAttachmentrevisionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WIKI_ATTACHMENTREVISION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WikiAttachmentrevisionRecord> getPrimaryKey() {
        return Keys.KEY_WIKI_ATTACHMENTREVISION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WikiAttachmentrevisionRecord>> getKeys() {
        return Arrays.<UniqueKey<WikiAttachmentrevisionRecord>>asList(Keys.KEY_WIKI_ATTACHMENTREVISION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WikiAttachmentrevisionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WikiAttachmentrevisionRecord, ?>>asList(Keys.D68D5CD540B66F536228137E518081F8, Keys.D8C1F0A8F0DDCEB9C3EBC94379FE22C9, Keys.WIKI_ATTACHMENTREVISION_USER_ID_427E3F452B4BFDCD_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiAttachmentrevision as(String alias) {
        return new WikiAttachmentrevision(alias, this);
    }

    /**
     * Rename this table
     */
    public WikiAttachmentrevision rename(String name) {
        return new WikiAttachmentrevision(name, null);
    }
}
