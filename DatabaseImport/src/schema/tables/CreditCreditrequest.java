/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CreditCreditrequestRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditCreditrequest extends TableImpl<CreditCreditrequestRecord> {

    private static final long serialVersionUID = 173294438;

    /**
     * The reference instance of <code>bitnami_edx.credit_creditrequest</code>
     */
    public static final CreditCreditrequest CREDIT_CREDITREQUEST = new CreditCreditrequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CreditCreditrequestRecord> getRecordType() {
        return CreditCreditrequestRecord.class;
    }

    /**
     * The column <code>bitnami_edx.credit_creditrequest.id</code>.
     */
    public final TableField<CreditCreditrequestRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditrequest.created</code>.
     */
    public final TableField<CreditCreditrequestRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditrequest.modified</code>.
     */
    public final TableField<CreditCreditrequestRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditrequest.uuid</code>.
     */
    public final TableField<CreditCreditrequestRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditrequest.username</code>.
     */
    public final TableField<CreditCreditrequestRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditrequest.parameters</code>.
     */
    public final TableField<CreditCreditrequestRecord, String> PARAMETERS = createField("parameters", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditrequest.status</code>.
     */
    public final TableField<CreditCreditrequestRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditrequest.course_id</code>.
     */
    public final TableField<CreditCreditrequestRecord, Integer> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditrequest.provider_id</code>.
     */
    public final TableField<CreditCreditrequestRecord, Integer> PROVIDER_ID = createField("provider_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.credit_creditrequest</code> table reference
     */
    public CreditCreditrequest() {
        this("credit_creditrequest", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.credit_creditrequest</code> table reference
     */
    public CreditCreditrequest(String alias) {
        this(alias, CREDIT_CREDITREQUEST);
    }

    private CreditCreditrequest(String alias, Table<CreditCreditrequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private CreditCreditrequest(String alias, Table<CreditCreditrequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CreditCreditrequestRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CREDIT_CREDITREQUEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CreditCreditrequestRecord> getPrimaryKey() {
        return Keys.KEY_CREDIT_CREDITREQUEST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CreditCreditrequestRecord>> getKeys() {
        return Arrays.<UniqueKey<CreditCreditrequestRecord>>asList(Keys.KEY_CREDIT_CREDITREQUEST_PRIMARY, Keys.KEY_CREDIT_CREDITREQUEST_UUID, Keys.KEY_CREDIT_CREDITREQUEST_CREDIT_CREDITREQUEST_USERNAME_4F61C10BB0D67C01_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CreditCreditrequestRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CreditCreditrequestRecord, ?>>asList(Keys.CREDIT_CRED_COURSE_ID_578C5F1124002BAB_FK_CREDIT_CREDITCOURSE_ID, Keys.CREDIT_C_PROVIDER_ID_F2973CC3E38A483_FK_CREDIT_CREDITPROVIDER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditCreditrequest as(String alias) {
        return new CreditCreditrequest(alias, this);
    }

    /**
     * Rename this table
     */
    public CreditCreditrequest rename(String name) {
        return new CreditCreditrequest(name, null);
    }
}
