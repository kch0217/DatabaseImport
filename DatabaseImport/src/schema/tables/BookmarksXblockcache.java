/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.BookmarksXblockcacheRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookmarksXblockcache extends TableImpl<BookmarksXblockcacheRecord> {

    private static final long serialVersionUID = -784881929;

    /**
     * The reference instance of <code>bitnami_edx.bookmarks_xblockcache</code>
     */
    public static final BookmarksXblockcache BOOKMARKS_XBLOCKCACHE = new BookmarksXblockcache();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookmarksXblockcacheRecord> getRecordType() {
        return BookmarksXblockcacheRecord.class;
    }

    /**
     * The column <code>bitnami_edx.bookmarks_xblockcache.id</code>.
     */
    public final TableField<BookmarksXblockcacheRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_xblockcache.created</code>.
     */
    public final TableField<BookmarksXblockcacheRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_xblockcache.modified</code>.
     */
    public final TableField<BookmarksXblockcacheRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_xblockcache.course_key</code>.
     */
    public final TableField<BookmarksXblockcacheRecord, String> COURSE_KEY = createField("course_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_xblockcache.usage_key</code>.
     */
    public final TableField<BookmarksXblockcacheRecord, String> USAGE_KEY = createField("usage_key", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_xblockcache.display_name</code>.
     */
    public final TableField<BookmarksXblockcacheRecord, String> DISPLAY_NAME = createField("display_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.bookmarks_xblockcache.paths</code>.
     */
    public final TableField<BookmarksXblockcacheRecord, String> PATHS = createField("paths", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.bookmarks_xblockcache</code> table reference
     */
    public BookmarksXblockcache() {
        this("bookmarks_xblockcache", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.bookmarks_xblockcache</code> table reference
     */
    public BookmarksXblockcache(String alias) {
        this(alias, BOOKMARKS_XBLOCKCACHE);
    }

    private BookmarksXblockcache(String alias, Table<BookmarksXblockcacheRecord> aliased) {
        this(alias, aliased, null);
    }

    private BookmarksXblockcache(String alias, Table<BookmarksXblockcacheRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BookmarksXblockcacheRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BOOKMARKS_XBLOCKCACHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BookmarksXblockcacheRecord> getPrimaryKey() {
        return Keys.KEY_BOOKMARKS_XBLOCKCACHE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BookmarksXblockcacheRecord>> getKeys() {
        return Arrays.<UniqueKey<BookmarksXblockcacheRecord>>asList(Keys.KEY_BOOKMARKS_XBLOCKCACHE_PRIMARY, Keys.KEY_BOOKMARKS_XBLOCKCACHE_USAGE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarksXblockcache as(String alias) {
        return new BookmarksXblockcache(alias, this);
    }

    /**
     * Rename this table
     */
    public BookmarksXblockcache rename(String name) {
        return new BookmarksXblockcache(name, null);
    }
}
