/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.NotifyNotificationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotifyNotification extends TableImpl<NotifyNotificationRecord> {

    private static final long serialVersionUID = 1751558379;

    /**
     * The reference instance of <code>bitnami_edx.notify_notification</code>
     */
    public static final NotifyNotification NOTIFY_NOTIFICATION = new NotifyNotification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NotifyNotificationRecord> getRecordType() {
        return NotifyNotificationRecord.class;
    }

    /**
     * The column <code>bitnami_edx.notify_notification.id</code>.
     */
    public final TableField<NotifyNotificationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.notify_notification.message</code>.
     */
    public final TableField<NotifyNotificationRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.notify_notification.url</code>.
     */
    public final TableField<NotifyNotificationRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>bitnami_edx.notify_notification.is_viewed</code>.
     */
    public final TableField<NotifyNotificationRecord, Byte> IS_VIEWED = createField("is_viewed", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.notify_notification.is_emailed</code>.
     */
    public final TableField<NotifyNotificationRecord, Byte> IS_EMAILED = createField("is_emailed", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.notify_notification.created</code>.
     */
    public final TableField<NotifyNotificationRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.notify_notification.subscription_id</code>.
     */
    public final TableField<NotifyNotificationRecord, Integer> SUBSCRIPTION_ID = createField("subscription_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.notify_notification</code> table reference
     */
    public NotifyNotification() {
        this("notify_notification", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.notify_notification</code> table reference
     */
    public NotifyNotification(String alias) {
        this(alias, NOTIFY_NOTIFICATION);
    }

    private NotifyNotification(String alias, Table<NotifyNotificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private NotifyNotification(String alias, Table<NotifyNotificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NotifyNotificationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_NOTIFY_NOTIFICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NotifyNotificationRecord> getPrimaryKey() {
        return Keys.KEY_NOTIFY_NOTIFICATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NotifyNotificationRecord>> getKeys() {
        return Arrays.<UniqueKey<NotifyNotificationRecord>>asList(Keys.KEY_NOTIFY_NOTIFICATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<NotifyNotificationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NotifyNotificationRecord, ?>>asList(Keys.D48032390695E0699E92B8D7CCDBFF7E);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotifyNotification as(String alias) {
        return new NotifyNotification(alias, this);
    }

    /**
     * Rename this table
     */
    public NotifyNotification rename(String name) {
        return new NotifyNotification(name, null);
    }
}
