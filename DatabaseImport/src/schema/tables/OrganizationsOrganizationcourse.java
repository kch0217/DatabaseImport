/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.OrganizationsOrganizationcourseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrganizationsOrganizationcourse extends TableImpl<OrganizationsOrganizationcourseRecord> {

    private static final long serialVersionUID = -1423263183;

    /**
     * The reference instance of <code>bitnami_edx.organizations_organizationcourse</code>
     */
    public static final OrganizationsOrganizationcourse ORGANIZATIONS_ORGANIZATIONCOURSE = new OrganizationsOrganizationcourse();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrganizationsOrganizationcourseRecord> getRecordType() {
        return OrganizationsOrganizationcourseRecord.class;
    }

    /**
     * The column <code>bitnami_edx.organizations_organizationcourse.id</code>.
     */
    public final TableField<OrganizationsOrganizationcourseRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.organizations_organizationcourse.created</code>.
     */
    public final TableField<OrganizationsOrganizationcourseRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.organizations_organizationcourse.modified</code>.
     */
    public final TableField<OrganizationsOrganizationcourseRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.organizations_organizationcourse.course_id</code>.
     */
    public final TableField<OrganizationsOrganizationcourseRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.organizations_organizationcourse.active</code>.
     */
    public final TableField<OrganizationsOrganizationcourseRecord, Byte> ACTIVE = createField("active", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.organizations_organizationcourse.organization_id</code>.
     */
    public final TableField<OrganizationsOrganizationcourseRecord, Integer> ORGANIZATION_ID = createField("organization_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.organizations_organizationcourse</code> table reference
     */
    public OrganizationsOrganizationcourse() {
        this("organizations_organizationcourse", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.organizations_organizationcourse</code> table reference
     */
    public OrganizationsOrganizationcourse(String alias) {
        this(alias, ORGANIZATIONS_ORGANIZATIONCOURSE);
    }

    private OrganizationsOrganizationcourse(String alias, Table<OrganizationsOrganizationcourseRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrganizationsOrganizationcourse(String alias, Table<OrganizationsOrganizationcourseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrganizationsOrganizationcourseRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ORGANIZATIONS_ORGANIZATIONCOURSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrganizationsOrganizationcourseRecord> getPrimaryKey() {
        return Keys.KEY_ORGANIZATIONS_ORGANIZATIONCOURSE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrganizationsOrganizationcourseRecord>> getKeys() {
        return Arrays.<UniqueKey<OrganizationsOrganizationcourseRecord>>asList(Keys.KEY_ORGANIZATIONS_ORGANIZATIONCOURSE_PRIMARY, Keys.KEY_ORGANIZATIONS_ORGANIZATIONCOURSE_ORGANIZATIONS_ORGANIZATIONCOURSE_COURSE_ID_3F0149776C0495FF_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrganizationsOrganizationcourseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrganizationsOrganizationcourseRecord, ?>>asList(Keys.A7B04B16EBA98E518FBE21D390BD8E3E);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrganizationsOrganizationcourse as(String alias) {
        return new OrganizationsOrganizationcourse(alias, this);
    }

    /**
     * Rename this table
     */
    public OrganizationsOrganizationcourse rename(String name) {
        return new OrganizationsOrganizationcourse(name, null);
    }
}
