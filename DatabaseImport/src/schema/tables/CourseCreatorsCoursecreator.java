/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CourseCreatorsCoursecreatorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseCreatorsCoursecreator extends TableImpl<CourseCreatorsCoursecreatorRecord> {

    private static final long serialVersionUID = 1716966038;

    /**
     * The reference instance of <code>bitnami_edx.course_creators_coursecreator</code>
     */
    public static final CourseCreatorsCoursecreator COURSE_CREATORS_COURSECREATOR = new CourseCreatorsCoursecreator();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseCreatorsCoursecreatorRecord> getRecordType() {
        return CourseCreatorsCoursecreatorRecord.class;
    }

    /**
     * The column <code>bitnami_edx.course_creators_coursecreator.id</code>.
     */
    public final TableField<CourseCreatorsCoursecreatorRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_creators_coursecreator.state_changed</code>.
     */
    public final TableField<CourseCreatorsCoursecreatorRecord, Timestamp> STATE_CHANGED = createField("state_changed", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_creators_coursecreator.state</code>.
     */
    public final TableField<CourseCreatorsCoursecreatorRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(24).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_creators_coursecreator.note</code>.
     */
    public final TableField<CourseCreatorsCoursecreatorRecord, String> NOTE = createField("note", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_creators_coursecreator.user_id</code>.
     */
    public final TableField<CourseCreatorsCoursecreatorRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.course_creators_coursecreator</code> table reference
     */
    public CourseCreatorsCoursecreator() {
        this("course_creators_coursecreator", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.course_creators_coursecreator</code> table reference
     */
    public CourseCreatorsCoursecreator(String alias) {
        this(alias, COURSE_CREATORS_COURSECREATOR);
    }

    private CourseCreatorsCoursecreator(String alias, Table<CourseCreatorsCoursecreatorRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseCreatorsCoursecreator(String alias, Table<CourseCreatorsCoursecreatorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseCreatorsCoursecreatorRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_CREATORS_COURSECREATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseCreatorsCoursecreatorRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_CREATORS_COURSECREATOR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseCreatorsCoursecreatorRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseCreatorsCoursecreatorRecord>>asList(Keys.KEY_COURSE_CREATORS_COURSECREATOR_PRIMARY, Keys.KEY_COURSE_CREATORS_COURSECREATOR_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CourseCreatorsCoursecreatorRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CourseCreatorsCoursecreatorRecord, ?>>asList(Keys.COURSE_CREATORS_COURSEC_USER_ID_46EA06AD28F0BE3B_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseCreatorsCoursecreator as(String alias) {
        return new CourseCreatorsCoursecreator(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseCreatorsCoursecreator rename(String name) {
        return new CourseCreatorsCoursecreator(name, null);
    }
}
