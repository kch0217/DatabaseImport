/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.WikiAttachmentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiAttachment extends TableImpl<WikiAttachmentRecord> {

    private static final long serialVersionUID = 520161242;

    /**
     * The reference instance of <code>bitnami_edx.wiki_attachment</code>
     */
    public static final WikiAttachment WIKI_ATTACHMENT = new WikiAttachment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WikiAttachmentRecord> getRecordType() {
        return WikiAttachmentRecord.class;
    }

    /**
     * The column <code>bitnami_edx.wiki_attachment.reusableplugin_ptr_id</code>.
     */
    public final TableField<WikiAttachmentRecord, Integer> REUSABLEPLUGIN_PTR_ID = createField("reusableplugin_ptr_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachment.original_filename</code>.
     */
    public final TableField<WikiAttachmentRecord, String> ORIGINAL_FILENAME = createField("original_filename", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>bitnami_edx.wiki_attachment.current_revision_id</code>.
     */
    public final TableField<WikiAttachmentRecord, Integer> CURRENT_REVISION_ID = createField("current_revision_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.wiki_attachment</code> table reference
     */
    public WikiAttachment() {
        this("wiki_attachment", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.wiki_attachment</code> table reference
     */
    public WikiAttachment(String alias) {
        this(alias, WIKI_ATTACHMENT);
    }

    private WikiAttachment(String alias, Table<WikiAttachmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private WikiAttachment(String alias, Table<WikiAttachmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WikiAttachmentRecord> getPrimaryKey() {
        return Keys.KEY_WIKI_ATTACHMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WikiAttachmentRecord>> getKeys() {
        return Arrays.<UniqueKey<WikiAttachmentRecord>>asList(Keys.KEY_WIKI_ATTACHMENT_PRIMARY, Keys.KEY_WIKI_ATTACHMENT_CURRENT_REVISION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WikiAttachmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WikiAttachmentRecord, ?>>asList(Keys.D7D9A9637C738DAA9DAFF735F9023FBE, Keys.D32D32ECB0471DC863A4E19562842024);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiAttachment as(String alias) {
        return new WikiAttachment(alias, this);
    }

    /**
     * Rename this table
     */
    public WikiAttachment rename(String name) {
        return new WikiAttachment(name, null);
    }
}
