/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.WikiArticlerevisionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WikiArticlerevision extends TableImpl<WikiArticlerevisionRecord> {

    private static final long serialVersionUID = 1421226800;

    /**
     * The reference instance of <code>bitnami_edx.wiki_articlerevision</code>
     */
    public static final WikiArticlerevision WIKI_ARTICLEREVISION = new WikiArticlerevision();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WikiArticlerevisionRecord> getRecordType() {
        return WikiArticlerevisionRecord.class;
    }

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.id</code>.
     */
    public final TableField<WikiArticlerevisionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.revision_number</code>.
     */
    public final TableField<WikiArticlerevisionRecord, Integer> REVISION_NUMBER = createField("revision_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.user_message</code>.
     */
    public final TableField<WikiArticlerevisionRecord, String> USER_MESSAGE = createField("user_message", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.automatic_log</code>.
     */
    public final TableField<WikiArticlerevisionRecord, String> AUTOMATIC_LOG = createField("automatic_log", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.ip_address</code>.
     */
    public final TableField<WikiArticlerevisionRecord, String> IP_ADDRESS = createField("ip_address", org.jooq.impl.SQLDataType.CHAR.length(15), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.modified</code>.
     */
    public final TableField<WikiArticlerevisionRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.created</code>.
     */
    public final TableField<WikiArticlerevisionRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.deleted</code>.
     */
    public final TableField<WikiArticlerevisionRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.locked</code>.
     */
    public final TableField<WikiArticlerevisionRecord, Byte> LOCKED = createField("locked", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.content</code>.
     */
    public final TableField<WikiArticlerevisionRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.title</code>.
     */
    public final TableField<WikiArticlerevisionRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.article_id</code>.
     */
    public final TableField<WikiArticlerevisionRecord, Integer> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.previous_revision_id</code>.
     */
    public final TableField<WikiArticlerevisionRecord, Integer> PREVIOUS_REVISION_ID = createField("previous_revision_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.wiki_articlerevision.user_id</code>.
     */
    public final TableField<WikiArticlerevisionRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.wiki_articlerevision</code> table reference
     */
    public WikiArticlerevision() {
        this("wiki_articlerevision", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.wiki_articlerevision</code> table reference
     */
    public WikiArticlerevision(String alias) {
        this(alias, WIKI_ARTICLEREVISION);
    }

    private WikiArticlerevision(String alias, Table<WikiArticlerevisionRecord> aliased) {
        this(alias, aliased, null);
    }

    private WikiArticlerevision(String alias, Table<WikiArticlerevisionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WikiArticlerevisionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WIKI_ARTICLEREVISION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WikiArticlerevisionRecord> getPrimaryKey() {
        return Keys.KEY_WIKI_ARTICLEREVISION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WikiArticlerevisionRecord>> getKeys() {
        return Arrays.<UniqueKey<WikiArticlerevisionRecord>>asList(Keys.KEY_WIKI_ARTICLEREVISION_PRIMARY, Keys.KEY_WIKI_ARTICLEREVISION_WIKI_ARTICLEREVISION_ARTICLE_ID_4B4E7910C8E7B2D0_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WikiArticlerevisionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WikiArticlerevisionRecord, ?>>asList(Keys.WIKI_ARTICLEREVIS_ARTICLE_ID_1F2C587981AF1463_FK_WIKI_ARTICLE_ID, Keys.FAE2B1C6E892C699844D5DDA69AEB89E, Keys.WIKI_ARTICLEREVISION_USER_ID_183520686B6EAD55_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WikiArticlerevision as(String alias) {
        return new WikiArticlerevision(alias, this);
    }

    /**
     * Rename this table
     */
    public WikiArticlerevision rename(String name) {
        return new WikiArticlerevision(name, null);
    }
}
