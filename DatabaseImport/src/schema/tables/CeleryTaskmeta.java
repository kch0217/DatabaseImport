/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CeleryTaskmetaRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CeleryTaskmeta extends TableImpl<CeleryTaskmetaRecord> {

    private static final long serialVersionUID = -2060498428;

    /**
     * The reference instance of <code>bitnami_edx.celery_taskmeta</code>
     */
    public static final CeleryTaskmeta CELERY_TASKMETA = new CeleryTaskmeta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CeleryTaskmetaRecord> getRecordType() {
        return CeleryTaskmetaRecord.class;
    }

    /**
     * The column <code>bitnami_edx.celery_taskmeta.id</code>.
     */
    public final TableField<CeleryTaskmetaRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.celery_taskmeta.task_id</code>.
     */
    public final TableField<CeleryTaskmetaRecord, String> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.celery_taskmeta.status</code>.
     */
    public final TableField<CeleryTaskmetaRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.celery_taskmeta.result</code>.
     */
    public final TableField<CeleryTaskmetaRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.celery_taskmeta.date_done</code>.
     */
    public final TableField<CeleryTaskmetaRecord, Timestamp> DATE_DONE = createField("date_done", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.celery_taskmeta.traceback</code>.
     */
    public final TableField<CeleryTaskmetaRecord, String> TRACEBACK = createField("traceback", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.celery_taskmeta.hidden</code>.
     */
    public final TableField<CeleryTaskmetaRecord, Byte> HIDDEN = createField("hidden", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.celery_taskmeta.meta</code>.
     */
    public final TableField<CeleryTaskmetaRecord, String> META = createField("meta", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>bitnami_edx.celery_taskmeta</code> table reference
     */
    public CeleryTaskmeta() {
        this("celery_taskmeta", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.celery_taskmeta</code> table reference
     */
    public CeleryTaskmeta(String alias) {
        this(alias, CELERY_TASKMETA);
    }

    private CeleryTaskmeta(String alias, Table<CeleryTaskmetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private CeleryTaskmeta(String alias, Table<CeleryTaskmetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CeleryTaskmetaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CELERY_TASKMETA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CeleryTaskmetaRecord> getPrimaryKey() {
        return Keys.KEY_CELERY_TASKMETA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CeleryTaskmetaRecord>> getKeys() {
        return Arrays.<UniqueKey<CeleryTaskmetaRecord>>asList(Keys.KEY_CELERY_TASKMETA_PRIMARY, Keys.KEY_CELERY_TASKMETA_TASK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CeleryTaskmeta as(String alias) {
        return new CeleryTaskmeta(alias, this);
    }

    /**
     * Rename this table
     */
    public CeleryTaskmeta rename(String name) {
        return new CeleryTaskmeta(name, null);
    }
}
