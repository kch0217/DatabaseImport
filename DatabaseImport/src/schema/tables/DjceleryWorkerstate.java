/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.DjceleryWorkerstateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DjceleryWorkerstate extends TableImpl<DjceleryWorkerstateRecord> {

    private static final long serialVersionUID = 1423878769;

    /**
     * The reference instance of <code>bitnami_edx.djcelery_workerstate</code>
     */
    public static final DjceleryWorkerstate DJCELERY_WORKERSTATE = new DjceleryWorkerstate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DjceleryWorkerstateRecord> getRecordType() {
        return DjceleryWorkerstateRecord.class;
    }

    /**
     * The column <code>bitnami_edx.djcelery_workerstate.id</code>.
     */
    public final TableField<DjceleryWorkerstateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.djcelery_workerstate.hostname</code>.
     */
    public final TableField<DjceleryWorkerstateRecord, String> HOSTNAME = createField("hostname", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.djcelery_workerstate.last_heartbeat</code>.
     */
    public final TableField<DjceleryWorkerstateRecord, Timestamp> LAST_HEARTBEAT = createField("last_heartbeat", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>bitnami_edx.djcelery_workerstate</code> table reference
     */
    public DjceleryWorkerstate() {
        this("djcelery_workerstate", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.djcelery_workerstate</code> table reference
     */
    public DjceleryWorkerstate(String alias) {
        this(alias, DJCELERY_WORKERSTATE);
    }

    private DjceleryWorkerstate(String alias, Table<DjceleryWorkerstateRecord> aliased) {
        this(alias, aliased, null);
    }

    private DjceleryWorkerstate(String alias, Table<DjceleryWorkerstateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DjceleryWorkerstateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DJCELERY_WORKERSTATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DjceleryWorkerstateRecord> getPrimaryKey() {
        return Keys.KEY_DJCELERY_WORKERSTATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DjceleryWorkerstateRecord>> getKeys() {
        return Arrays.<UniqueKey<DjceleryWorkerstateRecord>>asList(Keys.KEY_DJCELERY_WORKERSTATE_PRIMARY, Keys.KEY_DJCELERY_WORKERSTATE_HOSTNAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DjceleryWorkerstate as(String alias) {
        return new DjceleryWorkerstate(alias, this);
    }

    /**
     * Rename this table
     */
    public DjceleryWorkerstate rename(String name) {
        return new DjceleryWorkerstate(name, null);
    }
}
