/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CreditHistoricalcreditrequestRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditHistoricalcreditrequest extends TableImpl<CreditHistoricalcreditrequestRecord> {

    private static final long serialVersionUID = -1150718467;

    /**
     * The reference instance of <code>bitnami_edx.credit_historicalcreditrequest</code>
     */
    public static final CreditHistoricalcreditrequest CREDIT_HISTORICALCREDITREQUEST = new CreditHistoricalcreditrequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CreditHistoricalcreditrequestRecord> getRecordType() {
        return CreditHistoricalcreditrequestRecord.class;
    }

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.id</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.created</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.modified</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.uuid</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.username</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.parameters</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, String> PARAMETERS = createField("parameters", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.status</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.history_id</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, Integer> HISTORY_ID = createField("history_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.history_date</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, Timestamp> HISTORY_DATE = createField("history_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.history_type</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, String> HISTORY_TYPE = createField("history_type", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.course_id</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, Integer> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.history_user_id</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, Integer> HISTORY_USER_ID = createField("history_user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.credit_historicalcreditrequest.provider_id</code>.
     */
    public final TableField<CreditHistoricalcreditrequestRecord, Integer> PROVIDER_ID = createField("provider_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bitnami_edx.credit_historicalcreditrequest</code> table reference
     */
    public CreditHistoricalcreditrequest() {
        this("credit_historicalcreditrequest", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.credit_historicalcreditrequest</code> table reference
     */
    public CreditHistoricalcreditrequest(String alias) {
        this(alias, CREDIT_HISTORICALCREDITREQUEST);
    }

    private CreditHistoricalcreditrequest(String alias, Table<CreditHistoricalcreditrequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private CreditHistoricalcreditrequest(String alias, Table<CreditHistoricalcreditrequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CreditHistoricalcreditrequestRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CREDIT_HISTORICALCREDITREQUEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CreditHistoricalcreditrequestRecord> getPrimaryKey() {
        return Keys.KEY_CREDIT_HISTORICALCREDITREQUEST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CreditHistoricalcreditrequestRecord>> getKeys() {
        return Arrays.<UniqueKey<CreditHistoricalcreditrequestRecord>>asList(Keys.KEY_CREDIT_HISTORICALCREDITREQUEST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CreditHistoricalcreditrequestRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CreditHistoricalcreditrequestRecord, ?>>asList(Keys.CREDIT_HISTORIC_HISTORY_USER_ID_52A9922F26A69E7E_FK_AUTH_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditHistoricalcreditrequest as(String alias) {
        return new CreditHistoricalcreditrequest(alias, this);
    }

    /**
     * Rename this table
     */
    public CreditHistoricalcreditrequest rename(String name) {
        return new CreditHistoricalcreditrequest(name, null);
    }
}
