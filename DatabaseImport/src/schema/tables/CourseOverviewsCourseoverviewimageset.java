/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CourseOverviewsCourseoverviewimagesetRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseOverviewsCourseoverviewimageset extends TableImpl<CourseOverviewsCourseoverviewimagesetRecord> {

    private static final long serialVersionUID = -985987065;

    /**
     * The reference instance of <code>bitnami_edx.course_overviews_courseoverviewimageset</code>
     */
    public static final CourseOverviewsCourseoverviewimageset COURSE_OVERVIEWS_COURSEOVERVIEWIMAGESET = new CourseOverviewsCourseoverviewimageset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseOverviewsCourseoverviewimagesetRecord> getRecordType() {
        return CourseOverviewsCourseoverviewimagesetRecord.class;
    }

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverviewimageset.id</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewimagesetRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverviewimageset.created</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewimagesetRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverviewimageset.modified</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewimagesetRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverviewimageset.small_url</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewimagesetRecord, String> SMALL_URL = createField("small_url", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverviewimageset.large_url</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewimagesetRecord, String> LARGE_URL = createField("large_url", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverviewimageset.course_overview_id</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewimagesetRecord, String> COURSE_OVERVIEW_ID = createField("course_overview_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.course_overviews_courseoverviewimageset</code> table reference
     */
    public CourseOverviewsCourseoverviewimageset() {
        this("course_overviews_courseoverviewimageset", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.course_overviews_courseoverviewimageset</code> table reference
     */
    public CourseOverviewsCourseoverviewimageset(String alias) {
        this(alias, COURSE_OVERVIEWS_COURSEOVERVIEWIMAGESET);
    }

    private CourseOverviewsCourseoverviewimageset(String alias, Table<CourseOverviewsCourseoverviewimagesetRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseOverviewsCourseoverviewimageset(String alias, Table<CourseOverviewsCourseoverviewimagesetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseOverviewsCourseoverviewimagesetRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_OVERVIEWS_COURSEOVERVIEWIMAGESET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseOverviewsCourseoverviewimagesetRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_OVERVIEWS_COURSEOVERVIEWIMAGESET_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseOverviewsCourseoverviewimagesetRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseOverviewsCourseoverviewimagesetRecord>>asList(Keys.KEY_COURSE_OVERVIEWS_COURSEOVERVIEWIMAGESET_PRIMARY, Keys.KEY_COURSE_OVERVIEWS_COURSEOVERVIEWIMAGESET_COURSE_OVERVIEW_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CourseOverviewsCourseoverviewimagesetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CourseOverviewsCourseoverviewimagesetRecord, ?>>asList(Keys.D47BAF904F8952EB0E1FAFEFD558A718);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseOverviewsCourseoverviewimageset as(String alias) {
        return new CourseOverviewsCourseoverviewimageset(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseOverviewsCourseoverviewimageset rename(String name) {
        return new CourseOverviewsCourseoverviewimageset(name, null);
    }
}
