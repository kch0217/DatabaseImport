/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ApiAdminApiaccessrequestRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApiAdminApiaccessrequest extends TableImpl<ApiAdminApiaccessrequestRecord> {

    private static final long serialVersionUID = -1647484242;

    /**
     * The reference instance of <code>bitnami_edx.api_admin_apiaccessrequest</code>
     */
    public static final ApiAdminApiaccessrequest API_ADMIN_APIACCESSREQUEST = new ApiAdminApiaccessrequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApiAdminApiaccessrequestRecord> getRecordType() {
        return ApiAdminApiaccessrequestRecord.class;
    }

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.id</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.created</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.modified</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.status</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.website</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.reason</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.user_id</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.company_address</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, String> COMPANY_ADDRESS = createField("company_address", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.company_name</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.contacted</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, Byte> CONTACTED = createField("contacted", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.api_admin_apiaccessrequest.site_id</code>.
     */
    public final TableField<ApiAdminApiaccessrequestRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.api_admin_apiaccessrequest</code> table reference
     */
    public ApiAdminApiaccessrequest() {
        this("api_admin_apiaccessrequest", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.api_admin_apiaccessrequest</code> table reference
     */
    public ApiAdminApiaccessrequest(String alias) {
        this(alias, API_ADMIN_APIACCESSREQUEST);
    }

    private ApiAdminApiaccessrequest(String alias, Table<ApiAdminApiaccessrequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApiAdminApiaccessrequest(String alias, Table<ApiAdminApiaccessrequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ApiAdminApiaccessrequestRecord, Integer> getIdentity() {
        return Keys.IDENTITY_API_ADMIN_APIACCESSREQUEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ApiAdminApiaccessrequestRecord> getPrimaryKey() {
        return Keys.KEY_API_ADMIN_APIACCESSREQUEST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ApiAdminApiaccessrequestRecord>> getKeys() {
        return Arrays.<UniqueKey<ApiAdminApiaccessrequestRecord>>asList(Keys.KEY_API_ADMIN_APIACCESSREQUEST_PRIMARY, Keys.KEY_API_ADMIN_APIACCESSREQUEST_API_ADMIN_APIACCESSREQUEST_USER_ID_6753E50E296CABC7_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ApiAdminApiaccessrequestRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ApiAdminApiaccessrequestRecord, ?>>asList(Keys.API_ADMIN_APIACCESSREQU_USER_ID_6753E50E296CABC7_FK_AUTH_USER_ID, Keys.API_ADMIN_APIACCESSRE_SITE_ID_7963330A765F8041_FK_DJANGO_SITE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApiAdminApiaccessrequest as(String alias) {
        return new ApiAdminApiaccessrequest(alias, this);
    }

    /**
     * Rename this table
     */
    public ApiAdminApiaccessrequest rename(String name) {
        return new ApiAdminApiaccessrequest(name, null);
    }
}
