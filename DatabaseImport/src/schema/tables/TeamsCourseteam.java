/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.TeamsCourseteamRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamsCourseteam extends TableImpl<TeamsCourseteamRecord> {

    private static final long serialVersionUID = 1397299190;

    /**
     * The reference instance of <code>bitnami_edx.teams_courseteam</code>
     */
    public static final TeamsCourseteam TEAMS_COURSETEAM = new TeamsCourseteam();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeamsCourseteamRecord> getRecordType() {
        return TeamsCourseteamRecord.class;
    }

    /**
     * The column <code>bitnami_edx.teams_courseteam.id</code>.
     */
    public final TableField<TeamsCourseteamRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.team_id</code>.
     */
    public final TableField<TeamsCourseteamRecord, String> TEAM_ID = createField("team_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.discussion_topic_id</code>.
     */
    public final TableField<TeamsCourseteamRecord, String> DISCUSSION_TOPIC_ID = createField("discussion_topic_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.name</code>.
     */
    public final TableField<TeamsCourseteamRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.course_id</code>.
     */
    public final TableField<TeamsCourseteamRecord, String> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.topic_id</code>.
     */
    public final TableField<TeamsCourseteamRecord, String> TOPIC_ID = createField("topic_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.date_created</code>.
     */
    public final TableField<TeamsCourseteamRecord, Timestamp> DATE_CREATED = createField("date_created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.description</code>.
     */
    public final TableField<TeamsCourseteamRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(300).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.country</code>.
     */
    public final TableField<TeamsCourseteamRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.language</code>.
     */
    public final TableField<TeamsCourseteamRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.last_activity_at</code>.
     */
    public final TableField<TeamsCourseteamRecord, Timestamp> LAST_ACTIVITY_AT = createField("last_activity_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.teams_courseteam.team_size</code>.
     */
    public final TableField<TeamsCourseteamRecord, Integer> TEAM_SIZE = createField("team_size", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.teams_courseteam</code> table reference
     */
    public TeamsCourseteam() {
        this("teams_courseteam", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.teams_courseteam</code> table reference
     */
    public TeamsCourseteam(String alias) {
        this(alias, TEAMS_COURSETEAM);
    }

    private TeamsCourseteam(String alias, Table<TeamsCourseteamRecord> aliased) {
        this(alias, aliased, null);
    }

    private TeamsCourseteam(String alias, Table<TeamsCourseteamRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TeamsCourseteamRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TEAMS_COURSETEAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TeamsCourseteamRecord> getPrimaryKey() {
        return Keys.KEY_TEAMS_COURSETEAM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TeamsCourseteamRecord>> getKeys() {
        return Arrays.<UniqueKey<TeamsCourseteamRecord>>asList(Keys.KEY_TEAMS_COURSETEAM_PRIMARY, Keys.KEY_TEAMS_COURSETEAM_TEAM_ID, Keys.KEY_TEAMS_COURSETEAM_DISCUSSION_TOPIC_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeamsCourseteam as(String alias) {
        return new TeamsCourseteam(alias, this);
    }

    /**
     * Rename this table
     */
    public TeamsCourseteam rename(String name) {
        return new TeamsCourseteam(name, null);
    }
}
