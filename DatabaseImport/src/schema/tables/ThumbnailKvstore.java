/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.ThumbnailKvstoreRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThumbnailKvstore extends TableImpl<ThumbnailKvstoreRecord> {

    private static final long serialVersionUID = 1017598842;

    /**
     * The reference instance of <code>bitnami_edx.thumbnail_kvstore</code>
     */
    public static final ThumbnailKvstore THUMBNAIL_KVSTORE = new ThumbnailKvstore();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ThumbnailKvstoreRecord> getRecordType() {
        return ThumbnailKvstoreRecord.class;
    }

    /**
     * The column <code>bitnami_edx.thumbnail_kvstore.key</code>.
     */
    public final TableField<ThumbnailKvstoreRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.thumbnail_kvstore.value</code>.
     */
    public final TableField<ThumbnailKvstoreRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.thumbnail_kvstore</code> table reference
     */
    public ThumbnailKvstore() {
        this("thumbnail_kvstore", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.thumbnail_kvstore</code> table reference
     */
    public ThumbnailKvstore(String alias) {
        this(alias, THUMBNAIL_KVSTORE);
    }

    private ThumbnailKvstore(String alias, Table<ThumbnailKvstoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private ThumbnailKvstore(String alias, Table<ThumbnailKvstoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ThumbnailKvstoreRecord> getPrimaryKey() {
        return Keys.KEY_THUMBNAIL_KVSTORE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ThumbnailKvstoreRecord>> getKeys() {
        return Arrays.<UniqueKey<ThumbnailKvstoreRecord>>asList(Keys.KEY_THUMBNAIL_KVSTORE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThumbnailKvstore as(String alias) {
        return new ThumbnailKvstore(alias, this);
    }

    /**
     * Rename this table
     */
    public ThumbnailKvstore rename(String name) {
        return new ThumbnailKvstore(name, null);
    }
}
