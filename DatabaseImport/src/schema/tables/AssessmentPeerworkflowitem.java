/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.AssessmentPeerworkflowitemRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssessmentPeerworkflowitem extends TableImpl<AssessmentPeerworkflowitemRecord> {

    private static final long serialVersionUID = -2104827827;

    /**
     * The reference instance of <code>bitnami_edx.assessment_peerworkflowitem</code>
     */
    public static final AssessmentPeerworkflowitem ASSESSMENT_PEERWORKFLOWITEM = new AssessmentPeerworkflowitem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssessmentPeerworkflowitemRecord> getRecordType() {
        return AssessmentPeerworkflowitemRecord.class;
    }

    /**
     * The column <code>bitnami_edx.assessment_peerworkflowitem.id</code>.
     */
    public final TableField<AssessmentPeerworkflowitemRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_peerworkflowitem.submission_uuid</code>.
     */
    public final TableField<AssessmentPeerworkflowitemRecord, String> SUBMISSION_UUID = createField("submission_uuid", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_peerworkflowitem.started_at</code>.
     */
    public final TableField<AssessmentPeerworkflowitemRecord, Timestamp> STARTED_AT = createField("started_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_peerworkflowitem.scored</code>.
     */
    public final TableField<AssessmentPeerworkflowitemRecord, Byte> SCORED = createField("scored", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_peerworkflowitem.assessment_id</code>.
     */
    public final TableField<AssessmentPeerworkflowitemRecord, Integer> ASSESSMENT_ID = createField("assessment_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.assessment_peerworkflowitem.author_id</code>.
     */
    public final TableField<AssessmentPeerworkflowitemRecord, Integer> AUTHOR_ID = createField("author_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.assessment_peerworkflowitem.scorer_id</code>.
     */
    public final TableField<AssessmentPeerworkflowitemRecord, Integer> SCORER_ID = createField("scorer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.assessment_peerworkflowitem</code> table reference
     */
    public AssessmentPeerworkflowitem() {
        this("assessment_peerworkflowitem", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.assessment_peerworkflowitem</code> table reference
     */
    public AssessmentPeerworkflowitem(String alias) {
        this(alias, ASSESSMENT_PEERWORKFLOWITEM);
    }

    private AssessmentPeerworkflowitem(String alias, Table<AssessmentPeerworkflowitemRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssessmentPeerworkflowitem(String alias, Table<AssessmentPeerworkflowitemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssessmentPeerworkflowitemRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ASSESSMENT_PEERWORKFLOWITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssessmentPeerworkflowitemRecord> getPrimaryKey() {
        return Keys.KEY_ASSESSMENT_PEERWORKFLOWITEM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssessmentPeerworkflowitemRecord>> getKeys() {
        return Arrays.<UniqueKey<AssessmentPeerworkflowitemRecord>>asList(Keys.KEY_ASSESSMENT_PEERWORKFLOWITEM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AssessmentPeerworkflowitemRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AssessmentPeerworkflowitemRecord, ?>>asList(Keys.ASSES_ASSESSMENT_ID_15CADFAE90DDCC2A_FK_ASSESSMENT_ASSESSMENT_ID, Keys.ASSESSM_AUTHOR_ID_1948F89DEA6D2B5F_FK_ASSESSMENT_PEERWORKFLOW_ID, Keys.ASSESSM_SCORER_ID_2D803EE2D52C0E2C_FK_ASSESSMENT_PEERWORKFLOW_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentPeerworkflowitem as(String alias) {
        return new AssessmentPeerworkflowitem(alias, this);
    }

    /**
     * Rename this table
     */
    public AssessmentPeerworkflowitem rename(String name) {
        return new AssessmentPeerworkflowitem(name, null);
    }
}
