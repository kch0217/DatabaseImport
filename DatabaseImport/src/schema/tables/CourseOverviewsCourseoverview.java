/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CourseOverviewsCourseoverviewRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseOverviewsCourseoverview extends TableImpl<CourseOverviewsCourseoverviewRecord> {

    private static final long serialVersionUID = 1953655078;

    /**
     * The reference instance of <code>bitnami_edx.course_overviews_courseoverview</code>
     */
    public static final CourseOverviewsCourseoverview COURSE_OVERVIEWS_COURSEOVERVIEW = new CourseOverviewsCourseoverview();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseOverviewsCourseoverviewRecord> getRecordType() {
        return CourseOverviewsCourseoverviewRecord.class;
    }

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.created</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.modified</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.version</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.id</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview._location</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> _LOCATION = createField("_location", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.display_name</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> DISPLAY_NAME = createField("display_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.display_number_with_default</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> DISPLAY_NUMBER_WITH_DEFAULT = createField("display_number_with_default", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.display_org_with_default</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> DISPLAY_ORG_WITH_DEFAULT = createField("display_org_with_default", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.start</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Timestamp> START = createField("start", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.end</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Timestamp> END = createField("end", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.advertised_start</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> ADVERTISED_START = createField("advertised_start", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.course_image_url</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> COURSE_IMAGE_URL = createField("course_image_url", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.social_sharing_url</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> SOCIAL_SHARING_URL = createField("social_sharing_url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.end_of_course_survey_url</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> END_OF_COURSE_SURVEY_URL = createField("end_of_course_survey_url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.certificates_display_behavior</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> CERTIFICATES_DISPLAY_BEHAVIOR = createField("certificates_display_behavior", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.certificates_show_before_end</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Byte> CERTIFICATES_SHOW_BEFORE_END = createField("certificates_show_before_end", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.cert_html_view_enabled</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Byte> CERT_HTML_VIEW_ENABLED = createField("cert_html_view_enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.has_any_active_web_certificate</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Byte> HAS_ANY_ACTIVE_WEB_CERTIFICATE = createField("has_any_active_web_certificate", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.cert_name_short</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> CERT_NAME_SHORT = createField("cert_name_short", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.cert_name_long</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> CERT_NAME_LONG = createField("cert_name_long", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.lowest_passing_grade</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, BigDecimal> LOWEST_PASSING_GRADE = createField("lowest_passing_grade", org.jooq.impl.SQLDataType.DECIMAL.precision(5, 2), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.days_early_for_beta</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Double> DAYS_EARLY_FOR_BETA = createField("days_early_for_beta", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.mobile_available</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Byte> MOBILE_AVAILABLE = createField("mobile_available", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.visible_to_staff_only</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Byte> VISIBLE_TO_STAFF_ONLY = createField("visible_to_staff_only", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview._pre_requisite_courses_json</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> _PRE_REQUISITE_COURSES_JSON = createField("_pre_requisite_courses_json", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.enrollment_start</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Timestamp> ENROLLMENT_START = createField("enrollment_start", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.enrollment_end</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Timestamp> ENROLLMENT_END = createField("enrollment_end", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.enrollment_domain</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> ENROLLMENT_DOMAIN = createField("enrollment_domain", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.invitation_only</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Byte> INVITATION_ONLY = createField("invitation_only", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.max_student_enrollments_allowed</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Integer> MAX_STUDENT_ENROLLMENTS_ALLOWED = createField("max_student_enrollments_allowed", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.announcement</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Timestamp> ANNOUNCEMENT = createField("announcement", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.catalog_visibility</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> CATALOG_VISIBILITY = createField("catalog_visibility", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.course_video_url</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> COURSE_VIDEO_URL = createField("course_video_url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.effort</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> EFFORT = createField("effort", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.short_description</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> SHORT_DESCRIPTION = createField("short_description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.org</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, String> ORG = createField("org", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.course_overviews_courseoverview.self_paced</code>.
     */
    public final TableField<CourseOverviewsCourseoverviewRecord, Byte> SELF_PACED = createField("self_paced", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.course_overviews_courseoverview</code> table reference
     */
    public CourseOverviewsCourseoverview() {
        this("course_overviews_courseoverview", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.course_overviews_courseoverview</code> table reference
     */
    public CourseOverviewsCourseoverview(String alias) {
        this(alias, COURSE_OVERVIEWS_COURSEOVERVIEW);
    }

    private CourseOverviewsCourseoverview(String alias, Table<CourseOverviewsCourseoverviewRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseOverviewsCourseoverview(String alias, Table<CourseOverviewsCourseoverviewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseOverviewsCourseoverviewRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_OVERVIEWS_COURSEOVERVIEW_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseOverviewsCourseoverviewRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseOverviewsCourseoverviewRecord>>asList(Keys.KEY_COURSE_OVERVIEWS_COURSEOVERVIEW_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseOverviewsCourseoverview as(String alias) {
        return new CourseOverviewsCourseoverview(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseOverviewsCourseoverview rename(String name) {
        return new CourseOverviewsCourseoverview(name, null);
    }
}
