/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CertificatesCertificatetemplateassetRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CertificatesCertificatetemplateasset extends TableImpl<CertificatesCertificatetemplateassetRecord> {

    private static final long serialVersionUID = -1004761356;

    /**
     * The reference instance of <code>bitnami_edx.certificates_certificatetemplateasset</code>
     */
    public static final CertificatesCertificatetemplateasset CERTIFICATES_CERTIFICATETEMPLATEASSET = new CertificatesCertificatetemplateasset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CertificatesCertificatetemplateassetRecord> getRecordType() {
        return CertificatesCertificatetemplateassetRecord.class;
    }

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplateasset.id</code>.
     */
    public final TableField<CertificatesCertificatetemplateassetRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplateasset.created</code>.
     */
    public final TableField<CertificatesCertificatetemplateassetRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplateasset.modified</code>.
     */
    public final TableField<CertificatesCertificatetemplateassetRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplateasset.description</code>.
     */
    public final TableField<CertificatesCertificatetemplateassetRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplateasset.asset</code>.
     */
    public final TableField<CertificatesCertificatetemplateassetRecord, String> ASSET = createField("asset", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.certificates_certificatetemplateasset.asset_slug</code>.
     */
    public final TableField<CertificatesCertificatetemplateassetRecord, String> ASSET_SLUG = createField("asset_slug", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>bitnami_edx.certificates_certificatetemplateasset</code> table reference
     */
    public CertificatesCertificatetemplateasset() {
        this("certificates_certificatetemplateasset", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.certificates_certificatetemplateasset</code> table reference
     */
    public CertificatesCertificatetemplateasset(String alias) {
        this(alias, CERTIFICATES_CERTIFICATETEMPLATEASSET);
    }

    private CertificatesCertificatetemplateasset(String alias, Table<CertificatesCertificatetemplateassetRecord> aliased) {
        this(alias, aliased, null);
    }

    private CertificatesCertificatetemplateasset(String alias, Table<CertificatesCertificatetemplateassetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CertificatesCertificatetemplateassetRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CERTIFICATES_CERTIFICATETEMPLATEASSET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CertificatesCertificatetemplateassetRecord> getPrimaryKey() {
        return Keys.KEY_CERTIFICATES_CERTIFICATETEMPLATEASSET_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CertificatesCertificatetemplateassetRecord>> getKeys() {
        return Arrays.<UniqueKey<CertificatesCertificatetemplateassetRecord>>asList(Keys.KEY_CERTIFICATES_CERTIFICATETEMPLATEASSET_PRIMARY, Keys.KEY_CERTIFICATES_CERTIFICATETEMPLATEASSET_ASSET_SLUG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CertificatesCertificatetemplateasset as(String alias) {
        return new CertificatesCertificatetemplateasset(alias, this);
    }

    /**
     * Rename this table
     */
    public CertificatesCertificatetemplateasset rename(String name) {
        return new CertificatesCertificatetemplateasset(name, null);
    }
}
