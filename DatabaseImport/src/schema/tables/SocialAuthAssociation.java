/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.SocialAuthAssociationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SocialAuthAssociation extends TableImpl<SocialAuthAssociationRecord> {

    private static final long serialVersionUID = 289495444;

    /**
     * The reference instance of <code>bitnami_edx.social_auth_association</code>
     */
    public static final SocialAuthAssociation SOCIAL_AUTH_ASSOCIATION = new SocialAuthAssociation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SocialAuthAssociationRecord> getRecordType() {
        return SocialAuthAssociationRecord.class;
    }

    /**
     * The column <code>bitnami_edx.social_auth_association.id</code>.
     */
    public final TableField<SocialAuthAssociationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.social_auth_association.server_url</code>.
     */
    public final TableField<SocialAuthAssociationRecord, String> SERVER_URL = createField("server_url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.social_auth_association.handle</code>.
     */
    public final TableField<SocialAuthAssociationRecord, String> HANDLE = createField("handle", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.social_auth_association.secret</code>.
     */
    public final TableField<SocialAuthAssociationRecord, String> SECRET = createField("secret", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.social_auth_association.issued</code>.
     */
    public final TableField<SocialAuthAssociationRecord, Integer> ISSUED = createField("issued", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.social_auth_association.lifetime</code>.
     */
    public final TableField<SocialAuthAssociationRecord, Integer> LIFETIME = createField("lifetime", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.social_auth_association.assoc_type</code>.
     */
    public final TableField<SocialAuthAssociationRecord, String> ASSOC_TYPE = createField("assoc_type", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.social_auth_association</code> table reference
     */
    public SocialAuthAssociation() {
        this("social_auth_association", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.social_auth_association</code> table reference
     */
    public SocialAuthAssociation(String alias) {
        this(alias, SOCIAL_AUTH_ASSOCIATION);
    }

    private SocialAuthAssociation(String alias, Table<SocialAuthAssociationRecord> aliased) {
        this(alias, aliased, null);
    }

    private SocialAuthAssociation(String alias, Table<SocialAuthAssociationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SocialAuthAssociationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SOCIAL_AUTH_ASSOCIATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SocialAuthAssociationRecord> getPrimaryKey() {
        return Keys.KEY_SOCIAL_AUTH_ASSOCIATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SocialAuthAssociationRecord>> getKeys() {
        return Arrays.<UniqueKey<SocialAuthAssociationRecord>>asList(Keys.KEY_SOCIAL_AUTH_ASSOCIATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SocialAuthAssociation as(String alias) {
        return new SocialAuthAssociation(alias, this);
    }

    /**
     * Rename this table
     */
    public SocialAuthAssociation rename(String name) {
        return new SocialAuthAssociation(name, null);
    }
}
