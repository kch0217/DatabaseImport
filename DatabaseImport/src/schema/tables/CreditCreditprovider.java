/**
 * This class is generated by jOOQ
 */
package schema.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schema.BitnamiEdx;
import schema.Keys;
import schema.tables.records.CreditCreditproviderRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditCreditprovider extends TableImpl<CreditCreditproviderRecord> {

    private static final long serialVersionUID = -1796127257;

    /**
     * The reference instance of <code>bitnami_edx.credit_creditprovider</code>
     */
    public static final CreditCreditprovider CREDIT_CREDITPROVIDER = new CreditCreditprovider();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CreditCreditproviderRecord> getRecordType() {
        return CreditCreditproviderRecord.class;
    }

    /**
     * The column <code>bitnami_edx.credit_creditprovider.id</code>.
     */
    public final TableField<CreditCreditproviderRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.created</code>.
     */
    public final TableField<CreditCreditproviderRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.modified</code>.
     */
    public final TableField<CreditCreditproviderRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.provider_id</code>.
     */
    public final TableField<CreditCreditproviderRecord, String> PROVIDER_ID = createField("provider_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.active</code>.
     */
    public final TableField<CreditCreditproviderRecord, Byte> ACTIVE = createField("active", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.display_name</code>.
     */
    public final TableField<CreditCreditproviderRecord, String> DISPLAY_NAME = createField("display_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.enable_integration</code>.
     */
    public final TableField<CreditCreditproviderRecord, Byte> ENABLE_INTEGRATION = createField("enable_integration", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.provider_url</code>.
     */
    public final TableField<CreditCreditproviderRecord, String> PROVIDER_URL = createField("provider_url", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.provider_status_url</code>.
     */
    public final TableField<CreditCreditproviderRecord, String> PROVIDER_STATUS_URL = createField("provider_status_url", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.provider_description</code>.
     */
    public final TableField<CreditCreditproviderRecord, String> PROVIDER_DESCRIPTION = createField("provider_description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.fulfillment_instructions</code>.
     */
    public final TableField<CreditCreditproviderRecord, String> FULFILLMENT_INSTRUCTIONS = createField("fulfillment_instructions", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.eligibility_email_message</code>.
     */
    public final TableField<CreditCreditproviderRecord, String> ELIGIBILITY_EMAIL_MESSAGE = createField("eligibility_email_message", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.receipt_email_message</code>.
     */
    public final TableField<CreditCreditproviderRecord, String> RECEIPT_EMAIL_MESSAGE = createField("receipt_email_message", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bitnami_edx.credit_creditprovider.thumbnail_url</code>.
     */
    public final TableField<CreditCreditproviderRecord, String> THUMBNAIL_URL = createField("thumbnail_url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>bitnami_edx.credit_creditprovider</code> table reference
     */
    public CreditCreditprovider() {
        this("credit_creditprovider", null);
    }

    /**
     * Create an aliased <code>bitnami_edx.credit_creditprovider</code> table reference
     */
    public CreditCreditprovider(String alias) {
        this(alias, CREDIT_CREDITPROVIDER);
    }

    private CreditCreditprovider(String alias, Table<CreditCreditproviderRecord> aliased) {
        this(alias, aliased, null);
    }

    private CreditCreditprovider(String alias, Table<CreditCreditproviderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BitnamiEdx.BITNAMI_EDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CreditCreditproviderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CREDIT_CREDITPROVIDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CreditCreditproviderRecord> getPrimaryKey() {
        return Keys.KEY_CREDIT_CREDITPROVIDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CreditCreditproviderRecord>> getKeys() {
        return Arrays.<UniqueKey<CreditCreditproviderRecord>>asList(Keys.KEY_CREDIT_CREDITPROVIDER_PRIMARY, Keys.KEY_CREDIT_CREDITPROVIDER_PROVIDER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditCreditprovider as(String alias) {
        return new CreditCreditprovider(alias, this);
    }

    /**
     * Rename this table
     */
    public CreditCreditprovider rename(String name) {
        return new CreditCreditprovider(name, null);
    }
}
