/**
 * This class is generated by jOOQ
 */
package schema;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import schema.tables.ApiAdminApiaccessconfig;
import schema.tables.ApiAdminApiaccessrequest;
import schema.tables.ApiAdminHistoricalapiaccessrequest;
import schema.tables.AssessmentAiclassifier;
import schema.tables.AssessmentAiclassifierset;
import schema.tables.AssessmentAigradingworkflow;
import schema.tables.AssessmentAitrainingworkflow;
import schema.tables.AssessmentAitrainingworkflowTrainingExamples;
import schema.tables.AssessmentAssessment;
import schema.tables.AssessmentAssessmentfeedback;
import schema.tables.AssessmentAssessmentfeedbackAssessments;
import schema.tables.AssessmentAssessmentfeedbackOptions;
import schema.tables.AssessmentAssessmentfeedbackoption;
import schema.tables.AssessmentAssessmentpart;
import schema.tables.AssessmentCriterion;
import schema.tables.AssessmentCriterionoption;
import schema.tables.AssessmentPeerworkflow;
import schema.tables.AssessmentPeerworkflowitem;
import schema.tables.AssessmentRubric;
import schema.tables.AssessmentStaffworkflow;
import schema.tables.AssessmentStudenttrainingworkflow;
import schema.tables.AssessmentStudenttrainingworkflowitem;
import schema.tables.AssessmentTrainingexample;
import schema.tables.AssessmentTrainingexampleOptionsSelected;
import schema.tables.AuthGroup;
import schema.tables.AuthGroupPermissions;
import schema.tables.AuthPermission;
import schema.tables.AuthRegistration;
import schema.tables.AuthUser;
import schema.tables.AuthUserGroups;
import schema.tables.AuthUserTest;
import schema.tables.AuthUserUserPermissions;
import schema.tables.AuthUserprofile;
import schema.tables.BadgesBadgeassertion;
import schema.tables.BadgesBadgeclass;
import schema.tables.BadgesCoursecompleteimageconfiguration;
import schema.tables.BadgesCourseeventbadgesconfiguration;
import schema.tables.BookmarksBookmark;
import schema.tables.BookmarksXblockcache;
import schema.tables.BrandingBrandingapiconfig;
import schema.tables.BrandingBrandinginfoconfig;
import schema.tables.BulkEmailCourseauthorization;
import schema.tables.BulkEmailCourseemail;
import schema.tables.BulkEmailCourseemailtemplate;
import schema.tables.BulkEmailOptout;
import schema.tables.CeleryTaskmeta;
import schema.tables.CeleryTasksetmeta;
import schema.tables.CertificatesCertificategenerationconfiguration;
import schema.tables.CertificatesCertificategenerationcoursesetting;
import schema.tables.CertificatesCertificategenerationhistory;
import schema.tables.CertificatesCertificatehtmlviewconfiguration;
import schema.tables.CertificatesCertificateinvalidation;
import schema.tables.CertificatesCertificatetemplate;
import schema.tables.CertificatesCertificatetemplateasset;
import schema.tables.CertificatesCertificatewhitelist;
import schema.tables.CertificatesExamplecertificate;
import schema.tables.CertificatesExamplecertificateset;
import schema.tables.CertificatesGeneratedcertificate;
import schema.tables.CommerceCommerceconfiguration;
import schema.tables.ContentserverCourseassetcachettlconfig;
import schema.tables.ContentstorePushnotificationconfig;
import schema.tables.ContentstoreVideouploadconfig;
import schema.tables.CorsCsrfXdomainproxyconfiguration;
import schema.tables.CorsheadersCorsmodel;
import schema.tables.CourseActionStateCoursererunstate;
import schema.tables.CourseCreatorsCoursecreator;
import schema.tables.CourseGroupsCohortmembership;
import schema.tables.CourseGroupsCoursecohort;
import schema.tables.CourseGroupsCoursecohortssettings;
import schema.tables.CourseGroupsCourseusergroup;
import schema.tables.CourseGroupsCourseusergroupUsers;
import schema.tables.CourseGroupsCourseusergrouppartitiongroup;
import schema.tables.CourseModesCoursemode;
import schema.tables.CourseModesCoursemodeexpirationconfig;
import schema.tables.CourseModesCoursemodesarchive;
import schema.tables.CourseOverviewsCourseoverview;
import schema.tables.CourseOverviewsCourseoverviewimageconfig;
import schema.tables.CourseOverviewsCourseoverviewimageset;
import schema.tables.CourseOverviewsCourseoverviewtab;
import schema.tables.CourseStructuresCoursestructure;
import schema.tables.CoursetalkCoursetalkwidgetconfiguration;
import schema.tables.CoursewareOfflinecomputedgrade;
import schema.tables.CoursewareOfflinecomputedgradelog;
import schema.tables.CoursewareStudentfieldoverride;
import schema.tables.CoursewareStudentmodule;
import schema.tables.CoursewareStudentmodulehistory;
import schema.tables.CoursewareXmodulestudentinfofield;
import schema.tables.CoursewareXmodulestudentprefsfield;
import schema.tables.CoursewareXmoduleuserstatesummaryfield;
import schema.tables.CredentialsCredentialsapiconfig;
import schema.tables.CreditCreditconfig;
import schema.tables.CreditCreditcourse;
import schema.tables.CreditCrediteligibility;
import schema.tables.CreditCreditprovider;
import schema.tables.CreditCreditrequest;
import schema.tables.CreditCreditrequirement;
import schema.tables.CreditCreditrequirementstatus;
import schema.tables.CreditHistoricalcreditrequest;
import schema.tables.CreditHistoricalcreditrequirementstatus;
import schema.tables.DarkLangDarklangconfig;
import schema.tables.DjangoAdminLog;
import schema.tables.DjangoCommentClientPermission;
import schema.tables.DjangoCommentClientPermissionRoles;
import schema.tables.DjangoCommentClientRole;
import schema.tables.DjangoCommentClientRoleUsers;
import schema.tables.DjangoContentType;
import schema.tables.DjangoMigrations;
import schema.tables.DjangoOpenidAuthAssociation;
import schema.tables.DjangoOpenidAuthNonce;
import schema.tables.DjangoOpenidAuthUseropenid;
import schema.tables.DjangoSession;
import schema.tables.DjangoSite;
import schema.tables.DjceleryCrontabschedule;
import schema.tables.DjceleryIntervalschedule;
import schema.tables.DjceleryPeriodictask;
import schema.tables.DjceleryPeriodictasks;
import schema.tables.DjceleryTaskstate;
import schema.tables.DjceleryWorkerstate;
import schema.tables.EdxvalCoursevideo;
import schema.tables.EdxvalEncodedvideo;
import schema.tables.EdxvalProfile;
import schema.tables.EdxvalSubtitle;
import schema.tables.EdxvalVideo;
import schema.tables.EmbargoCountry;
import schema.tables.EmbargoCountryaccessrule;
import schema.tables.EmbargoCourseaccessrulehistory;
import schema.tables.EmbargoEmbargoedcourse;
import schema.tables.EmbargoEmbargoedstate;
import schema.tables.EmbargoIpfilter;
import schema.tables.EmbargoRestrictedcourse;
import schema.tables.ExternalAuthExternalauthmap;
import schema.tables.InstructorTaskInstructortask;
import schema.tables.LmsXblockXblockasidesconfig;
import schema.tables.MicrositeConfigurationHistoricalmicrositeorganizationmapping;
import schema.tables.MicrositeConfigurationHistoricalmicrositetemplate;
import schema.tables.MicrositeConfigurationMicrosite;
import schema.tables.MicrositeConfigurationMicrositehistory;
import schema.tables.MicrositeConfigurationMicrositeorganizationmapping;
import schema.tables.MicrositeConfigurationMicrositetemplate;
import schema.tables.MilestonesCoursecontentmilestone;
import schema.tables.MilestonesCoursemilestone;
import schema.tables.MilestonesMilestone;
import schema.tables.MilestonesMilestonerelationshiptype;
import schema.tables.MilestonesUsermilestone;
import schema.tables.MobileApiAppversionconfig;
import schema.tables.MobileApiMobileapiconfig;
import schema.tables.NotesNote;
import schema.tables.NotifyNotification;
import schema.tables.NotifyNotificationtype;
import schema.tables.NotifySettings;
import schema.tables.NotifySubscription;
import schema.tables.Oauth2Accesstoken;
import schema.tables.Oauth2Client;
import schema.tables.Oauth2Grant;
import schema.tables.Oauth2ProviderAccesstoken;
import schema.tables.Oauth2ProviderApplication;
import schema.tables.Oauth2ProviderGrant;
import schema.tables.Oauth2ProviderRefreshtoken;
import schema.tables.Oauth2ProviderTrustedclient;
import schema.tables.Oauth2Refreshtoken;
import schema.tables.OauthProviderConsumer;
import schema.tables.OauthProviderNonce;
import schema.tables.OauthProviderScope;
import schema.tables.OauthProviderToken;
import schema.tables.OrganizationsOrganization;
import schema.tables.OrganizationsOrganizationcourse;
import schema.tables.ProctoringProctoredexam;
import schema.tables.ProctoringProctoredexamreviewpolicy;
import schema.tables.ProctoringProctoredexamreviewpolicyhistory;
import schema.tables.ProctoringProctoredexamsoftwaresecurereview;
import schema.tables.ProctoringProctoredexamsoftwaresecurereviewhistory;
import schema.tables.ProctoringProctoredexamstudentallowance;
import schema.tables.ProctoringProctoredexamstudentallowancehistory;
import schema.tables.ProctoringProctoredexamstudentattempt;
import schema.tables.ProctoringProctoredexamstudentattemptcomment;
import schema.tables.ProctoringProctoredexamstudentattempthistory;
import schema.tables.ProgramsProgramsapiconfig;
import schema.tables.RssProxyWhitelistedrssurl;
import schema.tables.SelfPacedSelfpacedconfiguration;
import schema.tables.ShoppingcartCertificateitem;
import schema.tables.ShoppingcartCoupon;
import schema.tables.ShoppingcartCouponredemption;
import schema.tables.ShoppingcartCourseregcodeitem;
import schema.tables.ShoppingcartCourseregcodeitemannotation;
import schema.tables.ShoppingcartCourseregistrationcode;
import schema.tables.ShoppingcartCourseregistrationcodeinvoiceitem;
import schema.tables.ShoppingcartDonation;
import schema.tables.ShoppingcartDonationconfiguration;
import schema.tables.ShoppingcartInvoice;
import schema.tables.ShoppingcartInvoicehistory;
import schema.tables.ShoppingcartInvoiceitem;
import schema.tables.ShoppingcartInvoicetransaction;
import schema.tables.ShoppingcartOrder;
import schema.tables.ShoppingcartOrderitem;
import schema.tables.ShoppingcartPaidcourseregistration;
import schema.tables.ShoppingcartPaidcourseregistrationannotation;
import schema.tables.ShoppingcartRegistrationcoderedemption;
import schema.tables.SiteConfigurationSiteconfiguration;
import schema.tables.SiteConfigurationSiteconfigurationhistory;
import schema.tables.SocialAuthAssociation;
import schema.tables.SocialAuthCode;
import schema.tables.SocialAuthNonce;
import schema.tables.SocialAuthUsersocialauth;
import schema.tables.SplashSplashconfig;
import schema.tables.StaticReplaceAssetbaseurlconfig;
import schema.tables.StaticReplaceAssetexcludedextensionsconfig;
import schema.tables.StatusCoursemessage;
import schema.tables.StatusGlobalstatusmessage;
import schema.tables.StudentAnonymoususerid;
import schema.tables.StudentCourseaccessrole;
import schema.tables.StudentCourseenrollment;
import schema.tables.StudentCourseenrollmentallowed;
import schema.tables.StudentCourseenrollmentattribute;
import schema.tables.StudentDashboardconfiguration;
import schema.tables.StudentEnrollmentrefundconfiguration;
import schema.tables.StudentEntranceexamconfiguration;
import schema.tables.StudentHistoricalcourseenrollment;
import schema.tables.StudentLanguageproficiency;
import schema.tables.StudentLinkedinaddtoprofileconfiguration;
import schema.tables.StudentLoginfailures;
import schema.tables.StudentManualenrollmentaudit;
import schema.tables.StudentPasswordhistory;
import schema.tables.StudentPendingemailchange;
import schema.tables.StudentPendingnamechange;
import schema.tables.StudentUsersignupsource;
import schema.tables.StudentUserstanding;
import schema.tables.StudentUsertestgroup;
import schema.tables.StudentUsertestgroupUsers;
import schema.tables.SubmissionsScore;
import schema.tables.SubmissionsScoreannotation;
import schema.tables.SubmissionsScoresummary;
import schema.tables.SubmissionsStudentitem;
import schema.tables.SubmissionsSubmission;
import schema.tables.SurveySurveyanswer;
import schema.tables.SurveySurveyform;
import schema.tables.TeamsCourseteam;
import schema.tables.TeamsCourseteammembership;
import schema.tables.ThirdPartyAuthLtiproviderconfig;
import schema.tables.ThirdPartyAuthOauth2providerconfig;
import schema.tables.ThirdPartyAuthProviderapipermissions;
import schema.tables.ThirdPartyAuthSamlconfiguration;
import schema.tables.ThirdPartyAuthSamlproviderconfig;
import schema.tables.ThirdPartyAuthSamlproviderdata;
import schema.tables.ThumbnailKvstore;
import schema.tables.TrackTrackinglog;
import schema.tables.UserApiUsercoursetag;
import schema.tables.UserApiUserorgtag;
import schema.tables.UserApiUserpreference;
import schema.tables.UtilRatelimitconfiguration;
import schema.tables.VerifiedTrackContentVerifiedtrackcohortedcourse;
import schema.tables.VerifyStudentHistoricalverificationdeadline;
import schema.tables.VerifyStudentIcrvstatusemailsconfiguration;
import schema.tables.VerifyStudentIncoursereverificationconfiguration;
import schema.tables.VerifyStudentSkippedreverification;
import schema.tables.VerifyStudentSoftwaresecurephotoverification;
import schema.tables.VerifyStudentVerificationcheckpoint;
import schema.tables.VerifyStudentVerificationcheckpointPhotoVerification;
import schema.tables.VerifyStudentVerificationdeadline;
import schema.tables.VerifyStudentVerificationstatus;
import schema.tables.WikiArticle;
import schema.tables.WikiArticleforobject;
import schema.tables.WikiArticleplugin;
import schema.tables.WikiArticlerevision;
import schema.tables.WikiAttachment;
import schema.tables.WikiAttachmentrevision;
import schema.tables.WikiImage;
import schema.tables.WikiImagerevision;
import schema.tables.WikiReusableplugin;
import schema.tables.WikiReusablepluginArticles;
import schema.tables.WikiRevisionplugin;
import schema.tables.WikiRevisionpluginrevision;
import schema.tables.WikiSimpleplugin;
import schema.tables.WikiUrlpath;
import schema.tables.WorkflowAssessmentworkflow;
import schema.tables.WorkflowAssessmentworkflowcancellation;
import schema.tables.WorkflowAssessmentworkflowstep;
import schema.tables.XblockConfigStudioconfig;
import schema.tables.XblockDjangoXblockdisableconfig;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BitnamiEdx extends SchemaImpl {

    private static final long serialVersionUID = -1003271389;

    /**
     * The reference instance of <code>bitnami_edx</code>
     */
    public static final BitnamiEdx BITNAMI_EDX = new BitnamiEdx();

    /**
     * The table <code>bitnami_edx.api_admin_apiaccessconfig</code>.
     */
    public final ApiAdminApiaccessconfig API_ADMIN_APIACCESSCONFIG = schema.tables.ApiAdminApiaccessconfig.API_ADMIN_APIACCESSCONFIG;

    /**
     * The table <code>bitnami_edx.api_admin_apiaccessrequest</code>.
     */
    public final ApiAdminApiaccessrequest API_ADMIN_APIACCESSREQUEST = schema.tables.ApiAdminApiaccessrequest.API_ADMIN_APIACCESSREQUEST;

    /**
     * The table <code>bitnami_edx.api_admin_historicalapiaccessrequest</code>.
     */
    public final ApiAdminHistoricalapiaccessrequest API_ADMIN_HISTORICALAPIACCESSREQUEST = schema.tables.ApiAdminHistoricalapiaccessrequest.API_ADMIN_HISTORICALAPIACCESSREQUEST;

    /**
     * The table <code>bitnami_edx.assessment_aiclassifier</code>.
     */
    public final AssessmentAiclassifier ASSESSMENT_AICLASSIFIER = schema.tables.AssessmentAiclassifier.ASSESSMENT_AICLASSIFIER;

    /**
     * The table <code>bitnami_edx.assessment_aiclassifierset</code>.
     */
    public final AssessmentAiclassifierset ASSESSMENT_AICLASSIFIERSET = schema.tables.AssessmentAiclassifierset.ASSESSMENT_AICLASSIFIERSET;

    /**
     * The table <code>bitnami_edx.assessment_aigradingworkflow</code>.
     */
    public final AssessmentAigradingworkflow ASSESSMENT_AIGRADINGWORKFLOW = schema.tables.AssessmentAigradingworkflow.ASSESSMENT_AIGRADINGWORKFLOW;

    /**
     * The table <code>bitnami_edx.assessment_aitrainingworkflow</code>.
     */
    public final AssessmentAitrainingworkflow ASSESSMENT_AITRAININGWORKFLOW = schema.tables.AssessmentAitrainingworkflow.ASSESSMENT_AITRAININGWORKFLOW;

    /**
     * The table <code>bitnami_edx.assessment_aitrainingworkflow_training_examples</code>.
     */
    public final AssessmentAitrainingworkflowTrainingExamples ASSESSMENT_AITRAININGWORKFLOW_TRAINING_EXAMPLES = schema.tables.AssessmentAitrainingworkflowTrainingExamples.ASSESSMENT_AITRAININGWORKFLOW_TRAINING_EXAMPLES;

    /**
     * The table <code>bitnami_edx.assessment_assessment</code>.
     */
    public final AssessmentAssessment ASSESSMENT_ASSESSMENT = schema.tables.AssessmentAssessment.ASSESSMENT_ASSESSMENT;

    /**
     * The table <code>bitnami_edx.assessment_assessmentfeedback</code>.
     */
    public final AssessmentAssessmentfeedback ASSESSMENT_ASSESSMENTFEEDBACK = schema.tables.AssessmentAssessmentfeedback.ASSESSMENT_ASSESSMENTFEEDBACK;

    /**
     * The table <code>bitnami_edx.assessment_assessmentfeedbackoption</code>.
     */
    public final AssessmentAssessmentfeedbackoption ASSESSMENT_ASSESSMENTFEEDBACKOPTION = schema.tables.AssessmentAssessmentfeedbackoption.ASSESSMENT_ASSESSMENTFEEDBACKOPTION;

    /**
     * The table <code>bitnami_edx.assessment_assessmentfeedback_assessments</code>.
     */
    public final AssessmentAssessmentfeedbackAssessments ASSESSMENT_ASSESSMENTFEEDBACK_ASSESSMENTS = schema.tables.AssessmentAssessmentfeedbackAssessments.ASSESSMENT_ASSESSMENTFEEDBACK_ASSESSMENTS;

    /**
     * The table <code>bitnami_edx.assessment_assessmentfeedback_options</code>.
     */
    public final AssessmentAssessmentfeedbackOptions ASSESSMENT_ASSESSMENTFEEDBACK_OPTIONS = schema.tables.AssessmentAssessmentfeedbackOptions.ASSESSMENT_ASSESSMENTFEEDBACK_OPTIONS;

    /**
     * The table <code>bitnami_edx.assessment_assessmentpart</code>.
     */
    public final AssessmentAssessmentpart ASSESSMENT_ASSESSMENTPART = schema.tables.AssessmentAssessmentpart.ASSESSMENT_ASSESSMENTPART;

    /**
     * The table <code>bitnami_edx.assessment_criterion</code>.
     */
    public final AssessmentCriterion ASSESSMENT_CRITERION = schema.tables.AssessmentCriterion.ASSESSMENT_CRITERION;

    /**
     * The table <code>bitnami_edx.assessment_criterionoption</code>.
     */
    public final AssessmentCriterionoption ASSESSMENT_CRITERIONOPTION = schema.tables.AssessmentCriterionoption.ASSESSMENT_CRITERIONOPTION;

    /**
     * The table <code>bitnami_edx.assessment_peerworkflow</code>.
     */
    public final AssessmentPeerworkflow ASSESSMENT_PEERWORKFLOW = schema.tables.AssessmentPeerworkflow.ASSESSMENT_PEERWORKFLOW;

    /**
     * The table <code>bitnami_edx.assessment_peerworkflowitem</code>.
     */
    public final AssessmentPeerworkflowitem ASSESSMENT_PEERWORKFLOWITEM = schema.tables.AssessmentPeerworkflowitem.ASSESSMENT_PEERWORKFLOWITEM;

    /**
     * The table <code>bitnami_edx.assessment_rubric</code>.
     */
    public final AssessmentRubric ASSESSMENT_RUBRIC = schema.tables.AssessmentRubric.ASSESSMENT_RUBRIC;

    /**
     * The table <code>bitnami_edx.assessment_staffworkflow</code>.
     */
    public final AssessmentStaffworkflow ASSESSMENT_STAFFWORKFLOW = schema.tables.AssessmentStaffworkflow.ASSESSMENT_STAFFWORKFLOW;

    /**
     * The table <code>bitnami_edx.assessment_studenttrainingworkflow</code>.
     */
    public final AssessmentStudenttrainingworkflow ASSESSMENT_STUDENTTRAININGWORKFLOW = schema.tables.AssessmentStudenttrainingworkflow.ASSESSMENT_STUDENTTRAININGWORKFLOW;

    /**
     * The table <code>bitnami_edx.assessment_studenttrainingworkflowitem</code>.
     */
    public final AssessmentStudenttrainingworkflowitem ASSESSMENT_STUDENTTRAININGWORKFLOWITEM = schema.tables.AssessmentStudenttrainingworkflowitem.ASSESSMENT_STUDENTTRAININGWORKFLOWITEM;

    /**
     * The table <code>bitnami_edx.assessment_trainingexample</code>.
     */
    public final AssessmentTrainingexample ASSESSMENT_TRAININGEXAMPLE = schema.tables.AssessmentTrainingexample.ASSESSMENT_TRAININGEXAMPLE;

    /**
     * The table <code>bitnami_edx.assessment_trainingexample_options_selected</code>.
     */
    public final AssessmentTrainingexampleOptionsSelected ASSESSMENT_TRAININGEXAMPLE_OPTIONS_SELECTED = schema.tables.AssessmentTrainingexampleOptionsSelected.ASSESSMENT_TRAININGEXAMPLE_OPTIONS_SELECTED;

    /**
     * The table <code>bitnami_edx.auth_group</code>.
     */
    public final AuthGroup AUTH_GROUP = schema.tables.AuthGroup.AUTH_GROUP;

    /**
     * The table <code>bitnami_edx.auth_group_permissions</code>.
     */
    public final AuthGroupPermissions AUTH_GROUP_PERMISSIONS = schema.tables.AuthGroupPermissions.AUTH_GROUP_PERMISSIONS;

    /**
     * The table <code>bitnami_edx.auth_permission</code>.
     */
    public final AuthPermission AUTH_PERMISSION = schema.tables.AuthPermission.AUTH_PERMISSION;

    /**
     * The table <code>bitnami_edx.auth_registration</code>.
     */
    public final AuthRegistration AUTH_REGISTRATION = schema.tables.AuthRegistration.AUTH_REGISTRATION;

    /**
     * The table <code>bitnami_edx.auth_user</code>.
     */
    public final AuthUser AUTH_USER = schema.tables.AuthUser.AUTH_USER;

    /**
     * The table <code>bitnami_edx.auth_userprofile</code>.
     */
    public final AuthUserprofile AUTH_USERPROFILE = schema.tables.AuthUserprofile.AUTH_USERPROFILE;

    /**
     * The table <code>bitnami_edx.auth_user_groups</code>.
     */
    public final AuthUserGroups AUTH_USER_GROUPS = schema.tables.AuthUserGroups.AUTH_USER_GROUPS;

    /**
     * The table <code>bitnami_edx.auth_user_test</code>.
     */
    public final AuthUserTest AUTH_USER_TEST = schema.tables.AuthUserTest.AUTH_USER_TEST;

    /**
     * The table <code>bitnami_edx.auth_user_user_permissions</code>.
     */
    public final AuthUserUserPermissions AUTH_USER_USER_PERMISSIONS = schema.tables.AuthUserUserPermissions.AUTH_USER_USER_PERMISSIONS;

    /**
     * The table <code>bitnami_edx.badges_badgeassertion</code>.
     */
    public final BadgesBadgeassertion BADGES_BADGEASSERTION = schema.tables.BadgesBadgeassertion.BADGES_BADGEASSERTION;

    /**
     * The table <code>bitnami_edx.badges_badgeclass</code>.
     */
    public final BadgesBadgeclass BADGES_BADGECLASS = schema.tables.BadgesBadgeclass.BADGES_BADGECLASS;

    /**
     * The table <code>bitnami_edx.badges_coursecompleteimageconfiguration</code>.
     */
    public final BadgesCoursecompleteimageconfiguration BADGES_COURSECOMPLETEIMAGECONFIGURATION = schema.tables.BadgesCoursecompleteimageconfiguration.BADGES_COURSECOMPLETEIMAGECONFIGURATION;

    /**
     * The table <code>bitnami_edx.badges_courseeventbadgesconfiguration</code>.
     */
    public final BadgesCourseeventbadgesconfiguration BADGES_COURSEEVENTBADGESCONFIGURATION = schema.tables.BadgesCourseeventbadgesconfiguration.BADGES_COURSEEVENTBADGESCONFIGURATION;

    /**
     * The table <code>bitnami_edx.bookmarks_bookmark</code>.
     */
    public final BookmarksBookmark BOOKMARKS_BOOKMARK = schema.tables.BookmarksBookmark.BOOKMARKS_BOOKMARK;

    /**
     * The table <code>bitnami_edx.bookmarks_xblockcache</code>.
     */
    public final BookmarksXblockcache BOOKMARKS_XBLOCKCACHE = schema.tables.BookmarksXblockcache.BOOKMARKS_XBLOCKCACHE;

    /**
     * The table <code>bitnami_edx.branding_brandingapiconfig</code>.
     */
    public final BrandingBrandingapiconfig BRANDING_BRANDINGAPICONFIG = schema.tables.BrandingBrandingapiconfig.BRANDING_BRANDINGAPICONFIG;

    /**
     * The table <code>bitnami_edx.branding_brandinginfoconfig</code>.
     */
    public final BrandingBrandinginfoconfig BRANDING_BRANDINGINFOCONFIG = schema.tables.BrandingBrandinginfoconfig.BRANDING_BRANDINGINFOCONFIG;

    /**
     * The table <code>bitnami_edx.bulk_email_courseauthorization</code>.
     */
    public final BulkEmailCourseauthorization BULK_EMAIL_COURSEAUTHORIZATION = schema.tables.BulkEmailCourseauthorization.BULK_EMAIL_COURSEAUTHORIZATION;

    /**
     * The table <code>bitnami_edx.bulk_email_courseemail</code>.
     */
    public final BulkEmailCourseemail BULK_EMAIL_COURSEEMAIL = schema.tables.BulkEmailCourseemail.BULK_EMAIL_COURSEEMAIL;

    /**
     * The table <code>bitnami_edx.bulk_email_courseemailtemplate</code>.
     */
    public final BulkEmailCourseemailtemplate BULK_EMAIL_COURSEEMAILTEMPLATE = schema.tables.BulkEmailCourseemailtemplate.BULK_EMAIL_COURSEEMAILTEMPLATE;

    /**
     * The table <code>bitnami_edx.bulk_email_optout</code>.
     */
    public final BulkEmailOptout BULK_EMAIL_OPTOUT = schema.tables.BulkEmailOptout.BULK_EMAIL_OPTOUT;

    /**
     * The table <code>bitnami_edx.celery_taskmeta</code>.
     */
    public final CeleryTaskmeta CELERY_TASKMETA = schema.tables.CeleryTaskmeta.CELERY_TASKMETA;

    /**
     * The table <code>bitnami_edx.celery_tasksetmeta</code>.
     */
    public final CeleryTasksetmeta CELERY_TASKSETMETA = schema.tables.CeleryTasksetmeta.CELERY_TASKSETMETA;

    /**
     * The table <code>bitnami_edx.certificates_certificategenerationconfiguration</code>.
     */
    public final CertificatesCertificategenerationconfiguration CERTIFICATES_CERTIFICATEGENERATIONCONFIGURATION = schema.tables.CertificatesCertificategenerationconfiguration.CERTIFICATES_CERTIFICATEGENERATIONCONFIGURATION;

    /**
     * The table <code>bitnami_edx.certificates_certificategenerationcoursesetting</code>.
     */
    public final CertificatesCertificategenerationcoursesetting CERTIFICATES_CERTIFICATEGENERATIONCOURSESETTING = schema.tables.CertificatesCertificategenerationcoursesetting.CERTIFICATES_CERTIFICATEGENERATIONCOURSESETTING;

    /**
     * The table <code>bitnami_edx.certificates_certificategenerationhistory</code>.
     */
    public final CertificatesCertificategenerationhistory CERTIFICATES_CERTIFICATEGENERATIONHISTORY = schema.tables.CertificatesCertificategenerationhistory.CERTIFICATES_CERTIFICATEGENERATIONHISTORY;

    /**
     * The table <code>bitnami_edx.certificates_certificatehtmlviewconfiguration</code>.
     */
    public final CertificatesCertificatehtmlviewconfiguration CERTIFICATES_CERTIFICATEHTMLVIEWCONFIGURATION = schema.tables.CertificatesCertificatehtmlviewconfiguration.CERTIFICATES_CERTIFICATEHTMLVIEWCONFIGURATION;

    /**
     * The table <code>bitnami_edx.certificates_certificateinvalidation</code>.
     */
    public final CertificatesCertificateinvalidation CERTIFICATES_CERTIFICATEINVALIDATION = schema.tables.CertificatesCertificateinvalidation.CERTIFICATES_CERTIFICATEINVALIDATION;

    /**
     * The table <code>bitnami_edx.certificates_certificatetemplate</code>.
     */
    public final CertificatesCertificatetemplate CERTIFICATES_CERTIFICATETEMPLATE = schema.tables.CertificatesCertificatetemplate.CERTIFICATES_CERTIFICATETEMPLATE;

    /**
     * The table <code>bitnami_edx.certificates_certificatetemplateasset</code>.
     */
    public final CertificatesCertificatetemplateasset CERTIFICATES_CERTIFICATETEMPLATEASSET = schema.tables.CertificatesCertificatetemplateasset.CERTIFICATES_CERTIFICATETEMPLATEASSET;

    /**
     * The table <code>bitnami_edx.certificates_certificatewhitelist</code>.
     */
    public final CertificatesCertificatewhitelist CERTIFICATES_CERTIFICATEWHITELIST = schema.tables.CertificatesCertificatewhitelist.CERTIFICATES_CERTIFICATEWHITELIST;

    /**
     * The table <code>bitnami_edx.certificates_examplecertificate</code>.
     */
    public final CertificatesExamplecertificate CERTIFICATES_EXAMPLECERTIFICATE = schema.tables.CertificatesExamplecertificate.CERTIFICATES_EXAMPLECERTIFICATE;

    /**
     * The table <code>bitnami_edx.certificates_examplecertificateset</code>.
     */
    public final CertificatesExamplecertificateset CERTIFICATES_EXAMPLECERTIFICATESET = schema.tables.CertificatesExamplecertificateset.CERTIFICATES_EXAMPLECERTIFICATESET;

    /**
     * The table <code>bitnami_edx.certificates_generatedcertificate</code>.
     */
    public final CertificatesGeneratedcertificate CERTIFICATES_GENERATEDCERTIFICATE = schema.tables.CertificatesGeneratedcertificate.CERTIFICATES_GENERATEDCERTIFICATE;

    /**
     * The table <code>bitnami_edx.commerce_commerceconfiguration</code>.
     */
    public final CommerceCommerceconfiguration COMMERCE_COMMERCECONFIGURATION = schema.tables.CommerceCommerceconfiguration.COMMERCE_COMMERCECONFIGURATION;

    /**
     * The table <code>bitnami_edx.contentserver_courseassetcachettlconfig</code>.
     */
    public final ContentserverCourseassetcachettlconfig CONTENTSERVER_COURSEASSETCACHETTLCONFIG = schema.tables.ContentserverCourseassetcachettlconfig.CONTENTSERVER_COURSEASSETCACHETTLCONFIG;

    /**
     * The table <code>bitnami_edx.contentstore_pushnotificationconfig</code>.
     */
    public final ContentstorePushnotificationconfig CONTENTSTORE_PUSHNOTIFICATIONCONFIG = schema.tables.ContentstorePushnotificationconfig.CONTENTSTORE_PUSHNOTIFICATIONCONFIG;

    /**
     * The table <code>bitnami_edx.contentstore_videouploadconfig</code>.
     */
    public final ContentstoreVideouploadconfig CONTENTSTORE_VIDEOUPLOADCONFIG = schema.tables.ContentstoreVideouploadconfig.CONTENTSTORE_VIDEOUPLOADCONFIG;

    /**
     * The table <code>bitnami_edx.corsheaders_corsmodel</code>.
     */
    public final CorsheadersCorsmodel CORSHEADERS_CORSMODEL = schema.tables.CorsheadersCorsmodel.CORSHEADERS_CORSMODEL;

    /**
     * The table <code>bitnami_edx.cors_csrf_xdomainproxyconfiguration</code>.
     */
    public final CorsCsrfXdomainproxyconfiguration CORS_CSRF_XDOMAINPROXYCONFIGURATION = schema.tables.CorsCsrfXdomainproxyconfiguration.CORS_CSRF_XDOMAINPROXYCONFIGURATION;

    /**
     * The table <code>bitnami_edx.coursetalk_coursetalkwidgetconfiguration</code>.
     */
    public final CoursetalkCoursetalkwidgetconfiguration COURSETALK_COURSETALKWIDGETCONFIGURATION = schema.tables.CoursetalkCoursetalkwidgetconfiguration.COURSETALK_COURSETALKWIDGETCONFIGURATION;

    /**
     * The table <code>bitnami_edx.courseware_offlinecomputedgrade</code>.
     */
    public final CoursewareOfflinecomputedgrade COURSEWARE_OFFLINECOMPUTEDGRADE = schema.tables.CoursewareOfflinecomputedgrade.COURSEWARE_OFFLINECOMPUTEDGRADE;

    /**
     * The table <code>bitnami_edx.courseware_offlinecomputedgradelog</code>.
     */
    public final CoursewareOfflinecomputedgradelog COURSEWARE_OFFLINECOMPUTEDGRADELOG = schema.tables.CoursewareOfflinecomputedgradelog.COURSEWARE_OFFLINECOMPUTEDGRADELOG;

    /**
     * The table <code>bitnami_edx.courseware_studentfieldoverride</code>.
     */
    public final CoursewareStudentfieldoverride COURSEWARE_STUDENTFIELDOVERRIDE = schema.tables.CoursewareStudentfieldoverride.COURSEWARE_STUDENTFIELDOVERRIDE;

    /**
     * The table <code>bitnami_edx.courseware_studentmodule</code>.
     */
    public final CoursewareStudentmodule COURSEWARE_STUDENTMODULE = schema.tables.CoursewareStudentmodule.COURSEWARE_STUDENTMODULE;

    /**
     * The table <code>bitnami_edx.courseware_studentmodulehistory</code>.
     */
    public final CoursewareStudentmodulehistory COURSEWARE_STUDENTMODULEHISTORY = schema.tables.CoursewareStudentmodulehistory.COURSEWARE_STUDENTMODULEHISTORY;

    /**
     * The table <code>bitnami_edx.courseware_xmodulestudentinfofield</code>.
     */
    public final CoursewareXmodulestudentinfofield COURSEWARE_XMODULESTUDENTINFOFIELD = schema.tables.CoursewareXmodulestudentinfofield.COURSEWARE_XMODULESTUDENTINFOFIELD;

    /**
     * The table <code>bitnami_edx.courseware_xmodulestudentprefsfield</code>.
     */
    public final CoursewareXmodulestudentprefsfield COURSEWARE_XMODULESTUDENTPREFSFIELD = schema.tables.CoursewareXmodulestudentprefsfield.COURSEWARE_XMODULESTUDENTPREFSFIELD;

    /**
     * The table <code>bitnami_edx.courseware_xmoduleuserstatesummaryfield</code>.
     */
    public final CoursewareXmoduleuserstatesummaryfield COURSEWARE_XMODULEUSERSTATESUMMARYFIELD = schema.tables.CoursewareXmoduleuserstatesummaryfield.COURSEWARE_XMODULEUSERSTATESUMMARYFIELD;

    /**
     * The table <code>bitnami_edx.course_action_state_coursererunstate</code>.
     */
    public final CourseActionStateCoursererunstate COURSE_ACTION_STATE_COURSERERUNSTATE = schema.tables.CourseActionStateCoursererunstate.COURSE_ACTION_STATE_COURSERERUNSTATE;

    /**
     * The table <code>bitnami_edx.course_creators_coursecreator</code>.
     */
    public final CourseCreatorsCoursecreator COURSE_CREATORS_COURSECREATOR = schema.tables.CourseCreatorsCoursecreator.COURSE_CREATORS_COURSECREATOR;

    /**
     * The table <code>bitnami_edx.course_groups_cohortmembership</code>.
     */
    public final CourseGroupsCohortmembership COURSE_GROUPS_COHORTMEMBERSHIP = schema.tables.CourseGroupsCohortmembership.COURSE_GROUPS_COHORTMEMBERSHIP;

    /**
     * The table <code>bitnami_edx.course_groups_coursecohort</code>.
     */
    public final CourseGroupsCoursecohort COURSE_GROUPS_COURSECOHORT = schema.tables.CourseGroupsCoursecohort.COURSE_GROUPS_COURSECOHORT;

    /**
     * The table <code>bitnami_edx.course_groups_coursecohortssettings</code>.
     */
    public final CourseGroupsCoursecohortssettings COURSE_GROUPS_COURSECOHORTSSETTINGS = schema.tables.CourseGroupsCoursecohortssettings.COURSE_GROUPS_COURSECOHORTSSETTINGS;

    /**
     * The table <code>bitnami_edx.course_groups_courseusergroup</code>.
     */
    public final CourseGroupsCourseusergroup COURSE_GROUPS_COURSEUSERGROUP = schema.tables.CourseGroupsCourseusergroup.COURSE_GROUPS_COURSEUSERGROUP;

    /**
     * The table <code>bitnami_edx.course_groups_courseusergrouppartitiongroup</code>.
     */
    public final CourseGroupsCourseusergrouppartitiongroup COURSE_GROUPS_COURSEUSERGROUPPARTITIONGROUP = schema.tables.CourseGroupsCourseusergrouppartitiongroup.COURSE_GROUPS_COURSEUSERGROUPPARTITIONGROUP;

    /**
     * The table <code>bitnami_edx.course_groups_courseusergroup_users</code>.
     */
    public final CourseGroupsCourseusergroupUsers COURSE_GROUPS_COURSEUSERGROUP_USERS = schema.tables.CourseGroupsCourseusergroupUsers.COURSE_GROUPS_COURSEUSERGROUP_USERS;

    /**
     * The table <code>bitnami_edx.course_modes_coursemode</code>.
     */
    public final CourseModesCoursemode COURSE_MODES_COURSEMODE = schema.tables.CourseModesCoursemode.COURSE_MODES_COURSEMODE;

    /**
     * The table <code>bitnami_edx.course_modes_coursemodeexpirationconfig</code>.
     */
    public final CourseModesCoursemodeexpirationconfig COURSE_MODES_COURSEMODEEXPIRATIONCONFIG = schema.tables.CourseModesCoursemodeexpirationconfig.COURSE_MODES_COURSEMODEEXPIRATIONCONFIG;

    /**
     * The table <code>bitnami_edx.course_modes_coursemodesarchive</code>.
     */
    public final CourseModesCoursemodesarchive COURSE_MODES_COURSEMODESARCHIVE = schema.tables.CourseModesCoursemodesarchive.COURSE_MODES_COURSEMODESARCHIVE;

    /**
     * The table <code>bitnami_edx.course_overviews_courseoverview</code>.
     */
    public final CourseOverviewsCourseoverview COURSE_OVERVIEWS_COURSEOVERVIEW = schema.tables.CourseOverviewsCourseoverview.COURSE_OVERVIEWS_COURSEOVERVIEW;

    /**
     * The table <code>bitnami_edx.course_overviews_courseoverviewimageconfig</code>.
     */
    public final CourseOverviewsCourseoverviewimageconfig COURSE_OVERVIEWS_COURSEOVERVIEWIMAGECONFIG = schema.tables.CourseOverviewsCourseoverviewimageconfig.COURSE_OVERVIEWS_COURSEOVERVIEWIMAGECONFIG;

    /**
     * The table <code>bitnami_edx.course_overviews_courseoverviewimageset</code>.
     */
    public final CourseOverviewsCourseoverviewimageset COURSE_OVERVIEWS_COURSEOVERVIEWIMAGESET = schema.tables.CourseOverviewsCourseoverviewimageset.COURSE_OVERVIEWS_COURSEOVERVIEWIMAGESET;

    /**
     * The table <code>bitnami_edx.course_overviews_courseoverviewtab</code>.
     */
    public final CourseOverviewsCourseoverviewtab COURSE_OVERVIEWS_COURSEOVERVIEWTAB = schema.tables.CourseOverviewsCourseoverviewtab.COURSE_OVERVIEWS_COURSEOVERVIEWTAB;

    /**
     * The table <code>bitnami_edx.course_structures_coursestructure</code>.
     */
    public final CourseStructuresCoursestructure COURSE_STRUCTURES_COURSESTRUCTURE = schema.tables.CourseStructuresCoursestructure.COURSE_STRUCTURES_COURSESTRUCTURE;

    /**
     * The table <code>bitnami_edx.credentials_credentialsapiconfig</code>.
     */
    public final CredentialsCredentialsapiconfig CREDENTIALS_CREDENTIALSAPICONFIG = schema.tables.CredentialsCredentialsapiconfig.CREDENTIALS_CREDENTIALSAPICONFIG;

    /**
     * The table <code>bitnami_edx.credit_creditconfig</code>.
     */
    public final CreditCreditconfig CREDIT_CREDITCONFIG = schema.tables.CreditCreditconfig.CREDIT_CREDITCONFIG;

    /**
     * The table <code>bitnami_edx.credit_creditcourse</code>.
     */
    public final CreditCreditcourse CREDIT_CREDITCOURSE = schema.tables.CreditCreditcourse.CREDIT_CREDITCOURSE;

    /**
     * The table <code>bitnami_edx.credit_crediteligibility</code>.
     */
    public final CreditCrediteligibility CREDIT_CREDITELIGIBILITY = schema.tables.CreditCrediteligibility.CREDIT_CREDITELIGIBILITY;

    /**
     * The table <code>bitnami_edx.credit_creditprovider</code>.
     */
    public final CreditCreditprovider CREDIT_CREDITPROVIDER = schema.tables.CreditCreditprovider.CREDIT_CREDITPROVIDER;

    /**
     * The table <code>bitnami_edx.credit_creditrequest</code>.
     */
    public final CreditCreditrequest CREDIT_CREDITREQUEST = schema.tables.CreditCreditrequest.CREDIT_CREDITREQUEST;

    /**
     * The table <code>bitnami_edx.credit_creditrequirement</code>.
     */
    public final CreditCreditrequirement CREDIT_CREDITREQUIREMENT = schema.tables.CreditCreditrequirement.CREDIT_CREDITREQUIREMENT;

    /**
     * The table <code>bitnami_edx.credit_creditrequirementstatus</code>.
     */
    public final CreditCreditrequirementstatus CREDIT_CREDITREQUIREMENTSTATUS = schema.tables.CreditCreditrequirementstatus.CREDIT_CREDITREQUIREMENTSTATUS;

    /**
     * The table <code>bitnami_edx.credit_historicalcreditrequest</code>.
     */
    public final CreditHistoricalcreditrequest CREDIT_HISTORICALCREDITREQUEST = schema.tables.CreditHistoricalcreditrequest.CREDIT_HISTORICALCREDITREQUEST;

    /**
     * The table <code>bitnami_edx.credit_historicalcreditrequirementstatus</code>.
     */
    public final CreditHistoricalcreditrequirementstatus CREDIT_HISTORICALCREDITREQUIREMENTSTATUS = schema.tables.CreditHistoricalcreditrequirementstatus.CREDIT_HISTORICALCREDITREQUIREMENTSTATUS;

    /**
     * The table <code>bitnami_edx.dark_lang_darklangconfig</code>.
     */
    public final DarkLangDarklangconfig DARK_LANG_DARKLANGCONFIG = schema.tables.DarkLangDarklangconfig.DARK_LANG_DARKLANGCONFIG;

    /**
     * The table <code>bitnami_edx.django_admin_log</code>.
     */
    public final DjangoAdminLog DJANGO_ADMIN_LOG = schema.tables.DjangoAdminLog.DJANGO_ADMIN_LOG;

    /**
     * The table <code>bitnami_edx.django_comment_client_permission</code>.
     */
    public final DjangoCommentClientPermission DJANGO_COMMENT_CLIENT_PERMISSION = schema.tables.DjangoCommentClientPermission.DJANGO_COMMENT_CLIENT_PERMISSION;

    /**
     * The table <code>bitnami_edx.django_comment_client_permission_roles</code>.
     */
    public final DjangoCommentClientPermissionRoles DJANGO_COMMENT_CLIENT_PERMISSION_ROLES = schema.tables.DjangoCommentClientPermissionRoles.DJANGO_COMMENT_CLIENT_PERMISSION_ROLES;

    /**
     * The table <code>bitnami_edx.django_comment_client_role</code>.
     */
    public final DjangoCommentClientRole DJANGO_COMMENT_CLIENT_ROLE = schema.tables.DjangoCommentClientRole.DJANGO_COMMENT_CLIENT_ROLE;

    /**
     * The table <code>bitnami_edx.django_comment_client_role_users</code>.
     */
    public final DjangoCommentClientRoleUsers DJANGO_COMMENT_CLIENT_ROLE_USERS = schema.tables.DjangoCommentClientRoleUsers.DJANGO_COMMENT_CLIENT_ROLE_USERS;

    /**
     * The table <code>bitnami_edx.django_content_type</code>.
     */
    public final DjangoContentType DJANGO_CONTENT_TYPE = schema.tables.DjangoContentType.DJANGO_CONTENT_TYPE;

    /**
     * The table <code>bitnami_edx.django_migrations</code>.
     */
    public final DjangoMigrations DJANGO_MIGRATIONS = schema.tables.DjangoMigrations.DJANGO_MIGRATIONS;

    /**
     * The table <code>bitnami_edx.django_openid_auth_association</code>.
     */
    public final DjangoOpenidAuthAssociation DJANGO_OPENID_AUTH_ASSOCIATION = schema.tables.DjangoOpenidAuthAssociation.DJANGO_OPENID_AUTH_ASSOCIATION;

    /**
     * The table <code>bitnami_edx.django_openid_auth_nonce</code>.
     */
    public final DjangoOpenidAuthNonce DJANGO_OPENID_AUTH_NONCE = schema.tables.DjangoOpenidAuthNonce.DJANGO_OPENID_AUTH_NONCE;

    /**
     * The table <code>bitnami_edx.django_openid_auth_useropenid</code>.
     */
    public final DjangoOpenidAuthUseropenid DJANGO_OPENID_AUTH_USEROPENID = schema.tables.DjangoOpenidAuthUseropenid.DJANGO_OPENID_AUTH_USEROPENID;

    /**
     * The table <code>bitnami_edx.django_session</code>.
     */
    public final DjangoSession DJANGO_SESSION = schema.tables.DjangoSession.DJANGO_SESSION;

    /**
     * The table <code>bitnami_edx.django_site</code>.
     */
    public final DjangoSite DJANGO_SITE = schema.tables.DjangoSite.DJANGO_SITE;

    /**
     * The table <code>bitnami_edx.djcelery_crontabschedule</code>.
     */
    public final DjceleryCrontabschedule DJCELERY_CRONTABSCHEDULE = schema.tables.DjceleryCrontabschedule.DJCELERY_CRONTABSCHEDULE;

    /**
     * The table <code>bitnami_edx.djcelery_intervalschedule</code>.
     */
    public final DjceleryIntervalschedule DJCELERY_INTERVALSCHEDULE = schema.tables.DjceleryIntervalschedule.DJCELERY_INTERVALSCHEDULE;

    /**
     * The table <code>bitnami_edx.djcelery_periodictask</code>.
     */
    public final DjceleryPeriodictask DJCELERY_PERIODICTASK = schema.tables.DjceleryPeriodictask.DJCELERY_PERIODICTASK;

    /**
     * The table <code>bitnami_edx.djcelery_periodictasks</code>.
     */
    public final DjceleryPeriodictasks DJCELERY_PERIODICTASKS = schema.tables.DjceleryPeriodictasks.DJCELERY_PERIODICTASKS;

    /**
     * The table <code>bitnami_edx.djcelery_taskstate</code>.
     */
    public final DjceleryTaskstate DJCELERY_TASKSTATE = schema.tables.DjceleryTaskstate.DJCELERY_TASKSTATE;

    /**
     * The table <code>bitnami_edx.djcelery_workerstate</code>.
     */
    public final DjceleryWorkerstate DJCELERY_WORKERSTATE = schema.tables.DjceleryWorkerstate.DJCELERY_WORKERSTATE;

    /**
     * The table <code>bitnami_edx.edxval_coursevideo</code>.
     */
    public final EdxvalCoursevideo EDXVAL_COURSEVIDEO = schema.tables.EdxvalCoursevideo.EDXVAL_COURSEVIDEO;

    /**
     * The table <code>bitnami_edx.edxval_encodedvideo</code>.
     */
    public final EdxvalEncodedvideo EDXVAL_ENCODEDVIDEO = schema.tables.EdxvalEncodedvideo.EDXVAL_ENCODEDVIDEO;

    /**
     * The table <code>bitnami_edx.edxval_profile</code>.
     */
    public final EdxvalProfile EDXVAL_PROFILE = schema.tables.EdxvalProfile.EDXVAL_PROFILE;

    /**
     * The table <code>bitnami_edx.edxval_subtitle</code>.
     */
    public final EdxvalSubtitle EDXVAL_SUBTITLE = schema.tables.EdxvalSubtitle.EDXVAL_SUBTITLE;

    /**
     * The table <code>bitnami_edx.edxval_video</code>.
     */
    public final EdxvalVideo EDXVAL_VIDEO = schema.tables.EdxvalVideo.EDXVAL_VIDEO;

    /**
     * The table <code>bitnami_edx.embargo_country</code>.
     */
    public final EmbargoCountry EMBARGO_COUNTRY = schema.tables.EmbargoCountry.EMBARGO_COUNTRY;

    /**
     * The table <code>bitnami_edx.embargo_countryaccessrule</code>.
     */
    public final EmbargoCountryaccessrule EMBARGO_COUNTRYACCESSRULE = schema.tables.EmbargoCountryaccessrule.EMBARGO_COUNTRYACCESSRULE;

    /**
     * The table <code>bitnami_edx.embargo_courseaccessrulehistory</code>.
     */
    public final EmbargoCourseaccessrulehistory EMBARGO_COURSEACCESSRULEHISTORY = schema.tables.EmbargoCourseaccessrulehistory.EMBARGO_COURSEACCESSRULEHISTORY;

    /**
     * The table <code>bitnami_edx.embargo_embargoedcourse</code>.
     */
    public final EmbargoEmbargoedcourse EMBARGO_EMBARGOEDCOURSE = schema.tables.EmbargoEmbargoedcourse.EMBARGO_EMBARGOEDCOURSE;

    /**
     * The table <code>bitnami_edx.embargo_embargoedstate</code>.
     */
    public final EmbargoEmbargoedstate EMBARGO_EMBARGOEDSTATE = schema.tables.EmbargoEmbargoedstate.EMBARGO_EMBARGOEDSTATE;

    /**
     * The table <code>bitnami_edx.embargo_ipfilter</code>.
     */
    public final EmbargoIpfilter EMBARGO_IPFILTER = schema.tables.EmbargoIpfilter.EMBARGO_IPFILTER;

    /**
     * The table <code>bitnami_edx.embargo_restrictedcourse</code>.
     */
    public final EmbargoRestrictedcourse EMBARGO_RESTRICTEDCOURSE = schema.tables.EmbargoRestrictedcourse.EMBARGO_RESTRICTEDCOURSE;

    /**
     * The table <code>bitnami_edx.external_auth_externalauthmap</code>.
     */
    public final ExternalAuthExternalauthmap EXTERNAL_AUTH_EXTERNALAUTHMAP = schema.tables.ExternalAuthExternalauthmap.EXTERNAL_AUTH_EXTERNALAUTHMAP;

    /**
     * The table <code>bitnami_edx.instructor_task_instructortask</code>.
     */
    public final InstructorTaskInstructortask INSTRUCTOR_TASK_INSTRUCTORTASK = schema.tables.InstructorTaskInstructortask.INSTRUCTOR_TASK_INSTRUCTORTASK;

    /**
     * The table <code>bitnami_edx.lms_xblock_xblockasidesconfig</code>.
     */
    public final LmsXblockXblockasidesconfig LMS_XBLOCK_XBLOCKASIDESCONFIG = schema.tables.LmsXblockXblockasidesconfig.LMS_XBLOCK_XBLOCKASIDESCONFIG;

    /**
     * The table <code>bitnami_edx.microsite_configuration_historicalmicrositeorganizationmapping</code>.
     */
    public final MicrositeConfigurationHistoricalmicrositeorganizationmapping MICROSITE_CONFIGURATION_HISTORICALMICROSITEORGANIZATIONMAPPING = schema.tables.MicrositeConfigurationHistoricalmicrositeorganizationmapping.MICROSITE_CONFIGURATION_HISTORICALMICROSITEORGANIZATIONMAPPING;

    /**
     * The table <code>bitnami_edx.microsite_configuration_historicalmicrositetemplate</code>.
     */
    public final MicrositeConfigurationHistoricalmicrositetemplate MICROSITE_CONFIGURATION_HISTORICALMICROSITETEMPLATE = schema.tables.MicrositeConfigurationHistoricalmicrositetemplate.MICROSITE_CONFIGURATION_HISTORICALMICROSITETEMPLATE;

    /**
     * The table <code>bitnami_edx.microsite_configuration_microsite</code>.
     */
    public final MicrositeConfigurationMicrosite MICROSITE_CONFIGURATION_MICROSITE = schema.tables.MicrositeConfigurationMicrosite.MICROSITE_CONFIGURATION_MICROSITE;

    /**
     * The table <code>bitnami_edx.microsite_configuration_micrositehistory</code>.
     */
    public final MicrositeConfigurationMicrositehistory MICROSITE_CONFIGURATION_MICROSITEHISTORY = schema.tables.MicrositeConfigurationMicrositehistory.MICROSITE_CONFIGURATION_MICROSITEHISTORY;

    /**
     * The table <code>bitnami_edx.microsite_configuration_micrositeorganizationmapping</code>.
     */
    public final MicrositeConfigurationMicrositeorganizationmapping MICROSITE_CONFIGURATION_MICROSITEORGANIZATIONMAPPING = schema.tables.MicrositeConfigurationMicrositeorganizationmapping.MICROSITE_CONFIGURATION_MICROSITEORGANIZATIONMAPPING;

    /**
     * The table <code>bitnami_edx.microsite_configuration_micrositetemplate</code>.
     */
    public final MicrositeConfigurationMicrositetemplate MICROSITE_CONFIGURATION_MICROSITETEMPLATE = schema.tables.MicrositeConfigurationMicrositetemplate.MICROSITE_CONFIGURATION_MICROSITETEMPLATE;

    /**
     * The table <code>bitnami_edx.milestones_coursecontentmilestone</code>.
     */
    public final MilestonesCoursecontentmilestone MILESTONES_COURSECONTENTMILESTONE = schema.tables.MilestonesCoursecontentmilestone.MILESTONES_COURSECONTENTMILESTONE;

    /**
     * The table <code>bitnami_edx.milestones_coursemilestone</code>.
     */
    public final MilestonesCoursemilestone MILESTONES_COURSEMILESTONE = schema.tables.MilestonesCoursemilestone.MILESTONES_COURSEMILESTONE;

    /**
     * The table <code>bitnami_edx.milestones_milestone</code>.
     */
    public final MilestonesMilestone MILESTONES_MILESTONE = schema.tables.MilestonesMilestone.MILESTONES_MILESTONE;

    /**
     * The table <code>bitnami_edx.milestones_milestonerelationshiptype</code>.
     */
    public final MilestonesMilestonerelationshiptype MILESTONES_MILESTONERELATIONSHIPTYPE = schema.tables.MilestonesMilestonerelationshiptype.MILESTONES_MILESTONERELATIONSHIPTYPE;

    /**
     * The table <code>bitnami_edx.milestones_usermilestone</code>.
     */
    public final MilestonesUsermilestone MILESTONES_USERMILESTONE = schema.tables.MilestonesUsermilestone.MILESTONES_USERMILESTONE;

    /**
     * The table <code>bitnami_edx.mobile_api_appversionconfig</code>.
     */
    public final MobileApiAppversionconfig MOBILE_API_APPVERSIONCONFIG = schema.tables.MobileApiAppversionconfig.MOBILE_API_APPVERSIONCONFIG;

    /**
     * The table <code>bitnami_edx.mobile_api_mobileapiconfig</code>.
     */
    public final MobileApiMobileapiconfig MOBILE_API_MOBILEAPICONFIG = schema.tables.MobileApiMobileapiconfig.MOBILE_API_MOBILEAPICONFIG;

    /**
     * The table <code>bitnami_edx.notes_note</code>.
     */
    public final NotesNote NOTES_NOTE = schema.tables.NotesNote.NOTES_NOTE;

    /**
     * The table <code>bitnami_edx.notify_notification</code>.
     */
    public final NotifyNotification NOTIFY_NOTIFICATION = schema.tables.NotifyNotification.NOTIFY_NOTIFICATION;

    /**
     * The table <code>bitnami_edx.notify_notificationtype</code>.
     */
    public final NotifyNotificationtype NOTIFY_NOTIFICATIONTYPE = schema.tables.NotifyNotificationtype.NOTIFY_NOTIFICATIONTYPE;

    /**
     * The table <code>bitnami_edx.notify_settings</code>.
     */
    public final NotifySettings NOTIFY_SETTINGS = schema.tables.NotifySettings.NOTIFY_SETTINGS;

    /**
     * The table <code>bitnami_edx.notify_subscription</code>.
     */
    public final NotifySubscription NOTIFY_SUBSCRIPTION = schema.tables.NotifySubscription.NOTIFY_SUBSCRIPTION;

    /**
     * The table <code>bitnami_edx.oauth2_accesstoken</code>.
     */
    public final Oauth2Accesstoken OAUTH2_ACCESSTOKEN = schema.tables.Oauth2Accesstoken.OAUTH2_ACCESSTOKEN;

    /**
     * The table <code>bitnami_edx.oauth2_client</code>.
     */
    public final Oauth2Client OAUTH2_CLIENT = schema.tables.Oauth2Client.OAUTH2_CLIENT;

    /**
     * The table <code>bitnami_edx.oauth2_grant</code>.
     */
    public final Oauth2Grant OAUTH2_GRANT = schema.tables.Oauth2Grant.OAUTH2_GRANT;

    /**
     * The table <code>bitnami_edx.oauth2_provider_accesstoken</code>.
     */
    public final Oauth2ProviderAccesstoken OAUTH2_PROVIDER_ACCESSTOKEN = schema.tables.Oauth2ProviderAccesstoken.OAUTH2_PROVIDER_ACCESSTOKEN;

    /**
     * The table <code>bitnami_edx.oauth2_provider_application</code>.
     */
    public final Oauth2ProviderApplication OAUTH2_PROVIDER_APPLICATION = schema.tables.Oauth2ProviderApplication.OAUTH2_PROVIDER_APPLICATION;

    /**
     * The table <code>bitnami_edx.oauth2_provider_grant</code>.
     */
    public final Oauth2ProviderGrant OAUTH2_PROVIDER_GRANT = schema.tables.Oauth2ProviderGrant.OAUTH2_PROVIDER_GRANT;

    /**
     * The table <code>bitnami_edx.oauth2_provider_refreshtoken</code>.
     */
    public final Oauth2ProviderRefreshtoken OAUTH2_PROVIDER_REFRESHTOKEN = schema.tables.Oauth2ProviderRefreshtoken.OAUTH2_PROVIDER_REFRESHTOKEN;

    /**
     * The table <code>bitnami_edx.oauth2_provider_trustedclient</code>.
     */
    public final Oauth2ProviderTrustedclient OAUTH2_PROVIDER_TRUSTEDCLIENT = schema.tables.Oauth2ProviderTrustedclient.OAUTH2_PROVIDER_TRUSTEDCLIENT;

    /**
     * The table <code>bitnami_edx.oauth2_refreshtoken</code>.
     */
    public final Oauth2Refreshtoken OAUTH2_REFRESHTOKEN = schema.tables.Oauth2Refreshtoken.OAUTH2_REFRESHTOKEN;

    /**
     * The table <code>bitnami_edx.oauth_provider_consumer</code>.
     */
    public final OauthProviderConsumer OAUTH_PROVIDER_CONSUMER = schema.tables.OauthProviderConsumer.OAUTH_PROVIDER_CONSUMER;

    /**
     * The table <code>bitnami_edx.oauth_provider_nonce</code>.
     */
    public final OauthProviderNonce OAUTH_PROVIDER_NONCE = schema.tables.OauthProviderNonce.OAUTH_PROVIDER_NONCE;

    /**
     * The table <code>bitnami_edx.oauth_provider_scope</code>.
     */
    public final OauthProviderScope OAUTH_PROVIDER_SCOPE = schema.tables.OauthProviderScope.OAUTH_PROVIDER_SCOPE;

    /**
     * The table <code>bitnami_edx.oauth_provider_token</code>.
     */
    public final OauthProviderToken OAUTH_PROVIDER_TOKEN = schema.tables.OauthProviderToken.OAUTH_PROVIDER_TOKEN;

    /**
     * The table <code>bitnami_edx.organizations_organization</code>.
     */
    public final OrganizationsOrganization ORGANIZATIONS_ORGANIZATION = schema.tables.OrganizationsOrganization.ORGANIZATIONS_ORGANIZATION;

    /**
     * The table <code>bitnami_edx.organizations_organizationcourse</code>.
     */
    public final OrganizationsOrganizationcourse ORGANIZATIONS_ORGANIZATIONCOURSE = schema.tables.OrganizationsOrganizationcourse.ORGANIZATIONS_ORGANIZATIONCOURSE;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexam</code>.
     */
    public final ProctoringProctoredexam PROCTORING_PROCTOREDEXAM = schema.tables.ProctoringProctoredexam.PROCTORING_PROCTOREDEXAM;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexamreviewpolicy</code>.
     */
    public final ProctoringProctoredexamreviewpolicy PROCTORING_PROCTOREDEXAMREVIEWPOLICY = schema.tables.ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexamreviewpolicyhistory</code>.
     */
    public final ProctoringProctoredexamreviewpolicyhistory PROCTORING_PROCTOREDEXAMREVIEWPOLICYHISTORY = schema.tables.ProctoringProctoredexamreviewpolicyhistory.PROCTORING_PROCTOREDEXAMREVIEWPOLICYHISTORY;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexamsoftwaresecurereview</code>.
     */
    public final ProctoringProctoredexamsoftwaresecurereview PROCTORING_PROCTOREDEXAMSOFTWARESECUREREVIEW = schema.tables.ProctoringProctoredexamsoftwaresecurereview.PROCTORING_PROCTOREDEXAMSOFTWARESECUREREVIEW;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexamsoftwaresecurereviewhistory</code>.
     */
    public final ProctoringProctoredexamsoftwaresecurereviewhistory PROCTORING_PROCTOREDEXAMSOFTWARESECUREREVIEWHISTORY = schema.tables.ProctoringProctoredexamsoftwaresecurereviewhistory.PROCTORING_PROCTOREDEXAMSOFTWARESECUREREVIEWHISTORY;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexamstudentallowance</code>.
     */
    public final ProctoringProctoredexamstudentallowance PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCE = schema.tables.ProctoringProctoredexamstudentallowance.PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCE;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexamstudentallowancehistory</code>.
     */
    public final ProctoringProctoredexamstudentallowancehistory PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCEHISTORY = schema.tables.ProctoringProctoredexamstudentallowancehistory.PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCEHISTORY;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexamstudentattempt</code>.
     */
    public final ProctoringProctoredexamstudentattempt PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT = schema.tables.ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexamstudentattemptcomment</code>.
     */
    public final ProctoringProctoredexamstudentattemptcomment PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTCOMMENT = schema.tables.ProctoringProctoredexamstudentattemptcomment.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTCOMMENT;

    /**
     * The table <code>bitnami_edx.proctoring_proctoredexamstudentattempthistory</code>.
     */
    public final ProctoringProctoredexamstudentattempthistory PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTHISTORY = schema.tables.ProctoringProctoredexamstudentattempthistory.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTHISTORY;

    /**
     * The table <code>bitnami_edx.programs_programsapiconfig</code>.
     */
    public final ProgramsProgramsapiconfig PROGRAMS_PROGRAMSAPICONFIG = schema.tables.ProgramsProgramsapiconfig.PROGRAMS_PROGRAMSAPICONFIG;

    /**
     * The table <code>bitnami_edx.rss_proxy_whitelistedrssurl</code>.
     */
    public final RssProxyWhitelistedrssurl RSS_PROXY_WHITELISTEDRSSURL = schema.tables.RssProxyWhitelistedrssurl.RSS_PROXY_WHITELISTEDRSSURL;

    /**
     * The table <code>bitnami_edx.self_paced_selfpacedconfiguration</code>.
     */
    public final SelfPacedSelfpacedconfiguration SELF_PACED_SELFPACEDCONFIGURATION = schema.tables.SelfPacedSelfpacedconfiguration.SELF_PACED_SELFPACEDCONFIGURATION;

    /**
     * The table <code>bitnami_edx.shoppingcart_certificateitem</code>.
     */
    public final ShoppingcartCertificateitem SHOPPINGCART_CERTIFICATEITEM = schema.tables.ShoppingcartCertificateitem.SHOPPINGCART_CERTIFICATEITEM;

    /**
     * The table <code>bitnami_edx.shoppingcart_coupon</code>.
     */
    public final ShoppingcartCoupon SHOPPINGCART_COUPON = schema.tables.ShoppingcartCoupon.SHOPPINGCART_COUPON;

    /**
     * The table <code>bitnami_edx.shoppingcart_couponredemption</code>.
     */
    public final ShoppingcartCouponredemption SHOPPINGCART_COUPONREDEMPTION = schema.tables.ShoppingcartCouponredemption.SHOPPINGCART_COUPONREDEMPTION;

    /**
     * The table <code>bitnami_edx.shoppingcart_courseregcodeitem</code>.
     */
    public final ShoppingcartCourseregcodeitem SHOPPINGCART_COURSEREGCODEITEM = schema.tables.ShoppingcartCourseregcodeitem.SHOPPINGCART_COURSEREGCODEITEM;

    /**
     * The table <code>bitnami_edx.shoppingcart_courseregcodeitemannotation</code>.
     */
    public final ShoppingcartCourseregcodeitemannotation SHOPPINGCART_COURSEREGCODEITEMANNOTATION = schema.tables.ShoppingcartCourseregcodeitemannotation.SHOPPINGCART_COURSEREGCODEITEMANNOTATION;

    /**
     * The table <code>bitnami_edx.shoppingcart_courseregistrationcode</code>.
     */
    public final ShoppingcartCourseregistrationcode SHOPPINGCART_COURSEREGISTRATIONCODE = schema.tables.ShoppingcartCourseregistrationcode.SHOPPINGCART_COURSEREGISTRATIONCODE;

    /**
     * The table <code>bitnami_edx.shoppingcart_courseregistrationcodeinvoiceitem</code>.
     */
    public final ShoppingcartCourseregistrationcodeinvoiceitem SHOPPINGCART_COURSEREGISTRATIONCODEINVOICEITEM = schema.tables.ShoppingcartCourseregistrationcodeinvoiceitem.SHOPPINGCART_COURSEREGISTRATIONCODEINVOICEITEM;

    /**
     * The table <code>bitnami_edx.shoppingcart_donation</code>.
     */
    public final ShoppingcartDonation SHOPPINGCART_DONATION = schema.tables.ShoppingcartDonation.SHOPPINGCART_DONATION;

    /**
     * The table <code>bitnami_edx.shoppingcart_donationconfiguration</code>.
     */
    public final ShoppingcartDonationconfiguration SHOPPINGCART_DONATIONCONFIGURATION = schema.tables.ShoppingcartDonationconfiguration.SHOPPINGCART_DONATIONCONFIGURATION;

    /**
     * The table <code>bitnami_edx.shoppingcart_invoice</code>.
     */
    public final ShoppingcartInvoice SHOPPINGCART_INVOICE = schema.tables.ShoppingcartInvoice.SHOPPINGCART_INVOICE;

    /**
     * The table <code>bitnami_edx.shoppingcart_invoicehistory</code>.
     */
    public final ShoppingcartInvoicehistory SHOPPINGCART_INVOICEHISTORY = schema.tables.ShoppingcartInvoicehistory.SHOPPINGCART_INVOICEHISTORY;

    /**
     * The table <code>bitnami_edx.shoppingcart_invoiceitem</code>.
     */
    public final ShoppingcartInvoiceitem SHOPPINGCART_INVOICEITEM = schema.tables.ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM;

    /**
     * The table <code>bitnami_edx.shoppingcart_invoicetransaction</code>.
     */
    public final ShoppingcartInvoicetransaction SHOPPINGCART_INVOICETRANSACTION = schema.tables.ShoppingcartInvoicetransaction.SHOPPINGCART_INVOICETRANSACTION;

    /**
     * The table <code>bitnami_edx.shoppingcart_order</code>.
     */
    public final ShoppingcartOrder SHOPPINGCART_ORDER = schema.tables.ShoppingcartOrder.SHOPPINGCART_ORDER;

    /**
     * The table <code>bitnami_edx.shoppingcart_orderitem</code>.
     */
    public final ShoppingcartOrderitem SHOPPINGCART_ORDERITEM = schema.tables.ShoppingcartOrderitem.SHOPPINGCART_ORDERITEM;

    /**
     * The table <code>bitnami_edx.shoppingcart_paidcourseregistration</code>.
     */
    public final ShoppingcartPaidcourseregistration SHOPPINGCART_PAIDCOURSEREGISTRATION = schema.tables.ShoppingcartPaidcourseregistration.SHOPPINGCART_PAIDCOURSEREGISTRATION;

    /**
     * The table <code>bitnami_edx.shoppingcart_paidcourseregistrationannotation</code>.
     */
    public final ShoppingcartPaidcourseregistrationannotation SHOPPINGCART_PAIDCOURSEREGISTRATIONANNOTATION = schema.tables.ShoppingcartPaidcourseregistrationannotation.SHOPPINGCART_PAIDCOURSEREGISTRATIONANNOTATION;

    /**
     * The table <code>bitnami_edx.shoppingcart_registrationcoderedemption</code>.
     */
    public final ShoppingcartRegistrationcoderedemption SHOPPINGCART_REGISTRATIONCODEREDEMPTION = schema.tables.ShoppingcartRegistrationcoderedemption.SHOPPINGCART_REGISTRATIONCODEREDEMPTION;

    /**
     * The table <code>bitnami_edx.site_configuration_siteconfiguration</code>.
     */
    public final SiteConfigurationSiteconfiguration SITE_CONFIGURATION_SITECONFIGURATION = schema.tables.SiteConfigurationSiteconfiguration.SITE_CONFIGURATION_SITECONFIGURATION;

    /**
     * The table <code>bitnami_edx.site_configuration_siteconfigurationhistory</code>.
     */
    public final SiteConfigurationSiteconfigurationhistory SITE_CONFIGURATION_SITECONFIGURATIONHISTORY = schema.tables.SiteConfigurationSiteconfigurationhistory.SITE_CONFIGURATION_SITECONFIGURATIONHISTORY;

    /**
     * The table <code>bitnami_edx.social_auth_association</code>.
     */
    public final SocialAuthAssociation SOCIAL_AUTH_ASSOCIATION = schema.tables.SocialAuthAssociation.SOCIAL_AUTH_ASSOCIATION;

    /**
     * The table <code>bitnami_edx.social_auth_code</code>.
     */
    public final SocialAuthCode SOCIAL_AUTH_CODE = schema.tables.SocialAuthCode.SOCIAL_AUTH_CODE;

    /**
     * The table <code>bitnami_edx.social_auth_nonce</code>.
     */
    public final SocialAuthNonce SOCIAL_AUTH_NONCE = schema.tables.SocialAuthNonce.SOCIAL_AUTH_NONCE;

    /**
     * The table <code>bitnami_edx.social_auth_usersocialauth</code>.
     */
    public final SocialAuthUsersocialauth SOCIAL_AUTH_USERSOCIALAUTH = schema.tables.SocialAuthUsersocialauth.SOCIAL_AUTH_USERSOCIALAUTH;

    /**
     * The table <code>bitnami_edx.splash_splashconfig</code>.
     */
    public final SplashSplashconfig SPLASH_SPLASHCONFIG = schema.tables.SplashSplashconfig.SPLASH_SPLASHCONFIG;

    /**
     * The table <code>bitnami_edx.static_replace_assetbaseurlconfig</code>.
     */
    public final StaticReplaceAssetbaseurlconfig STATIC_REPLACE_ASSETBASEURLCONFIG = schema.tables.StaticReplaceAssetbaseurlconfig.STATIC_REPLACE_ASSETBASEURLCONFIG;

    /**
     * The table <code>bitnami_edx.static_replace_assetexcludedextensionsconfig</code>.
     */
    public final StaticReplaceAssetexcludedextensionsconfig STATIC_REPLACE_ASSETEXCLUDEDEXTENSIONSCONFIG = schema.tables.StaticReplaceAssetexcludedextensionsconfig.STATIC_REPLACE_ASSETEXCLUDEDEXTENSIONSCONFIG;

    /**
     * The table <code>bitnami_edx.status_coursemessage</code>.
     */
    public final StatusCoursemessage STATUS_COURSEMESSAGE = schema.tables.StatusCoursemessage.STATUS_COURSEMESSAGE;

    /**
     * The table <code>bitnami_edx.status_globalstatusmessage</code>.
     */
    public final StatusGlobalstatusmessage STATUS_GLOBALSTATUSMESSAGE = schema.tables.StatusGlobalstatusmessage.STATUS_GLOBALSTATUSMESSAGE;

    /**
     * The table <code>bitnami_edx.student_anonymoususerid</code>.
     */
    public final StudentAnonymoususerid STUDENT_ANONYMOUSUSERID = schema.tables.StudentAnonymoususerid.STUDENT_ANONYMOUSUSERID;

    /**
     * The table <code>bitnami_edx.student_courseaccessrole</code>.
     */
    public final StudentCourseaccessrole STUDENT_COURSEACCESSROLE = schema.tables.StudentCourseaccessrole.STUDENT_COURSEACCESSROLE;

    /**
     * The table <code>bitnami_edx.student_courseenrollment</code>.
     */
    public final StudentCourseenrollment STUDENT_COURSEENROLLMENT = schema.tables.StudentCourseenrollment.STUDENT_COURSEENROLLMENT;

    /**
     * The table <code>bitnami_edx.student_courseenrollmentallowed</code>.
     */
    public final StudentCourseenrollmentallowed STUDENT_COURSEENROLLMENTALLOWED = schema.tables.StudentCourseenrollmentallowed.STUDENT_COURSEENROLLMENTALLOWED;

    /**
     * The table <code>bitnami_edx.student_courseenrollmentattribute</code>.
     */
    public final StudentCourseenrollmentattribute STUDENT_COURSEENROLLMENTATTRIBUTE = schema.tables.StudentCourseenrollmentattribute.STUDENT_COURSEENROLLMENTATTRIBUTE;

    /**
     * The table <code>bitnami_edx.student_dashboardconfiguration</code>.
     */
    public final StudentDashboardconfiguration STUDENT_DASHBOARDCONFIGURATION = schema.tables.StudentDashboardconfiguration.STUDENT_DASHBOARDCONFIGURATION;

    /**
     * The table <code>bitnami_edx.student_enrollmentrefundconfiguration</code>.
     */
    public final StudentEnrollmentrefundconfiguration STUDENT_ENROLLMENTREFUNDCONFIGURATION = schema.tables.StudentEnrollmentrefundconfiguration.STUDENT_ENROLLMENTREFUNDCONFIGURATION;

    /**
     * The table <code>bitnami_edx.student_entranceexamconfiguration</code>.
     */
    public final StudentEntranceexamconfiguration STUDENT_ENTRANCEEXAMCONFIGURATION = schema.tables.StudentEntranceexamconfiguration.STUDENT_ENTRANCEEXAMCONFIGURATION;

    /**
     * The table <code>bitnami_edx.student_historicalcourseenrollment</code>.
     */
    public final StudentHistoricalcourseenrollment STUDENT_HISTORICALCOURSEENROLLMENT = schema.tables.StudentHistoricalcourseenrollment.STUDENT_HISTORICALCOURSEENROLLMENT;

    /**
     * The table <code>bitnami_edx.student_languageproficiency</code>.
     */
    public final StudentLanguageproficiency STUDENT_LANGUAGEPROFICIENCY = schema.tables.StudentLanguageproficiency.STUDENT_LANGUAGEPROFICIENCY;

    /**
     * The table <code>bitnami_edx.student_linkedinaddtoprofileconfiguration</code>.
     */
    public final StudentLinkedinaddtoprofileconfiguration STUDENT_LINKEDINADDTOPROFILECONFIGURATION = schema.tables.StudentLinkedinaddtoprofileconfiguration.STUDENT_LINKEDINADDTOPROFILECONFIGURATION;

    /**
     * The table <code>bitnami_edx.student_loginfailures</code>.
     */
    public final StudentLoginfailures STUDENT_LOGINFAILURES = schema.tables.StudentLoginfailures.STUDENT_LOGINFAILURES;

    /**
     * The table <code>bitnami_edx.student_manualenrollmentaudit</code>.
     */
    public final StudentManualenrollmentaudit STUDENT_MANUALENROLLMENTAUDIT = schema.tables.StudentManualenrollmentaudit.STUDENT_MANUALENROLLMENTAUDIT;

    /**
     * The table <code>bitnami_edx.student_passwordhistory</code>.
     */
    public final StudentPasswordhistory STUDENT_PASSWORDHISTORY = schema.tables.StudentPasswordhistory.STUDENT_PASSWORDHISTORY;

    /**
     * The table <code>bitnami_edx.student_pendingemailchange</code>.
     */
    public final StudentPendingemailchange STUDENT_PENDINGEMAILCHANGE = schema.tables.StudentPendingemailchange.STUDENT_PENDINGEMAILCHANGE;

    /**
     * The table <code>bitnami_edx.student_pendingnamechange</code>.
     */
    public final StudentPendingnamechange STUDENT_PENDINGNAMECHANGE = schema.tables.StudentPendingnamechange.STUDENT_PENDINGNAMECHANGE;

    /**
     * The table <code>bitnami_edx.student_usersignupsource</code>.
     */
    public final StudentUsersignupsource STUDENT_USERSIGNUPSOURCE = schema.tables.StudentUsersignupsource.STUDENT_USERSIGNUPSOURCE;

    /**
     * The table <code>bitnami_edx.student_userstanding</code>.
     */
    public final StudentUserstanding STUDENT_USERSTANDING = schema.tables.StudentUserstanding.STUDENT_USERSTANDING;

    /**
     * The table <code>bitnami_edx.student_usertestgroup</code>.
     */
    public final StudentUsertestgroup STUDENT_USERTESTGROUP = schema.tables.StudentUsertestgroup.STUDENT_USERTESTGROUP;

    /**
     * The table <code>bitnami_edx.student_usertestgroup_users</code>.
     */
    public final StudentUsertestgroupUsers STUDENT_USERTESTGROUP_USERS = schema.tables.StudentUsertestgroupUsers.STUDENT_USERTESTGROUP_USERS;

    /**
     * The table <code>bitnami_edx.submissions_score</code>.
     */
    public final SubmissionsScore SUBMISSIONS_SCORE = schema.tables.SubmissionsScore.SUBMISSIONS_SCORE;

    /**
     * The table <code>bitnami_edx.submissions_scoreannotation</code>.
     */
    public final SubmissionsScoreannotation SUBMISSIONS_SCOREANNOTATION = schema.tables.SubmissionsScoreannotation.SUBMISSIONS_SCOREANNOTATION;

    /**
     * The table <code>bitnami_edx.submissions_scoresummary</code>.
     */
    public final SubmissionsScoresummary SUBMISSIONS_SCORESUMMARY = schema.tables.SubmissionsScoresummary.SUBMISSIONS_SCORESUMMARY;

    /**
     * The table <code>bitnami_edx.submissions_studentitem</code>.
     */
    public final SubmissionsStudentitem SUBMISSIONS_STUDENTITEM = schema.tables.SubmissionsStudentitem.SUBMISSIONS_STUDENTITEM;

    /**
     * The table <code>bitnami_edx.submissions_submission</code>.
     */
    public final SubmissionsSubmission SUBMISSIONS_SUBMISSION = schema.tables.SubmissionsSubmission.SUBMISSIONS_SUBMISSION;

    /**
     * The table <code>bitnami_edx.survey_surveyanswer</code>.
     */
    public final SurveySurveyanswer SURVEY_SURVEYANSWER = schema.tables.SurveySurveyanswer.SURVEY_SURVEYANSWER;

    /**
     * The table <code>bitnami_edx.survey_surveyform</code>.
     */
    public final SurveySurveyform SURVEY_SURVEYFORM = schema.tables.SurveySurveyform.SURVEY_SURVEYFORM;

    /**
     * The table <code>bitnami_edx.teams_courseteam</code>.
     */
    public final TeamsCourseteam TEAMS_COURSETEAM = schema.tables.TeamsCourseteam.TEAMS_COURSETEAM;

    /**
     * The table <code>bitnami_edx.teams_courseteammembership</code>.
     */
    public final TeamsCourseteammembership TEAMS_COURSETEAMMEMBERSHIP = schema.tables.TeamsCourseteammembership.TEAMS_COURSETEAMMEMBERSHIP;

    /**
     * The table <code>bitnami_edx.third_party_auth_ltiproviderconfig</code>.
     */
    public final ThirdPartyAuthLtiproviderconfig THIRD_PARTY_AUTH_LTIPROVIDERCONFIG = schema.tables.ThirdPartyAuthLtiproviderconfig.THIRD_PARTY_AUTH_LTIPROVIDERCONFIG;

    /**
     * The table <code>bitnami_edx.third_party_auth_oauth2providerconfig</code>.
     */
    public final ThirdPartyAuthOauth2providerconfig THIRD_PARTY_AUTH_OAUTH2PROVIDERCONFIG = schema.tables.ThirdPartyAuthOauth2providerconfig.THIRD_PARTY_AUTH_OAUTH2PROVIDERCONFIG;

    /**
     * The table <code>bitnami_edx.third_party_auth_providerapipermissions</code>.
     */
    public final ThirdPartyAuthProviderapipermissions THIRD_PARTY_AUTH_PROVIDERAPIPERMISSIONS = schema.tables.ThirdPartyAuthProviderapipermissions.THIRD_PARTY_AUTH_PROVIDERAPIPERMISSIONS;

    /**
     * The table <code>bitnami_edx.third_party_auth_samlconfiguration</code>.
     */
    public final ThirdPartyAuthSamlconfiguration THIRD_PARTY_AUTH_SAMLCONFIGURATION = schema.tables.ThirdPartyAuthSamlconfiguration.THIRD_PARTY_AUTH_SAMLCONFIGURATION;

    /**
     * The table <code>bitnami_edx.third_party_auth_samlproviderconfig</code>.
     */
    public final ThirdPartyAuthSamlproviderconfig THIRD_PARTY_AUTH_SAMLPROVIDERCONFIG = schema.tables.ThirdPartyAuthSamlproviderconfig.THIRD_PARTY_AUTH_SAMLPROVIDERCONFIG;

    /**
     * The table <code>bitnami_edx.third_party_auth_samlproviderdata</code>.
     */
    public final ThirdPartyAuthSamlproviderdata THIRD_PARTY_AUTH_SAMLPROVIDERDATA = schema.tables.ThirdPartyAuthSamlproviderdata.THIRD_PARTY_AUTH_SAMLPROVIDERDATA;

    /**
     * The table <code>bitnami_edx.thumbnail_kvstore</code>.
     */
    public final ThumbnailKvstore THUMBNAIL_KVSTORE = schema.tables.ThumbnailKvstore.THUMBNAIL_KVSTORE;

    /**
     * The table <code>bitnami_edx.track_trackinglog</code>.
     */
    public final TrackTrackinglog TRACK_TRACKINGLOG = schema.tables.TrackTrackinglog.TRACK_TRACKINGLOG;

    /**
     * The table <code>bitnami_edx.user_api_usercoursetag</code>.
     */
    public final UserApiUsercoursetag USER_API_USERCOURSETAG = schema.tables.UserApiUsercoursetag.USER_API_USERCOURSETAG;

    /**
     * The table <code>bitnami_edx.user_api_userorgtag</code>.
     */
    public final UserApiUserorgtag USER_API_USERORGTAG = schema.tables.UserApiUserorgtag.USER_API_USERORGTAG;

    /**
     * The table <code>bitnami_edx.user_api_userpreference</code>.
     */
    public final UserApiUserpreference USER_API_USERPREFERENCE = schema.tables.UserApiUserpreference.USER_API_USERPREFERENCE;

    /**
     * The table <code>bitnami_edx.util_ratelimitconfiguration</code>.
     */
    public final UtilRatelimitconfiguration UTIL_RATELIMITCONFIGURATION = schema.tables.UtilRatelimitconfiguration.UTIL_RATELIMITCONFIGURATION;

    /**
     * The table <code>bitnami_edx.verified_track_content_verifiedtrackcohortedcourse</code>.
     */
    public final VerifiedTrackContentVerifiedtrackcohortedcourse VERIFIED_TRACK_CONTENT_VERIFIEDTRACKCOHORTEDCOURSE = schema.tables.VerifiedTrackContentVerifiedtrackcohortedcourse.VERIFIED_TRACK_CONTENT_VERIFIEDTRACKCOHORTEDCOURSE;

    /**
     * The table <code>bitnami_edx.verify_student_historicalverificationdeadline</code>.
     */
    public final VerifyStudentHistoricalverificationdeadline VERIFY_STUDENT_HISTORICALVERIFICATIONDEADLINE = schema.tables.VerifyStudentHistoricalverificationdeadline.VERIFY_STUDENT_HISTORICALVERIFICATIONDEADLINE;

    /**
     * The table <code>bitnami_edx.verify_student_icrvstatusemailsconfiguration</code>.
     */
    public final VerifyStudentIcrvstatusemailsconfiguration VERIFY_STUDENT_ICRVSTATUSEMAILSCONFIGURATION = schema.tables.VerifyStudentIcrvstatusemailsconfiguration.VERIFY_STUDENT_ICRVSTATUSEMAILSCONFIGURATION;

    /**
     * The table <code>bitnami_edx.verify_student_incoursereverificationconfiguration</code>.
     */
    public final VerifyStudentIncoursereverificationconfiguration VERIFY_STUDENT_INCOURSEREVERIFICATIONCONFIGURATION = schema.tables.VerifyStudentIncoursereverificationconfiguration.VERIFY_STUDENT_INCOURSEREVERIFICATIONCONFIGURATION;

    /**
     * The table <code>bitnami_edx.verify_student_skippedreverification</code>.
     */
    public final VerifyStudentSkippedreverification VERIFY_STUDENT_SKIPPEDREVERIFICATION = schema.tables.VerifyStudentSkippedreverification.VERIFY_STUDENT_SKIPPEDREVERIFICATION;

    /**
     * The table <code>bitnami_edx.verify_student_softwaresecurephotoverification</code>.
     */
    public final VerifyStudentSoftwaresecurephotoverification VERIFY_STUDENT_SOFTWARESECUREPHOTOVERIFICATION = schema.tables.VerifyStudentSoftwaresecurephotoverification.VERIFY_STUDENT_SOFTWARESECUREPHOTOVERIFICATION;

    /**
     * The table <code>bitnami_edx.verify_student_verificationcheckpoint</code>.
     */
    public final VerifyStudentVerificationcheckpoint VERIFY_STUDENT_VERIFICATIONCHECKPOINT = schema.tables.VerifyStudentVerificationcheckpoint.VERIFY_STUDENT_VERIFICATIONCHECKPOINT;

    /**
     * The table <code>bitnami_edx.verify_student_verificationcheckpoint_photo_verification</code>.
     */
    public final VerifyStudentVerificationcheckpointPhotoVerification VERIFY_STUDENT_VERIFICATIONCHECKPOINT_PHOTO_VERIFICATION = schema.tables.VerifyStudentVerificationcheckpointPhotoVerification.VERIFY_STUDENT_VERIFICATIONCHECKPOINT_PHOTO_VERIFICATION;

    /**
     * The table <code>bitnami_edx.verify_student_verificationdeadline</code>.
     */
    public final VerifyStudentVerificationdeadline VERIFY_STUDENT_VERIFICATIONDEADLINE = schema.tables.VerifyStudentVerificationdeadline.VERIFY_STUDENT_VERIFICATIONDEADLINE;

    /**
     * The table <code>bitnami_edx.verify_student_verificationstatus</code>.
     */
    public final VerifyStudentVerificationstatus VERIFY_STUDENT_VERIFICATIONSTATUS = schema.tables.VerifyStudentVerificationstatus.VERIFY_STUDENT_VERIFICATIONSTATUS;

    /**
     * The table <code>bitnami_edx.wiki_article</code>.
     */
    public final WikiArticle WIKI_ARTICLE = schema.tables.WikiArticle.WIKI_ARTICLE;

    /**
     * The table <code>bitnami_edx.wiki_articleforobject</code>.
     */
    public final WikiArticleforobject WIKI_ARTICLEFOROBJECT = schema.tables.WikiArticleforobject.WIKI_ARTICLEFOROBJECT;

    /**
     * The table <code>bitnami_edx.wiki_articleplugin</code>.
     */
    public final WikiArticleplugin WIKI_ARTICLEPLUGIN = schema.tables.WikiArticleplugin.WIKI_ARTICLEPLUGIN;

    /**
     * The table <code>bitnami_edx.wiki_articlerevision</code>.
     */
    public final WikiArticlerevision WIKI_ARTICLEREVISION = schema.tables.WikiArticlerevision.WIKI_ARTICLEREVISION;

    /**
     * The table <code>bitnami_edx.wiki_attachment</code>.
     */
    public final WikiAttachment WIKI_ATTACHMENT = schema.tables.WikiAttachment.WIKI_ATTACHMENT;

    /**
     * The table <code>bitnami_edx.wiki_attachmentrevision</code>.
     */
    public final WikiAttachmentrevision WIKI_ATTACHMENTREVISION = schema.tables.WikiAttachmentrevision.WIKI_ATTACHMENTREVISION;

    /**
     * The table <code>bitnami_edx.wiki_image</code>.
     */
    public final WikiImage WIKI_IMAGE = schema.tables.WikiImage.WIKI_IMAGE;

    /**
     * The table <code>bitnami_edx.wiki_imagerevision</code>.
     */
    public final WikiImagerevision WIKI_IMAGEREVISION = schema.tables.WikiImagerevision.WIKI_IMAGEREVISION;

    /**
     * The table <code>bitnami_edx.wiki_reusableplugin</code>.
     */
    public final WikiReusableplugin WIKI_REUSABLEPLUGIN = schema.tables.WikiReusableplugin.WIKI_REUSABLEPLUGIN;

    /**
     * The table <code>bitnami_edx.wiki_reusableplugin_articles</code>.
     */
    public final WikiReusablepluginArticles WIKI_REUSABLEPLUGIN_ARTICLES = schema.tables.WikiReusablepluginArticles.WIKI_REUSABLEPLUGIN_ARTICLES;

    /**
     * The table <code>bitnami_edx.wiki_revisionplugin</code>.
     */
    public final WikiRevisionplugin WIKI_REVISIONPLUGIN = schema.tables.WikiRevisionplugin.WIKI_REVISIONPLUGIN;

    /**
     * The table <code>bitnami_edx.wiki_revisionpluginrevision</code>.
     */
    public final WikiRevisionpluginrevision WIKI_REVISIONPLUGINREVISION = schema.tables.WikiRevisionpluginrevision.WIKI_REVISIONPLUGINREVISION;

    /**
     * The table <code>bitnami_edx.wiki_simpleplugin</code>.
     */
    public final WikiSimpleplugin WIKI_SIMPLEPLUGIN = schema.tables.WikiSimpleplugin.WIKI_SIMPLEPLUGIN;

    /**
     * The table <code>bitnami_edx.wiki_urlpath</code>.
     */
    public final WikiUrlpath WIKI_URLPATH = schema.tables.WikiUrlpath.WIKI_URLPATH;

    /**
     * The table <code>bitnami_edx.workflow_assessmentworkflow</code>.
     */
    public final WorkflowAssessmentworkflow WORKFLOW_ASSESSMENTWORKFLOW = schema.tables.WorkflowAssessmentworkflow.WORKFLOW_ASSESSMENTWORKFLOW;

    /**
     * The table <code>bitnami_edx.workflow_assessmentworkflowcancellation</code>.
     */
    public final WorkflowAssessmentworkflowcancellation WORKFLOW_ASSESSMENTWORKFLOWCANCELLATION = schema.tables.WorkflowAssessmentworkflowcancellation.WORKFLOW_ASSESSMENTWORKFLOWCANCELLATION;

    /**
     * The table <code>bitnami_edx.workflow_assessmentworkflowstep</code>.
     */
    public final WorkflowAssessmentworkflowstep WORKFLOW_ASSESSMENTWORKFLOWSTEP = schema.tables.WorkflowAssessmentworkflowstep.WORKFLOW_ASSESSMENTWORKFLOWSTEP;

    /**
     * The table <code>bitnami_edx.xblock_config_studioconfig</code>.
     */
    public final XblockConfigStudioconfig XBLOCK_CONFIG_STUDIOCONFIG = schema.tables.XblockConfigStudioconfig.XBLOCK_CONFIG_STUDIOCONFIG;

    /**
     * The table <code>bitnami_edx.xblock_django_xblockdisableconfig</code>.
     */
    public final XblockDjangoXblockdisableconfig XBLOCK_DJANGO_XBLOCKDISABLECONFIG = schema.tables.XblockDjangoXblockdisableconfig.XBLOCK_DJANGO_XBLOCKDISABLECONFIG;

    /**
     * No further instances allowed
     */
    private BitnamiEdx() {
        super("bitnami_edx", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            ApiAdminApiaccessconfig.API_ADMIN_APIACCESSCONFIG,
            ApiAdminApiaccessrequest.API_ADMIN_APIACCESSREQUEST,
            ApiAdminHistoricalapiaccessrequest.API_ADMIN_HISTORICALAPIACCESSREQUEST,
            AssessmentAiclassifier.ASSESSMENT_AICLASSIFIER,
            AssessmentAiclassifierset.ASSESSMENT_AICLASSIFIERSET,
            AssessmentAigradingworkflow.ASSESSMENT_AIGRADINGWORKFLOW,
            AssessmentAitrainingworkflow.ASSESSMENT_AITRAININGWORKFLOW,
            AssessmentAitrainingworkflowTrainingExamples.ASSESSMENT_AITRAININGWORKFLOW_TRAINING_EXAMPLES,
            AssessmentAssessment.ASSESSMENT_ASSESSMENT,
            AssessmentAssessmentfeedback.ASSESSMENT_ASSESSMENTFEEDBACK,
            AssessmentAssessmentfeedbackoption.ASSESSMENT_ASSESSMENTFEEDBACKOPTION,
            AssessmentAssessmentfeedbackAssessments.ASSESSMENT_ASSESSMENTFEEDBACK_ASSESSMENTS,
            AssessmentAssessmentfeedbackOptions.ASSESSMENT_ASSESSMENTFEEDBACK_OPTIONS,
            AssessmentAssessmentpart.ASSESSMENT_ASSESSMENTPART,
            AssessmentCriterion.ASSESSMENT_CRITERION,
            AssessmentCriterionoption.ASSESSMENT_CRITERIONOPTION,
            AssessmentPeerworkflow.ASSESSMENT_PEERWORKFLOW,
            AssessmentPeerworkflowitem.ASSESSMENT_PEERWORKFLOWITEM,
            AssessmentRubric.ASSESSMENT_RUBRIC,
            AssessmentStaffworkflow.ASSESSMENT_STAFFWORKFLOW,
            AssessmentStudenttrainingworkflow.ASSESSMENT_STUDENTTRAININGWORKFLOW,
            AssessmentStudenttrainingworkflowitem.ASSESSMENT_STUDENTTRAININGWORKFLOWITEM,
            AssessmentTrainingexample.ASSESSMENT_TRAININGEXAMPLE,
            AssessmentTrainingexampleOptionsSelected.ASSESSMENT_TRAININGEXAMPLE_OPTIONS_SELECTED,
            AuthGroup.AUTH_GROUP,
            AuthGroupPermissions.AUTH_GROUP_PERMISSIONS,
            AuthPermission.AUTH_PERMISSION,
            AuthRegistration.AUTH_REGISTRATION,
            AuthUser.AUTH_USER,
            AuthUserprofile.AUTH_USERPROFILE,
            AuthUserGroups.AUTH_USER_GROUPS,
            AuthUserTest.AUTH_USER_TEST,
            AuthUserUserPermissions.AUTH_USER_USER_PERMISSIONS,
            BadgesBadgeassertion.BADGES_BADGEASSERTION,
            BadgesBadgeclass.BADGES_BADGECLASS,
            BadgesCoursecompleteimageconfiguration.BADGES_COURSECOMPLETEIMAGECONFIGURATION,
            BadgesCourseeventbadgesconfiguration.BADGES_COURSEEVENTBADGESCONFIGURATION,
            BookmarksBookmark.BOOKMARKS_BOOKMARK,
            BookmarksXblockcache.BOOKMARKS_XBLOCKCACHE,
            BrandingBrandingapiconfig.BRANDING_BRANDINGAPICONFIG,
            BrandingBrandinginfoconfig.BRANDING_BRANDINGINFOCONFIG,
            BulkEmailCourseauthorization.BULK_EMAIL_COURSEAUTHORIZATION,
            BulkEmailCourseemail.BULK_EMAIL_COURSEEMAIL,
            BulkEmailCourseemailtemplate.BULK_EMAIL_COURSEEMAILTEMPLATE,
            BulkEmailOptout.BULK_EMAIL_OPTOUT,
            CeleryTaskmeta.CELERY_TASKMETA,
            CeleryTasksetmeta.CELERY_TASKSETMETA,
            CertificatesCertificategenerationconfiguration.CERTIFICATES_CERTIFICATEGENERATIONCONFIGURATION,
            CertificatesCertificategenerationcoursesetting.CERTIFICATES_CERTIFICATEGENERATIONCOURSESETTING,
            CertificatesCertificategenerationhistory.CERTIFICATES_CERTIFICATEGENERATIONHISTORY,
            CertificatesCertificatehtmlviewconfiguration.CERTIFICATES_CERTIFICATEHTMLVIEWCONFIGURATION,
            CertificatesCertificateinvalidation.CERTIFICATES_CERTIFICATEINVALIDATION,
            CertificatesCertificatetemplate.CERTIFICATES_CERTIFICATETEMPLATE,
            CertificatesCertificatetemplateasset.CERTIFICATES_CERTIFICATETEMPLATEASSET,
            CertificatesCertificatewhitelist.CERTIFICATES_CERTIFICATEWHITELIST,
            CertificatesExamplecertificate.CERTIFICATES_EXAMPLECERTIFICATE,
            CertificatesExamplecertificateset.CERTIFICATES_EXAMPLECERTIFICATESET,
            CertificatesGeneratedcertificate.CERTIFICATES_GENERATEDCERTIFICATE,
            CommerceCommerceconfiguration.COMMERCE_COMMERCECONFIGURATION,
            ContentserverCourseassetcachettlconfig.CONTENTSERVER_COURSEASSETCACHETTLCONFIG,
            ContentstorePushnotificationconfig.CONTENTSTORE_PUSHNOTIFICATIONCONFIG,
            ContentstoreVideouploadconfig.CONTENTSTORE_VIDEOUPLOADCONFIG,
            CorsheadersCorsmodel.CORSHEADERS_CORSMODEL,
            CorsCsrfXdomainproxyconfiguration.CORS_CSRF_XDOMAINPROXYCONFIGURATION,
            CoursetalkCoursetalkwidgetconfiguration.COURSETALK_COURSETALKWIDGETCONFIGURATION,
            CoursewareOfflinecomputedgrade.COURSEWARE_OFFLINECOMPUTEDGRADE,
            CoursewareOfflinecomputedgradelog.COURSEWARE_OFFLINECOMPUTEDGRADELOG,
            CoursewareStudentfieldoverride.COURSEWARE_STUDENTFIELDOVERRIDE,
            CoursewareStudentmodule.COURSEWARE_STUDENTMODULE,
            CoursewareStudentmodulehistory.COURSEWARE_STUDENTMODULEHISTORY,
            CoursewareXmodulestudentinfofield.COURSEWARE_XMODULESTUDENTINFOFIELD,
            CoursewareXmodulestudentprefsfield.COURSEWARE_XMODULESTUDENTPREFSFIELD,
            CoursewareXmoduleuserstatesummaryfield.COURSEWARE_XMODULEUSERSTATESUMMARYFIELD,
            CourseActionStateCoursererunstate.COURSE_ACTION_STATE_COURSERERUNSTATE,
            CourseCreatorsCoursecreator.COURSE_CREATORS_COURSECREATOR,
            CourseGroupsCohortmembership.COURSE_GROUPS_COHORTMEMBERSHIP,
            CourseGroupsCoursecohort.COURSE_GROUPS_COURSECOHORT,
            CourseGroupsCoursecohortssettings.COURSE_GROUPS_COURSECOHORTSSETTINGS,
            CourseGroupsCourseusergroup.COURSE_GROUPS_COURSEUSERGROUP,
            CourseGroupsCourseusergrouppartitiongroup.COURSE_GROUPS_COURSEUSERGROUPPARTITIONGROUP,
            CourseGroupsCourseusergroupUsers.COURSE_GROUPS_COURSEUSERGROUP_USERS,
            CourseModesCoursemode.COURSE_MODES_COURSEMODE,
            CourseModesCoursemodeexpirationconfig.COURSE_MODES_COURSEMODEEXPIRATIONCONFIG,
            CourseModesCoursemodesarchive.COURSE_MODES_COURSEMODESARCHIVE,
            CourseOverviewsCourseoverview.COURSE_OVERVIEWS_COURSEOVERVIEW,
            CourseOverviewsCourseoverviewimageconfig.COURSE_OVERVIEWS_COURSEOVERVIEWIMAGECONFIG,
            CourseOverviewsCourseoverviewimageset.COURSE_OVERVIEWS_COURSEOVERVIEWIMAGESET,
            CourseOverviewsCourseoverviewtab.COURSE_OVERVIEWS_COURSEOVERVIEWTAB,
            CourseStructuresCoursestructure.COURSE_STRUCTURES_COURSESTRUCTURE,
            CredentialsCredentialsapiconfig.CREDENTIALS_CREDENTIALSAPICONFIG,
            CreditCreditconfig.CREDIT_CREDITCONFIG,
            CreditCreditcourse.CREDIT_CREDITCOURSE,
            CreditCrediteligibility.CREDIT_CREDITELIGIBILITY,
            CreditCreditprovider.CREDIT_CREDITPROVIDER,
            CreditCreditrequest.CREDIT_CREDITREQUEST,
            CreditCreditrequirement.CREDIT_CREDITREQUIREMENT,
            CreditCreditrequirementstatus.CREDIT_CREDITREQUIREMENTSTATUS,
            CreditHistoricalcreditrequest.CREDIT_HISTORICALCREDITREQUEST,
            CreditHistoricalcreditrequirementstatus.CREDIT_HISTORICALCREDITREQUIREMENTSTATUS,
            DarkLangDarklangconfig.DARK_LANG_DARKLANGCONFIG,
            DjangoAdminLog.DJANGO_ADMIN_LOG,
            DjangoCommentClientPermission.DJANGO_COMMENT_CLIENT_PERMISSION,
            DjangoCommentClientPermissionRoles.DJANGO_COMMENT_CLIENT_PERMISSION_ROLES,
            DjangoCommentClientRole.DJANGO_COMMENT_CLIENT_ROLE,
            DjangoCommentClientRoleUsers.DJANGO_COMMENT_CLIENT_ROLE_USERS,
            DjangoContentType.DJANGO_CONTENT_TYPE,
            DjangoMigrations.DJANGO_MIGRATIONS,
            DjangoOpenidAuthAssociation.DJANGO_OPENID_AUTH_ASSOCIATION,
            DjangoOpenidAuthNonce.DJANGO_OPENID_AUTH_NONCE,
            DjangoOpenidAuthUseropenid.DJANGO_OPENID_AUTH_USEROPENID,
            DjangoSession.DJANGO_SESSION,
            DjangoSite.DJANGO_SITE,
            DjceleryCrontabschedule.DJCELERY_CRONTABSCHEDULE,
            DjceleryIntervalschedule.DJCELERY_INTERVALSCHEDULE,
            DjceleryPeriodictask.DJCELERY_PERIODICTASK,
            DjceleryPeriodictasks.DJCELERY_PERIODICTASKS,
            DjceleryTaskstate.DJCELERY_TASKSTATE,
            DjceleryWorkerstate.DJCELERY_WORKERSTATE,
            EdxvalCoursevideo.EDXVAL_COURSEVIDEO,
            EdxvalEncodedvideo.EDXVAL_ENCODEDVIDEO,
            EdxvalProfile.EDXVAL_PROFILE,
            EdxvalSubtitle.EDXVAL_SUBTITLE,
            EdxvalVideo.EDXVAL_VIDEO,
            EmbargoCountry.EMBARGO_COUNTRY,
            EmbargoCountryaccessrule.EMBARGO_COUNTRYACCESSRULE,
            EmbargoCourseaccessrulehistory.EMBARGO_COURSEACCESSRULEHISTORY,
            EmbargoEmbargoedcourse.EMBARGO_EMBARGOEDCOURSE,
            EmbargoEmbargoedstate.EMBARGO_EMBARGOEDSTATE,
            EmbargoIpfilter.EMBARGO_IPFILTER,
            EmbargoRestrictedcourse.EMBARGO_RESTRICTEDCOURSE,
            ExternalAuthExternalauthmap.EXTERNAL_AUTH_EXTERNALAUTHMAP,
            InstructorTaskInstructortask.INSTRUCTOR_TASK_INSTRUCTORTASK,
            LmsXblockXblockasidesconfig.LMS_XBLOCK_XBLOCKASIDESCONFIG,
            MicrositeConfigurationHistoricalmicrositeorganizationmapping.MICROSITE_CONFIGURATION_HISTORICALMICROSITEORGANIZATIONMAPPING,
            MicrositeConfigurationHistoricalmicrositetemplate.MICROSITE_CONFIGURATION_HISTORICALMICROSITETEMPLATE,
            MicrositeConfigurationMicrosite.MICROSITE_CONFIGURATION_MICROSITE,
            MicrositeConfigurationMicrositehistory.MICROSITE_CONFIGURATION_MICROSITEHISTORY,
            MicrositeConfigurationMicrositeorganizationmapping.MICROSITE_CONFIGURATION_MICROSITEORGANIZATIONMAPPING,
            MicrositeConfigurationMicrositetemplate.MICROSITE_CONFIGURATION_MICROSITETEMPLATE,
            MilestonesCoursecontentmilestone.MILESTONES_COURSECONTENTMILESTONE,
            MilestonesCoursemilestone.MILESTONES_COURSEMILESTONE,
            MilestonesMilestone.MILESTONES_MILESTONE,
            MilestonesMilestonerelationshiptype.MILESTONES_MILESTONERELATIONSHIPTYPE,
            MilestonesUsermilestone.MILESTONES_USERMILESTONE,
            MobileApiAppversionconfig.MOBILE_API_APPVERSIONCONFIG,
            MobileApiMobileapiconfig.MOBILE_API_MOBILEAPICONFIG,
            NotesNote.NOTES_NOTE,
            NotifyNotification.NOTIFY_NOTIFICATION,
            NotifyNotificationtype.NOTIFY_NOTIFICATIONTYPE,
            NotifySettings.NOTIFY_SETTINGS,
            NotifySubscription.NOTIFY_SUBSCRIPTION,
            Oauth2Accesstoken.OAUTH2_ACCESSTOKEN,
            Oauth2Client.OAUTH2_CLIENT,
            Oauth2Grant.OAUTH2_GRANT,
            Oauth2ProviderAccesstoken.OAUTH2_PROVIDER_ACCESSTOKEN,
            Oauth2ProviderApplication.OAUTH2_PROVIDER_APPLICATION,
            Oauth2ProviderGrant.OAUTH2_PROVIDER_GRANT,
            Oauth2ProviderRefreshtoken.OAUTH2_PROVIDER_REFRESHTOKEN,
            Oauth2ProviderTrustedclient.OAUTH2_PROVIDER_TRUSTEDCLIENT,
            Oauth2Refreshtoken.OAUTH2_REFRESHTOKEN,
            OauthProviderConsumer.OAUTH_PROVIDER_CONSUMER,
            OauthProviderNonce.OAUTH_PROVIDER_NONCE,
            OauthProviderScope.OAUTH_PROVIDER_SCOPE,
            OauthProviderToken.OAUTH_PROVIDER_TOKEN,
            OrganizationsOrganization.ORGANIZATIONS_ORGANIZATION,
            OrganizationsOrganizationcourse.ORGANIZATIONS_ORGANIZATIONCOURSE,
            ProctoringProctoredexam.PROCTORING_PROCTOREDEXAM,
            ProctoringProctoredexamreviewpolicy.PROCTORING_PROCTOREDEXAMREVIEWPOLICY,
            ProctoringProctoredexamreviewpolicyhistory.PROCTORING_PROCTOREDEXAMREVIEWPOLICYHISTORY,
            ProctoringProctoredexamsoftwaresecurereview.PROCTORING_PROCTOREDEXAMSOFTWARESECUREREVIEW,
            ProctoringProctoredexamsoftwaresecurereviewhistory.PROCTORING_PROCTOREDEXAMSOFTWARESECUREREVIEWHISTORY,
            ProctoringProctoredexamstudentallowance.PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCE,
            ProctoringProctoredexamstudentallowancehistory.PROCTORING_PROCTOREDEXAMSTUDENTALLOWANCEHISTORY,
            ProctoringProctoredexamstudentattempt.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPT,
            ProctoringProctoredexamstudentattemptcomment.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTCOMMENT,
            ProctoringProctoredexamstudentattempthistory.PROCTORING_PROCTOREDEXAMSTUDENTATTEMPTHISTORY,
            ProgramsProgramsapiconfig.PROGRAMS_PROGRAMSAPICONFIG,
            RssProxyWhitelistedrssurl.RSS_PROXY_WHITELISTEDRSSURL,
            SelfPacedSelfpacedconfiguration.SELF_PACED_SELFPACEDCONFIGURATION,
            ShoppingcartCertificateitem.SHOPPINGCART_CERTIFICATEITEM,
            ShoppingcartCoupon.SHOPPINGCART_COUPON,
            ShoppingcartCouponredemption.SHOPPINGCART_COUPONREDEMPTION,
            ShoppingcartCourseregcodeitem.SHOPPINGCART_COURSEREGCODEITEM,
            ShoppingcartCourseregcodeitemannotation.SHOPPINGCART_COURSEREGCODEITEMANNOTATION,
            ShoppingcartCourseregistrationcode.SHOPPINGCART_COURSEREGISTRATIONCODE,
            ShoppingcartCourseregistrationcodeinvoiceitem.SHOPPINGCART_COURSEREGISTRATIONCODEINVOICEITEM,
            ShoppingcartDonation.SHOPPINGCART_DONATION,
            ShoppingcartDonationconfiguration.SHOPPINGCART_DONATIONCONFIGURATION,
            ShoppingcartInvoice.SHOPPINGCART_INVOICE,
            ShoppingcartInvoicehistory.SHOPPINGCART_INVOICEHISTORY,
            ShoppingcartInvoiceitem.SHOPPINGCART_INVOICEITEM,
            ShoppingcartInvoicetransaction.SHOPPINGCART_INVOICETRANSACTION,
            ShoppingcartOrder.SHOPPINGCART_ORDER,
            ShoppingcartOrderitem.SHOPPINGCART_ORDERITEM,
            ShoppingcartPaidcourseregistration.SHOPPINGCART_PAIDCOURSEREGISTRATION,
            ShoppingcartPaidcourseregistrationannotation.SHOPPINGCART_PAIDCOURSEREGISTRATIONANNOTATION,
            ShoppingcartRegistrationcoderedemption.SHOPPINGCART_REGISTRATIONCODEREDEMPTION,
            SiteConfigurationSiteconfiguration.SITE_CONFIGURATION_SITECONFIGURATION,
            SiteConfigurationSiteconfigurationhistory.SITE_CONFIGURATION_SITECONFIGURATIONHISTORY,
            SocialAuthAssociation.SOCIAL_AUTH_ASSOCIATION,
            SocialAuthCode.SOCIAL_AUTH_CODE,
            SocialAuthNonce.SOCIAL_AUTH_NONCE,
            SocialAuthUsersocialauth.SOCIAL_AUTH_USERSOCIALAUTH,
            SplashSplashconfig.SPLASH_SPLASHCONFIG,
            StaticReplaceAssetbaseurlconfig.STATIC_REPLACE_ASSETBASEURLCONFIG,
            StaticReplaceAssetexcludedextensionsconfig.STATIC_REPLACE_ASSETEXCLUDEDEXTENSIONSCONFIG,
            StatusCoursemessage.STATUS_COURSEMESSAGE,
            StatusGlobalstatusmessage.STATUS_GLOBALSTATUSMESSAGE,
            StudentAnonymoususerid.STUDENT_ANONYMOUSUSERID,
            StudentCourseaccessrole.STUDENT_COURSEACCESSROLE,
            StudentCourseenrollment.STUDENT_COURSEENROLLMENT,
            StudentCourseenrollmentallowed.STUDENT_COURSEENROLLMENTALLOWED,
            StudentCourseenrollmentattribute.STUDENT_COURSEENROLLMENTATTRIBUTE,
            StudentDashboardconfiguration.STUDENT_DASHBOARDCONFIGURATION,
            StudentEnrollmentrefundconfiguration.STUDENT_ENROLLMENTREFUNDCONFIGURATION,
            StudentEntranceexamconfiguration.STUDENT_ENTRANCEEXAMCONFIGURATION,
            StudentHistoricalcourseenrollment.STUDENT_HISTORICALCOURSEENROLLMENT,
            StudentLanguageproficiency.STUDENT_LANGUAGEPROFICIENCY,
            StudentLinkedinaddtoprofileconfiguration.STUDENT_LINKEDINADDTOPROFILECONFIGURATION,
            StudentLoginfailures.STUDENT_LOGINFAILURES,
            StudentManualenrollmentaudit.STUDENT_MANUALENROLLMENTAUDIT,
            StudentPasswordhistory.STUDENT_PASSWORDHISTORY,
            StudentPendingemailchange.STUDENT_PENDINGEMAILCHANGE,
            StudentPendingnamechange.STUDENT_PENDINGNAMECHANGE,
            StudentUsersignupsource.STUDENT_USERSIGNUPSOURCE,
            StudentUserstanding.STUDENT_USERSTANDING,
            StudentUsertestgroup.STUDENT_USERTESTGROUP,
            StudentUsertestgroupUsers.STUDENT_USERTESTGROUP_USERS,
            SubmissionsScore.SUBMISSIONS_SCORE,
            SubmissionsScoreannotation.SUBMISSIONS_SCOREANNOTATION,
            SubmissionsScoresummary.SUBMISSIONS_SCORESUMMARY,
            SubmissionsStudentitem.SUBMISSIONS_STUDENTITEM,
            SubmissionsSubmission.SUBMISSIONS_SUBMISSION,
            SurveySurveyanswer.SURVEY_SURVEYANSWER,
            SurveySurveyform.SURVEY_SURVEYFORM,
            TeamsCourseteam.TEAMS_COURSETEAM,
            TeamsCourseteammembership.TEAMS_COURSETEAMMEMBERSHIP,
            ThirdPartyAuthLtiproviderconfig.THIRD_PARTY_AUTH_LTIPROVIDERCONFIG,
            ThirdPartyAuthOauth2providerconfig.THIRD_PARTY_AUTH_OAUTH2PROVIDERCONFIG,
            ThirdPartyAuthProviderapipermissions.THIRD_PARTY_AUTH_PROVIDERAPIPERMISSIONS,
            ThirdPartyAuthSamlconfiguration.THIRD_PARTY_AUTH_SAMLCONFIGURATION,
            ThirdPartyAuthSamlproviderconfig.THIRD_PARTY_AUTH_SAMLPROVIDERCONFIG,
            ThirdPartyAuthSamlproviderdata.THIRD_PARTY_AUTH_SAMLPROVIDERDATA,
            ThumbnailKvstore.THUMBNAIL_KVSTORE,
            TrackTrackinglog.TRACK_TRACKINGLOG,
            UserApiUsercoursetag.USER_API_USERCOURSETAG,
            UserApiUserorgtag.USER_API_USERORGTAG,
            UserApiUserpreference.USER_API_USERPREFERENCE,
            UtilRatelimitconfiguration.UTIL_RATELIMITCONFIGURATION,
            VerifiedTrackContentVerifiedtrackcohortedcourse.VERIFIED_TRACK_CONTENT_VERIFIEDTRACKCOHORTEDCOURSE,
            VerifyStudentHistoricalverificationdeadline.VERIFY_STUDENT_HISTORICALVERIFICATIONDEADLINE,
            VerifyStudentIcrvstatusemailsconfiguration.VERIFY_STUDENT_ICRVSTATUSEMAILSCONFIGURATION,
            VerifyStudentIncoursereverificationconfiguration.VERIFY_STUDENT_INCOURSEREVERIFICATIONCONFIGURATION,
            VerifyStudentSkippedreverification.VERIFY_STUDENT_SKIPPEDREVERIFICATION,
            VerifyStudentSoftwaresecurephotoverification.VERIFY_STUDENT_SOFTWARESECUREPHOTOVERIFICATION,
            VerifyStudentVerificationcheckpoint.VERIFY_STUDENT_VERIFICATIONCHECKPOINT,
            VerifyStudentVerificationcheckpointPhotoVerification.VERIFY_STUDENT_VERIFICATIONCHECKPOINT_PHOTO_VERIFICATION,
            VerifyStudentVerificationdeadline.VERIFY_STUDENT_VERIFICATIONDEADLINE,
            VerifyStudentVerificationstatus.VERIFY_STUDENT_VERIFICATIONSTATUS,
            WikiArticle.WIKI_ARTICLE,
            WikiArticleforobject.WIKI_ARTICLEFOROBJECT,
            WikiArticleplugin.WIKI_ARTICLEPLUGIN,
            WikiArticlerevision.WIKI_ARTICLEREVISION,
            WikiAttachment.WIKI_ATTACHMENT,
            WikiAttachmentrevision.WIKI_ATTACHMENTREVISION,
            WikiImage.WIKI_IMAGE,
            WikiImagerevision.WIKI_IMAGEREVISION,
            WikiReusableplugin.WIKI_REUSABLEPLUGIN,
            WikiReusablepluginArticles.WIKI_REUSABLEPLUGIN_ARTICLES,
            WikiRevisionplugin.WIKI_REVISIONPLUGIN,
            WikiRevisionpluginrevision.WIKI_REVISIONPLUGINREVISION,
            WikiSimpleplugin.WIKI_SIMPLEPLUGIN,
            WikiUrlpath.WIKI_URLPATH,
            WorkflowAssessmentworkflow.WORKFLOW_ASSESSMENTWORKFLOW,
            WorkflowAssessmentworkflowcancellation.WORKFLOW_ASSESSMENTWORKFLOWCANCELLATION,
            WorkflowAssessmentworkflowstep.WORKFLOW_ASSESSMENTWORKFLOWSTEP,
            XblockConfigStudioconfig.XBLOCK_CONFIG_STUDIOCONFIG,
            XblockDjangoXblockdisableconfig.XBLOCK_DJANGO_XBLOCKDISABLECONFIG);
    }
}
